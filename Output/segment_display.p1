Version 4.0 HI-TECH Software Intermediate Code
"32 ./dcf77_decoder.h
[; ;./dcf77_decoder.h: 32: {
[s S2 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S2 . minutes hours day_of_week day month year ]
"46 segment_display.c
[; ;segment_display.c: 46: static const uint8_t date_segment_coding[] =
[v _date_segment_coding `Cuc ~T0 @X0 -> 10 `i s ]
[i _date_segment_coding
:U ..
-> -> 63 `i `uc
-> -> 6 `i `uc
-> -> 91 `i `uc
-> -> 79 `i `uc
-> -> 102 `i `uc
-> -> 109 `i `uc
-> -> 125 `i `uc
-> -> 7 `i `uc
-> -> 127 `i `uc
-> -> 111 `i `uc
..
]
[v F118 `Cuc ~T0 @X0 -> 2 `i t ]
[v F117 `F118 ~T0 @X0 -> 3 `i t ]
"52
[; ;segment_display.c: 52: static const uint8_t day_segment_coding[7][3][2] =
[v _day_segment_coding `F117 ~T0 @X0 -> 7 `i s ]
[i _day_segment_coding
:U ..
:U ..
:U ..
-> -> 140 `i `uc
-> -> 76 `i `uc
..
:U ..
-> -> 137 `i `uc
-> -> 203 `i `uc
..
:U ..
-> -> 140 `i `uc
-> -> 104 `i `uc
..
..
:U ..
:U ..
-> -> 144 `i `uc
-> -> 217 `i `uc
..
:U ..
-> -> 34 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 140 `i `uc
-> -> 104 `i `uc
..
..
:U ..
:U ..
-> -> 140 `i `uc
-> -> 76 `i `uc
..
:U ..
-> -> 34 `i `uc
-> -> 0 `i `uc
..
:U ..
-> -> 35 `i `uc
-> -> 2 `i `uc
..
..
:U ..
:U ..
-> -> 144 `i `uc
-> -> 217 `i `uc
..
:U ..
-> -> 137 `i `uc
-> -> 203 `i `uc
..
:U ..
-> -> 140 `i `uc
-> -> 104 `i `uc
..
..
:U ..
:U ..
-> -> 153 `i `uc
-> -> 2 `i `uc
..
:U ..
-> -> 153 `i `uc
-> -> 58 `i `uc
..
:U ..
-> -> 153 `i `uc
-> -> 131 `i `uc
..
..
:U ..
:U ..
-> -> 25 `i `uc
-> -> 211 `i `uc
..
:U ..
-> -> 153 `i `uc
-> -> 90 `i `uc
..
:U ..
-> -> 140 `i `uc
-> -> 76 `i `uc
..
..
:U ..
:U ..
-> -> 25 `i `uc
-> -> 211 `i `uc
..
:U ..
-> -> 137 `i `uc
-> -> 203 `i `uc
..
:U ..
-> -> 140 `i `uc
-> -> 104 `i `uc
..
..
..
]
"109
[; ;segment_display.c: 109: static const uint8_t time_segment_coding[] =
[v _time_segment_coding `Cuc ~T0 @X0 -> 10 `i s ]
[i _time_segment_coding
:U ..
-> -> 190 `i `uc
-> -> 18 `i `uc
-> -> 124 `i `uc
-> -> 118 `i `uc
-> -> 210 `i `uc
-> -> 230 `i `uc
-> -> 238 `i `uc
-> -> 50 `i `uc
-> -> 254 `i `uc
-> -> 246 `i `uc
..
]
"115
[; ;segment_display.c: 115: uint8_t get_date_data(time *p_time, uint8_t date_segment)
[v _get_date_data `(uc ~T0 @X0 1 ef2`*S2`uc ]
"116
[; ;segment_display.c: 116: {
{
[e :U _get_date_data ]
"115
[; ;segment_display.c: 115: uint8_t get_date_data(time *p_time, uint8_t date_segment)
[v _p_time `*S2 ~T0 @X0 1 r1 ]
[v _date_segment `uc ~T0 @X0 1 r2 ]
"116
[; ;segment_display.c: 116: {
[f ]
"117
[; ;segment_display.c: 117:   uint8_t value = 0u;
[v _value `uc ~T0 @X0 1 a ]
[e = _value -> -> 0 `ui `uc ]
"118
[; ;segment_display.c: 118:   if(p_time != (0))
[e $ ! != _p_time -> -> 0 `i `*S2 4  ]
"119
[; ;segment_display.c: 119:   {
{
"120
[; ;segment_display.c: 120:     switch (date_segment)
[e $U 6  ]
"121
[; ;segment_display.c: 121:     {
{
"122
[; ;segment_display.c: 122:       case 0u:
[e :U 7 ]
"123
[; ;segment_display.c: 123:         value = date_segment_coding[p_time->year % 10u];
[e = _value *U + &U _date_segment_coding * -> % -> . *U _p_time 5 `ui -> 10 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux ]
"124
[; ;segment_display.c: 124:         break;
[e $U 5  ]
"125
[; ;segment_display.c: 125:       case 1u:
[e :U 8 ]
"126
[; ;segment_display.c: 126:         value = date_segment_coding[p_time->year / 10u];
[e = _value *U + &U _date_segment_coding * -> / -> . *U _p_time 5 `ui -> 10 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux ]
"127
[; ;segment_display.c: 127:         break;
[e $U 5  ]
"129
[; ;segment_display.c: 129:       case 2u:
[e :U 9 ]
"130
[; ;segment_display.c: 130:         value = date_segment_coding[0u];
[e = _value *U + &U _date_segment_coding * -> -> 0 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux ]
"131
[; ;segment_display.c: 131:         break;
[e $U 5  ]
"132
[; ;segment_display.c: 132:       case 3u:
[e :U 10 ]
"133
[; ;segment_display.c: 133:         value = date_segment_coding[2u];
[e = _value *U + &U _date_segment_coding * -> -> 2 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux ]
"134
[; ;segment_display.c: 134:         break;
[e $U 5  ]
"135
[; ;segment_display.c: 135:       case 4u:
[e :U 11 ]
"136
[; ;segment_display.c: 136:         value = date_segment_coding[p_time->month % 10u] + 128u;
[e = _value -> + -> *U + &U _date_segment_coding * -> % -> . *U _p_time 4 `ui -> 10 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux `ui -> 128 `ui `uc ]
"137
[; ;segment_display.c: 137:         break;
[e $U 5  ]
"138
[; ;segment_display.c: 138:       case 5u:
[e :U 12 ]
"139
[; ;segment_display.c: 139:         value = date_segment_coding[p_time->month / 10u];
[e = _value *U + &U _date_segment_coding * -> / -> . *U _p_time 4 `ui -> 10 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux ]
"140
[; ;segment_display.c: 140:         break;
[e $U 5  ]
"141
[; ;segment_display.c: 141:       case 6u:
[e :U 13 ]
"142
[; ;segment_display.c: 142:         value = date_segment_coding[p_time->day % 10u] + 128u;
[e = _value -> + -> *U + &U _date_segment_coding * -> % -> . *U _p_time 3 `ui -> 10 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux `ui -> 128 `ui `uc ]
"143
[; ;segment_display.c: 143:         break;
[e $U 5  ]
"144
[; ;segment_display.c: 144:       case 7u:
[e :U 14 ]
"145
[; ;segment_display.c: 145:         value = date_segment_coding[p_time->day / 10u];
[e = _value *U + &U _date_segment_coding * -> / -> . *U _p_time 3 `ui -> 10 `ui `ux -> -> # *U &U _date_segment_coding `ui `ux ]
"146
[; ;segment_display.c: 146:         break;
[e $U 5  ]
"147
[; ;segment_display.c: 147:       default:
[e :U 15 ]
"148
[; ;segment_display.c: 148:         value = 0u;
[e = _value -> -> 0 `ui `uc ]
"149
[; ;segment_display.c: 149:         break;
[e $U 5  ]
"150
[; ;segment_display.c: 150:     }
}
[e $U 5  ]
[e :U 6 ]
[e [\ -> _date_segment `i , $ -> -> 0 `ui `i 7
 , $ -> -> 1 `ui `i 8
 , $ -> -> 2 `ui `i 9
 , $ -> -> 3 `ui `i 10
 , $ -> -> 4 `ui `i 11
 , $ -> -> 5 `ui `i 12
 , $ -> -> 6 `ui `i 13
 , $ -> -> 7 `ui `i 14
 15 ]
[e :U 5 ]
"151
[; ;segment_display.c: 151:   }
}
[e :U 4 ]
"152
[; ;segment_display.c: 152:   return value;
[e ) _value ]
[e $UE 3  ]
"153
[; ;segment_display.c: 153: }
[e :UE 3 ]
}
"155
[; ;segment_display.c: 155: uint8_t get_day_data(time *p_time, uint8_t day_segment, uint8_t byte)
[v _get_day_data `(uc ~T0 @X0 1 ef3`*S2`uc`uc ]
"156
[; ;segment_display.c: 156: {
{
[e :U _get_day_data ]
"155
[; ;segment_display.c: 155: uint8_t get_day_data(time *p_time, uint8_t day_segment, uint8_t byte)
[v _p_time `*S2 ~T0 @X0 1 r1 ]
[v _day_segment `uc ~T0 @X0 1 r2 ]
[v _byte `uc ~T0 @X0 1 r3 ]
"156
[; ;segment_display.c: 156: {
[f ]
"157
[; ;segment_display.c: 157:   uint8_t data = 0u;
[v _data `uc ~T0 @X0 1 a ]
[e = _data -> -> 0 `ui `uc ]
"158
[; ;segment_display.c: 158:   if(p_time != (0))
[e $ ! != _p_time -> -> 0 `i `*S2 17  ]
"159
[; ;segment_display.c: 159:   {
{
"160
[; ;segment_display.c: 160:     if((p_time->day_of_week > 0u) && (p_time->day_of_week < 8u))
[e $ ! && > -> . *U _p_time 2 `ui -> 0 `ui < -> . *U _p_time 2 `ui -> 8 `ui 18  ]
"161
[; ;segment_display.c: 161:     {
{
"162
[; ;segment_display.c: 162:       if((day_segment < 3u) && (byte < 2u))
[e $ ! && < -> _day_segment `ui -> 3 `ui < -> _byte `ui -> 2 `ui 19  ]
"163
[; ;segment_display.c: 163:       {
{
"164
[; ;segment_display.c: 164:         data = day_segment_coding[p_time->day_of_week - 1u][day_segment][byte];
[e = _data *U + &U *U + &U *U + &U _day_segment_coding * -> - -> . *U _p_time 2 `ui -> 1 `ui `ux -> * * -> # *U &U *U &U _day_segment_coding `ui -> -> 3 `i `ui -> -> 2 `i `ui `ux * -> _day_segment `ux -> * -> # *U &U *U &U *U + &U _day_segment_coding * -> - -> . *U _p_time 2 `ui -> 1 `ui `ux -> * * -> # *U &U *U &U _day_segment_coding `ui -> -> 3 `i `ui -> -> 2 `i `ui `ux `ui -> -> 2 `i `ui `ux * -> _byte `ux -> -> # *U &U *U + &U *U + &U _day_segment_coding * -> - -> . *U _p_time 2 `ui -> 1 `ui `ux -> * * -> # *U &U *U &U _day_segment_coding `ui -> -> 3 `i `ui -> -> 2 `i `ui `ux * -> _day_segment `ux -> * -> # *U &U *U &U *U + &U _day_segment_coding * -> - -> . *U _p_time 2 `ui -> 1 `ui `ux -> * * -> # *U &U *U &U _day_segment_coding `ui -> -> 3 `i `ui -> -> 2 `i `ui `ux `ui -> -> 2 `i `ui `ux `ui `ux ]
"165
[; ;segment_display.c: 165:       }
}
[e :U 19 ]
"166
[; ;segment_display.c: 166:     }
}
[e :U 18 ]
"167
[; ;segment_display.c: 167:   }
}
[e :U 17 ]
"168
[; ;segment_display.c: 168:   return data;
[e ) _data ]
[e $UE 16  ]
"169
[; ;segment_display.c: 169: }
[e :UE 16 ]
}
"171
[; ;segment_display.c: 171: uint8_t get_time_data(time *p_time, uint8_t time_segment)
[v _get_time_data `(uc ~T0 @X0 1 ef2`*S2`uc ]
"172
[; ;segment_display.c: 172: {
{
[e :U _get_time_data ]
"171
[; ;segment_display.c: 171: uint8_t get_time_data(time *p_time, uint8_t time_segment)
[v _p_time `*S2 ~T0 @X0 1 r1 ]
[v _time_segment `uc ~T0 @X0 1 r2 ]
"172
[; ;segment_display.c: 172: {
[f ]
"173
[; ;segment_display.c: 173:   uint8_t data = 0;
[v _data `uc ~T0 @X0 1 a ]
[e = _data -> -> 0 `i `uc ]
"174
[; ;segment_display.c: 174:   if(p_time != (0))
[e $ ! != _p_time -> -> 0 `i `*S2 21  ]
"175
[; ;segment_display.c: 175:   {
{
"176
[; ;segment_display.c: 176:     switch (time_segment)
[e $U 23  ]
"177
[; ;segment_display.c: 177:     {
{
"178
[; ;segment_display.c: 178:       case 0:
[e :U 24 ]
"179
[; ;segment_display.c: 179:         if((p_time->hours > 10u) && (p_time->hours < 24u))
[e $ ! && > -> . *U _p_time 1 `ui -> 10 `ui < -> . *U _p_time 1 `ui -> 24 `ui 25  ]
"180
[; ;segment_display.c: 180:         {
{
"181
[; ;segment_display.c: 181:           data = time_segment_coding[p_time->hours / 10u];
[e = _data *U + &U _time_segment_coding * -> / -> . *U _p_time 1 `ui -> 10 `ui `ux -> -> # *U &U _time_segment_coding `ui `ux ]
"182
[; ;segment_display.c: 182:         }
}
[e :U 25 ]
"183
[; ;segment_display.c: 183:         break;
[e $U 22  ]
"184
[; ;segment_display.c: 184:       case 1:
[e :U 26 ]
"185
[; ;segment_display.c: 185:         if(p_time->hours < 24u)
[e $ ! < -> . *U _p_time 1 `ui -> 24 `ui 27  ]
"186
[; ;segment_display.c: 186:         {
{
"187
[; ;segment_display.c: 187:           data = time_segment_coding[p_time->hours % 10u] + 1u;
[e = _data -> + -> *U + &U _time_segment_coding * -> % -> . *U _p_time 1 `ui -> 10 `ui `ux -> -> # *U &U _time_segment_coding `ui `ux `ui -> 1 `ui `uc ]
"188
[; ;segment_display.c: 188:         }
}
[e :U 27 ]
"189
[; ;segment_display.c: 189:         break;
[e $U 22  ]
"190
[; ;segment_display.c: 190:       case 2:
[e :U 28 ]
"191
[; ;segment_display.c: 191:         if(p_time->minutes < 60u)
[e $ ! < -> . *U _p_time 0 `ui -> 60 `ui 29  ]
"192
[; ;segment_display.c: 192:         {
{
"193
[; ;segment_display.c: 193:           data = time_segment_coding[p_time->minutes / 10u];
[e = _data *U + &U _time_segment_coding * -> / -> . *U _p_time 0 `ui -> 10 `ui `ux -> -> # *U &U _time_segment_coding `ui `ux ]
"194
[; ;segment_display.c: 194:         }
}
[e :U 29 ]
"195
[; ;segment_display.c: 195:         break;
[e $U 22  ]
"196
[; ;segment_display.c: 196:       case 3:
[e :U 30 ]
"197
[; ;segment_display.c: 197:         if(p_time->minutes < 60u)
[e $ ! < -> . *U _p_time 0 `ui -> 60 `ui 31  ]
"198
[; ;segment_display.c: 198:         {
{
"199
[; ;segment_display.c: 199:           data = time_segment_coding[p_time->minutes % 10u] + 1u;
[e = _data -> + -> *U + &U _time_segment_coding * -> % -> . *U _p_time 0 `ui -> 10 `ui `ux -> -> # *U &U _time_segment_coding `ui `ux `ui -> 1 `ui `uc ]
"200
[; ;segment_display.c: 200:         }
}
[e :U 31 ]
"201
[; ;segment_display.c: 201:         break;
[e $U 22  ]
"202
[; ;segment_display.c: 202:       default:
[e :U 32 ]
"203
[; ;segment_display.c: 203:         break;
[e $U 22  ]
"204
[; ;segment_display.c: 204:     }
}
[e $U 22  ]
[e :U 23 ]
[e [\ -> _time_segment `i , $ -> 0 `i 24
 , $ -> 1 `i 26
 , $ -> 2 `i 28
 , $ -> 3 `i 30
 32 ]
[e :U 22 ]
"205
[; ;segment_display.c: 205:   }
}
[e :U 21 ]
"206
[; ;segment_display.c: 206:   return data;
[e ) _data ]
[e $UE 20  ]
"207
[; ;segment_display.c: 207: }
[e :UE 20 ]
}
"209
[; ;segment_display.c: 209: uint8_t get_time_data_seconds(uint8_t seconds, uint8_t time_segment)
[v _get_time_data_seconds `(uc ~T0 @X0 1 ef2`uc`uc ]
"210
[; ;segment_display.c: 210: {
{
[e :U _get_time_data_seconds ]
"209
[; ;segment_display.c: 209: uint8_t get_time_data_seconds(uint8_t seconds, uint8_t time_segment)
[v _seconds `uc ~T0 @X0 1 r1 ]
[v _time_segment `uc ~T0 @X0 1 r2 ]
"210
[; ;segment_display.c: 210: {
[f ]
"211
[; ;segment_display.c: 211:   uint8_t data = 0u;
[v _data `uc ~T0 @X0 1 a ]
[e = _data -> -> 0 `ui `uc ]
"212
[; ;segment_display.c: 212:   if(seconds < 60u)
[e $ ! < -> _seconds `ui -> 60 `ui 34  ]
"213
[; ;segment_display.c: 213:   {
{
"214
[; ;segment_display.c: 214:     if(time_segment == 4u)
[e $ ! == -> _time_segment `ui -> 4 `ui 35  ]
"215
[; ;segment_display.c: 215:     {
{
"216
[; ;segment_display.c: 216:       data = time_segment_coding[seconds / 10u];
[e = _data *U + &U _time_segment_coding * -> / -> _seconds `ui -> 10 `ui `ux -> -> # *U &U _time_segment_coding `ui `ux ]
"217
[; ;segment_display.c: 217:     }
}
[e $U 36  ]
"218
[; ;segment_display.c: 218:     else if(time_segment == 5u)
[e :U 35 ]
[e $ ! == -> _time_segment `ui -> 5 `ui 37  ]
"219
[; ;segment_display.c: 219:     {
{
"220
[; ;segment_display.c: 220:       data = time_segment_coding[seconds % 10u];
[e = _data *U + &U _time_segment_coding * -> % -> _seconds `ui -> 10 `ui `ux -> -> # *U &U _time_segment_coding `ui `ux ]
"221
[; ;segment_display.c: 221:     }
}
[e $U 38  ]
"222
[; ;segment_display.c: 222:     else
[e :U 37 ]
"223
[; ;segment_display.c: 223:     {
{
"225
[; ;segment_display.c: 225:     }
}
[e :U 38 ]
[e :U 36 ]
"226
[; ;segment_display.c: 226:   }
}
[e :U 34 ]
"227
[; ;segment_display.c: 227:   return data;
[e ) _data ]
[e $UE 33  ]
"228
[; ;segment_display.c: 228: }
[e :UE 33 ]
}
