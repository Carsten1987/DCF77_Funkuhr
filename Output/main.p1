Version 4.0 HI-TECH Software Intermediate Code
"32 ./dcf77_decoder.h
[; ;./dcf77_decoder.h: 32: {
[s S81 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 `uc 1 ]
[n S81 . minutes hours day_of_week day month year ]
[t ~ __interrupt . k ]
[t T1 __interrupt ]
"2214 D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2214: extern volatile __bit TMR1IF __attribute__((address(0x60)));
[v _TMR1IF `Vb ~T0 @X0 0 e@96 ]
"529
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 529: extern volatile unsigned char TMR1H __attribute__((address(0x00F)));
[v _TMR1H `Vuc ~T0 @X0 0 e@15 ]
"522
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 522: extern volatile unsigned char TMR1L __attribute__((address(0x00E)));
[v _TMR1L `Vuc ~T0 @X0 0 e@14 ]
"2109
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2109: extern volatile __bit RCIF __attribute__((address(0x65)));
[v _RCIF `Vb ~T0 @X0 0 e@101 ]
"2106
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2106: extern volatile __bit RCIE __attribute__((address(0x465)));
[v _RCIE `Vb ~T0 @X0 0 e@1125 ]
"2328
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2328: extern volatile __bit TXIF __attribute__((address(0x64)));
[v _TXIF `Vb ~T0 @X0 0 e@100 ]
"2325
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2325: extern volatile __bit TXIE __attribute__((address(0x464)));
[v _TXIE `Vb ~T0 @X0 0 e@1124 ]
"926
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 926: extern volatile unsigned char TXREG __attribute__((address(0x019)));
[v _TXREG `Vuc ~T0 @X0 0 e@25 ]
"1992
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1992: extern volatile __bit INTF __attribute__((address(0x59)));
[v _INTF `Vb ~T0 @X0 0 e@89 ]
"1989
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1989: extern volatile __bit INTEDG __attribute__((address(0x40E)));
[v _INTEDG `Vb ~T0 @X0 0 e@1038 ]
[p mainexit ]
"28 ./bsp.h
[; ;./bsp.h: 28: void init(void);
[v _init `(v ~T0 @X0 0 ef ]
"2046 D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2046: extern volatile __bit RB1 __attribute__((address(0x31)));
[v _RB1 `Vb ~T0 @X0 0 e@49 ]
"2058
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2058: extern volatile __bit RB5 __attribute__((address(0x35)));
[v _RB5 `Vb ~T0 @X0 0 e@53 ]
"37 D:\Program Files\Microchip\xc8\v2.32\pic\include\c90\string.h
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\c90\string.h: 37: extern char * strcpy(char *, const char *);
[v _strcpy `(*uc ~T0 @X0 0 ef2`*uc`*Cuc ]
"56
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\c90\string.h: 56: extern size_t strlen(const char *);
[v _strlen `(ui ~T0 @X0 0 ef1`*Cuc ]
"43 ./dcf77_decoder.h
[; ;./dcf77_decoder.h: 43: void minute_gone(uint8_t bit_counter);
[v _minute_gone `(v ~T0 @X0 0 ef1`uc ]
"42
[; ;./dcf77_decoder.h: 42: void get_time(time *p_time);
[v _get_time `(v ~T0 @X0 0 ef1`*S81 ]
"30 ./print_date.h
[; ;./print_date.h: 30: uint8_t make_time(char buffer[], time *p_time);
[v _make_time `(uc ~T0 @X0 0 ef2`*uc`*S81 ]
"41 ./dcf77_decoder.h
[; ;./dcf77_decoder.h: 41: void new_bit(uint8_t bit_number, uint8_t value);
[v _new_bit `(v ~T0 @X0 0 ef2`uc`uc ]
"2151 D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2151: extern volatile __bit SSPIF __attribute__((address(0x63)));
[v _SSPIF `Vb ~T0 @X0 0 e@99 ]
"2334
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2334: extern volatile __bit WCOL __attribute__((address(0xA7)));
[v _WCOL `Vb ~T0 @X0 0 e@167 ]
"2049
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2049: extern volatile __bit RB2 __attribute__((address(0x32)));
[v _RB2 `Vb ~T0 @X0 0 e@50 ]
"2055
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2055: extern volatile __bit RB4 __attribute__((address(0x34)));
[v _RB4 `Vb ~T0 @X0 0 e@52 ]
"2052
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 2052: extern volatile __bit RB3 __attribute__((address(0x33)));
[v _RB3 `Vb ~T0 @X0 0 e@51 ]
"680
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 680: extern volatile unsigned char SSPBUF __attribute__((address(0x013)));
[v _SSPBUF `Vuc ~T0 @X0 0 e@19 ]
"33 ./segment_display.h
[; ;./segment_display.h: 33: uint8_t get_time_data(time *p_time, uint8_t time_segment);
[v _get_time_data `(uc ~T0 @X0 0 ef2`*S81`uc ]
"34
[; ;./segment_display.h: 34: uint8_t get_time_data_seconds(uint8_t seconds, uint8_t time_segment);
[v _get_time_data_seconds `(uc ~T0 @X0 0 ef2`uc`uc ]
"31
[; ;./segment_display.h: 31: uint8_t get_date_data(time *p_time, uint8_t date_segment);
[v _get_date_data `(uc ~T0 @X0 0 ef2`*S81`uc ]
"32
[; ;./segment_display.h: 32: uint8_t get_day_data(time *p_time, uint8_t day_segment, uint8_t byte);
[v _get_day_data `(uc ~T0 @X0 0 ef3`*S81`uc`uc ]
"55 D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 55: __asm("INDF equ 00h");
[; <" INDF equ 00h ;# ">
"62
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 62: __asm("TMR0 equ 01h");
[; <" TMR0 equ 01h ;# ">
"69
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 69: __asm("PCL equ 02h");
[; <" PCL equ 02h ;# ">
"76
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 76: __asm("STATUS equ 03h");
[; <" STATUS equ 03h ;# ">
"162
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 162: __asm("FSR equ 04h");
[; <" FSR equ 04h ;# ">
"169
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 169: __asm("PORTA equ 05h");
[; <" PORTA equ 05h ;# ">
"219
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 219: __asm("PORTB equ 06h");
[; <" PORTB equ 06h ;# ">
"281
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 281: __asm("PORTC equ 07h");
[; <" PORTC equ 07h ;# ">
"343
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 343: __asm("PCLATH equ 0Ah");
[; <" PCLATH equ 0Ah ;# ">
"363
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 363: __asm("INTCON equ 0Bh");
[; <" INTCON equ 0Bh ;# ">
"441
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 441: __asm("PIR1 equ 0Ch");
[; <" PIR1 equ 0Ch ;# ">
"497
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 497: __asm("PIR2 equ 0Dh");
[; <" PIR2 equ 0Dh ;# ">
"517
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 517: __asm("TMR1 equ 0Eh");
[; <" TMR1 equ 0Eh ;# ">
"524
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 524: __asm("TMR1L equ 0Eh");
[; <" TMR1L equ 0Eh ;# ">
"531
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 531: __asm("TMR1H equ 0Fh");
[; <" TMR1H equ 0Fh ;# ">
"538
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 538: __asm("T1CON equ 010h");
[; <" T1CON equ 010h ;# ">
"604
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 604: __asm("TMR2 equ 011h");
[; <" TMR2 equ 011h ;# ">
"611
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 611: __asm("T2CON equ 012h");
[; <" T2CON equ 012h ;# ">
"682
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 682: __asm("SSPBUF equ 013h");
[; <" SSPBUF equ 013h ;# ">
"689
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 689: __asm("SSPCON equ 014h");
[; <" SSPCON equ 014h ;# ">
"759
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 759: __asm("CCPR1 equ 015h");
[; <" CCPR1 equ 015h ;# ">
"766
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 766: __asm("CCPR1L equ 015h");
[; <" CCPR1L equ 015h ;# ">
"773
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 773: __asm("CCPR1H equ 016h");
[; <" CCPR1H equ 016h ;# ">
"780
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 780: __asm("CCP1CON equ 017h");
[; <" CCP1CON equ 017h ;# ">
"838
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 838: __asm("RCSTA equ 018h");
[; <" RCSTA equ 018h ;# ">
"928
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 928: __asm("TXREG equ 019h");
[; <" TXREG equ 019h ;# ">
"935
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 935: __asm("RCREG equ 01Ah");
[; <" RCREG equ 01Ah ;# ">
"942
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 942: __asm("CCPR2 equ 01Bh");
[; <" CCPR2 equ 01Bh ;# ">
"949
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 949: __asm("CCPR2L equ 01Bh");
[; <" CCPR2L equ 01Bh ;# ">
"956
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 956: __asm("CCPR2H equ 01Ch");
[; <" CCPR2H equ 01Ch ;# ">
"963
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 963: __asm("CCP2CON equ 01Dh");
[; <" CCP2CON equ 01Dh ;# ">
"1021
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1021: __asm("ADRES equ 01Eh");
[; <" ADRES equ 01Eh ;# ">
"1041
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1041: __asm("ADCON0 equ 01Fh");
[; <" ADCON0 equ 01Fh ;# ">
"1137
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1137: __asm("OPTION_REG equ 081h");
[; <" OPTION_REG equ 081h ;# ">
"1207
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1207: __asm("TRISA equ 085h");
[; <" TRISA equ 085h ;# ">
"1257
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1257: __asm("TRISB equ 086h");
[; <" TRISB equ 086h ;# ">
"1319
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1319: __asm("TRISC equ 087h");
[; <" TRISC equ 087h ;# ">
"1381
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1381: __asm("PIE1 equ 08Ch");
[; <" PIE1 equ 08Ch ;# ">
"1437
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1437: __asm("PIE2 equ 08Dh");
[; <" PIE2 equ 08Dh ;# ">
"1457
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1457: __asm("PCON equ 08Eh");
[; <" PCON equ 08Eh ;# ">
"1491
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1491: __asm("PR2 equ 092h");
[; <" PR2 equ 092h ;# ">
"1498
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1498: __asm("SSPADD equ 093h");
[; <" SSPADD equ 093h ;# ">
"1505
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1505: __asm("SSPSTAT equ 094h");
[; <" SSPSTAT equ 094h ;# ">
"1674
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1674: __asm("TXSTA equ 098h");
[; <" TXSTA equ 098h ;# ">
"1755
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1755: __asm("SPBRG equ 099h");
[; <" SPBRG equ 099h ;# ">
"1762
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1762: __asm("ADCON1 equ 09Fh");
[; <" ADCON1 equ 09Fh ;# ">
"1802
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1802: __asm("PMDATA equ 010Ch");
[; <" PMDATA equ 010Ch ;# ">
"1809
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1809: __asm("PMADR equ 010Dh");
[; <" PMADR equ 010Dh ;# ">
"1816
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1816: __asm("PMDATH equ 010Eh");
[; <" PMDATH equ 010Eh ;# ">
"1823
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1823: __asm("PMADRH equ 010Fh");
[; <" PMADRH equ 010Fh ;# ">
"1830
[; ;D:\Program Files\Microchip\xc8\v2.32\pic\include\proc\pic16f73.h: 1830: __asm("PMCON1 equ 018Ch");
[; <" PMCON1 equ 018Ch ;# ">
"28 ./device_config.h
[p x CP  =  OFF ]
"29
[p x BOREN  =  ON ]
"33
[p x PWRTE  =  OFF ]
"35
[p x WDTE  =  OFF ]
"36
[p x FOSC  =  HS ]
"50 main.c
[; ;main.c: 50: static char buffer[40] = { 0 };
[v _buffer `uc ~T0 @X0 -> 40 `i s ]
[i _buffer
:U ..
-> -> 0 `i `uc
..
]
"51
[; ;main.c: 51: static volatile uint8_t in = 0;
[v _in `Vuc ~T0 @X0 1 s ]
[i _in
-> -> 0 `i `uc
]
"52
[; ;main.c: 52: static volatile uint8_t out = 0;
[v _out `Vuc ~T0 @X0 1 s ]
[i _out
-> -> 0 `i `uc
]
"54
[; ;main.c: 54: static volatile uint16_t ms_counter = 0;
[v _ms_counter `Vui ~T0 @X0 1 s ]
[i _ms_counter
-> -> 0 `i `ui
]
"55
[; ;main.c: 55: static volatile uint16_t new_value = 0;
[v _new_value `Vui ~T0 @X0 1 s ]
[i _new_value
-> -> 0 `i `ui
]
"56
[; ;main.c: 56: static volatile uint16_t pause = 0;
[v _pause `Vui ~T0 @X0 1 s ]
[i _pause
-> -> 0 `i `ui
]
"57
[; ;main.c: 57: static volatile uint8_t bit_counter = 0;
[v _bit_counter `Vuc ~T0 @X0 1 s ]
[i _bit_counter
-> -> 0 `i `uc
]
"58
[; ;main.c: 58: static volatile uint16_t milli_seconds = 0;
[v _milli_seconds `Vui ~T0 @X0 1 s ]
[i _milli_seconds
-> -> 0 `i `ui
]
"59
[; ;main.c: 59: static volatile uint8_t seconds = 0;
[v _seconds `Vuc ~T0 @X0 1 s ]
[i _seconds
-> -> 0 `i `uc
]
"60
[; ;main.c: 60: static time current_time = {
[v _current_time `S81 ~T0 @X0 1 s ]
[i _current_time
:U ..
:U ..
-> -> 0 `i `uc
-> -> 0 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 1 `i `uc
-> -> 20 `i `uc
..
..
]
"69
[; ;main.c: 69: static uint8_t date_segment = 0;
[v _date_segment `uc ~T0 @X0 1 s ]
[i _date_segment
-> -> 0 `i `uc
]
"70
[; ;main.c: 70: static uint8_t day_segment = 0;
[v _day_segment `uc ~T0 @X0 1 s ]
[i _day_segment
-> -> 0 `i `uc
]
"71
[; ;main.c: 71: static uint8_t spi_buffer[11] = { 0 };
[v _spi_buffer `uc ~T0 @X0 -> 11 `i s ]
[i _spi_buffer
:U ..
-> -> 0 `i `uc
..
]
"72
[; ;main.c: 72: static uint8_t out_pos = 0;
[v _out_pos `uc ~T0 @X0 1 s ]
[i _out_pos
-> -> 0 `i `uc
]
[v $root$_isr `(v ~T0 @X0 0 e ]
"75
[; ;main.c: 75: void __attribute__((picinterrupt(("")))) isr()
[v _isr `(v ~T1 @X0 1 ef ]
"76
[; ;main.c: 76: {
{
[e :U _isr ]
[f ]
"77
[; ;main.c: 77:   if (TMR1IF)
[e $ ! _TMR1IF 83  ]
"78
[; ;main.c: 78:   {
{
"79
[; ;main.c: 79:     TMR1IF = 0;
[e = _TMR1IF -> -> 0 `i `b ]
"80
[; ;main.c: 80:     TMR1H = 0xF6;
[e = _TMR1H -> -> 246 `i `uc ]
"81
[; ;main.c: 81:     TMR1L = 0x3C;
[e = _TMR1L -> -> 60 `i `uc ]
"82
[; ;main.c: 82:     ms_counter++;
[e ++ _ms_counter -> -> 1 `i `Vui ]
"83
[; ;main.c: 83:     milli_seconds++;
[e ++ _milli_seconds -> -> 1 `i `Vui ]
"84
[; ;main.c: 84:   }
}
[e :U 83 ]
"85
[; ;main.c: 85:   if(RCIF && RCIE)
[e $ ! && _RCIF _RCIE 84  ]
"86
[; ;main.c: 86:   {
{
"88
[; ;main.c: 88:   }
}
[e :U 84 ]
"90
[; ;main.c: 90:   if(TXIF && TXIE)
[e $ ! && _TXIF _TXIE 85  ]
"91
[; ;main.c: 91:   {
{
"92
[; ;main.c: 92:     TXREG = buffer[out++];
[e = _TXREG -> *U + &U _buffer * -> ++ _out -> -> 1 `i `Vuc `ux -> -> # *U &U _buffer `ui `ux `uc ]
"93
[; ;main.c: 93:     if(out == sizeof(buffer))
[e $ ! == -> _out `ui -> # _buffer `ui 86  ]
"94
[; ;main.c: 94:     {
{
"95
[; ;main.c: 95:       out = 0;
[e = _out -> -> 0 `i `uc ]
"96
[; ;main.c: 96:     }
}
[e :U 86 ]
"97
[; ;main.c: 97:     if(out == in)
[e $ ! == -> _out `i -> _in `i 87  ]
"98
[; ;main.c: 98:     {
{
"99
[; ;main.c: 99:       TXIE = 0;
[e = _TXIE -> -> 0 `i `b ]
"100
[; ;main.c: 100:     }
}
[e :U 87 ]
"101
[; ;main.c: 101:   }
}
[e :U 85 ]
"103
[; ;main.c: 103:   if(INTF)
[e $ ! _INTF 88  ]
"104
[; ;main.c: 104:   {
{
"105
[; ;main.c: 105:     INTF = 0;
[e = _INTF -> -> 0 `i `b ]
"106
[; ;main.c: 106:     if(INTEDG)
[e $ ! _INTEDG 89  ]
"107
[; ;main.c: 107:     {
{
"108
[; ;main.c: 108:       INTEDG = 0;
[e = _INTEDG -> -> 0 `i `b ]
"109
[; ;main.c: 109:       pause = ms_counter;
[e = _pause _ms_counter ]
"110
[; ;main.c: 110:     }
}
[e $U 90  ]
"111
[; ;main.c: 111:     else
[e :U 89 ]
"112
[; ;main.c: 112:     {
{
"113
[; ;main.c: 113:       INTEDG = 1;
[e = _INTEDG -> -> 1 `i `b ]
"114
[; ;main.c: 114:       new_value = ms_counter;
[e = _new_value _ms_counter ]
"115
[; ;main.c: 115:     }
}
[e :U 90 ]
"116
[; ;main.c: 116:     ms_counter = 0;
[e = _ms_counter -> -> 0 `i `ui ]
"117
[; ;main.c: 117:   }
}
[e :U 88 ]
"118
[; ;main.c: 118: }
[e :UE 82 ]
}
[v $root$_main `(v ~T0 @X0 0 e ]
"120
[; ;main.c: 120: void main(void)
[v _main `(v ~T0 @X0 1 ef ]
"121
[; ;main.c: 121: {
{
[e :U _main ]
[f ]
"122
[; ;main.c: 122:   _Bool new_time = 0;
[v _new_time `a ~T0 @X0 1 a ]
[e = _new_time -> -> 0 `i `a ]
"123
[; ;main.c: 123:   init();
[e ( _init ..  ]
"124
[; ;main.c: 124:   RB1 = 0;
[e = _RB1 -> -> 0 `i `b ]
"125
[; ;main.c: 125:   RB5 = 1;
[e = _RB5 -> -> 1 `i `b ]
"127
[; ;main.c: 127:   (void)strcpy(buffer, "Initialization successfully done\n");
[e ( _strcpy (2 , &U _buffer :s 1C ]
"128
[; ;main.c: 128:   in = (uint8_t)strlen(buffer);
[e = _in -> ( _strlen (1 -> &U _buffer `*Cuc `uc ]
"129
[; ;main.c: 129:   TXREG = buffer[out++];
[e = _TXREG -> *U + &U _buffer * -> ++ _out -> -> 1 `i `Vuc `ux -> -> # *U &U _buffer `ui `ux `uc ]
"130
[; ;main.c: 130:   TXIE = 1;
[e = _TXIE -> -> 1 `i `b ]
"134
[; ;main.c: 134:   while(1)
[e :U 93 ]
"135
[; ;main.c: 135:   {
{
"136
[; ;main.c: 136:     if(pause > 1000u)
[e $ ! > _pause -> 1000 `ui 95  ]
"137
[; ;main.c: 137:     {
{
"138
[; ;main.c: 138:       pause = 0u;
[e = _pause -> 0 `ui ]
"139
[; ;main.c: 139:       minute_gone(bit_counter);
[e ( _minute_gone (1 _bit_counter ]
"140
[; ;main.c: 140:       bit_counter = 0u;
[e = _bit_counter -> -> 0 `ui `uc ]
"141
[; ;main.c: 141:       milli_seconds = 0u;
[e = _milli_seconds -> 0 `ui ]
"142
[; ;main.c: 142:       seconds = 0u;
[e = _seconds -> -> 0 `ui `uc ]
"143
[; ;main.c: 143:       new_time = 1;
[e = _new_time -> -> 1 `i `a ]
"144
[; ;main.c: 144:     }
}
[e :U 95 ]
"145
[; ;main.c: 145:     if(milli_seconds >= 1000u)
[e $ ! >= _milli_seconds -> 1000 `ui 96  ]
"146
[; ;main.c: 146:     {
{
"147
[; ;main.c: 147:       milli_seconds = 0u;
[e = _milli_seconds -> 0 `ui ]
"148
[; ;main.c: 148:       seconds++;
[e ++ _seconds -> -> 1 `i `Vuc ]
"149
[; ;main.c: 149:     }
}
[e :U 96 ]
"150
[; ;main.c: 150:     if(seconds == 60u)
[e $ ! == -> _seconds `ui -> 60 `ui 97  ]
"151
[; ;main.c: 151:     {
{
"152
[; ;main.c: 152:       seconds = 0u;
[e = _seconds -> -> 0 `ui `uc ]
"153
[; ;main.c: 153:       minute_gone(0u);
[e ( _minute_gone (1 -> -> 0 `ui `uc ]
"154
[; ;main.c: 154:       new_time = 1;
[e = _new_time -> -> 1 `i `a ]
"155
[; ;main.c: 155:     }
}
[e :U 97 ]
"156
[; ;main.c: 156:     if(new_time)
[e $ ! != -> _new_time `i -> 0 `i 98  ]
"157
[; ;main.c: 157:     {
{
"158
[; ;main.c: 158:       get_time(&current_time);
[e ( _get_time (1 &U _current_time ]
"160
[; ;main.c: 160:       in = make_time(buffer, &current_time);
[e = _in ( _make_time (2 , &U _buffer &U _current_time ]
"161
[; ;main.c: 161:       out = 0u;
[e = _out -> -> 0 `ui `uc ]
"162
[; ;main.c: 162:       TXREG = buffer[out++];
[e = _TXREG -> *U + &U _buffer * -> ++ _out -> -> 1 `i `Vuc `ux -> -> # *U &U _buffer `ui `ux `uc ]
"163
[; ;main.c: 163:       TXIE = 1u;
[e = _TXIE -> -> 1 `ui `b ]
"165
[; ;main.c: 165:       new_time = 0;
[e = _new_time -> -> 0 `i `a ]
"166
[; ;main.c: 166:     }
}
[e :U 98 ]
"167
[; ;main.c: 167:     if((new_value >= 40u) && (new_value <= 130u))
[e $ ! && >= _new_value -> 40 `ui <= _new_value -> 130 `ui 99  ]
"168
[; ;main.c: 168:     {
{
"169
[; ;main.c: 169:       new_value = 0u;
[e = _new_value -> 0 `ui ]
"170
[; ;main.c: 170:       new_bit(bit_counter++, 0u);
[e ( _new_bit (2 , ++ _bit_counter -> -> 1 `i `Vuc -> -> 0 `ui `uc ]
"171
[; ;main.c: 171:     }
}
[e $U 100  ]
"172
[; ;main.c: 172:     else if((new_value >= 140u) && (new_value <= 230u))
[e :U 99 ]
[e $ ! && >= _new_value -> 140 `ui <= _new_value -> 230 `ui 101  ]
"173
[; ;main.c: 173:     {
{
"174
[; ;main.c: 174:       new_value = 0u;
[e = _new_value -> 0 `ui ]
"175
[; ;main.c: 175:       new_bit(bit_counter++, 1u);
[e ( _new_bit (2 , ++ _bit_counter -> -> 1 `i `Vuc -> -> 1 `ui `uc ]
"176
[; ;main.c: 176:     }
}
[e $U 102  ]
"177
[; ;main.c: 177:     else
[e :U 101 ]
"178
[; ;main.c: 178:     {
{
"180
[; ;main.c: 180:     }
}
[e :U 102 ]
[e :U 100 ]
"182
[; ;main.c: 182:     if(SSPIF)
[e $ ! _SSPIF 103  ]
"183
[; ;main.c: 183:     {
{
"184
[; ;main.c: 184:       WCOL = 0u;
[e = _WCOL -> -> 0 `ui `b ]
"185
[; ;main.c: 185:       SSPIF = 0u;
[e = _SSPIF -> -> 0 `ui `b ]
"186
[; ;main.c: 186:       if(out_pos == 0u)
[e $ ! == -> _out_pos `ui -> 0 `ui 104  ]
"187
[; ;main.c: 187:       {
{
"188
[; ;main.c: 188:         RB2 = 1u;
[e = _RB2 -> -> 1 `ui `b ]
"189
[; ;main.c: 189:         RB4 = 0u;
[e = _RB4 -> -> 0 `ui `b ]
"190
[; ;main.c: 190:       }
}
[e $U 105  ]
"191
[; ;main.c: 191:       else if(out_pos == 6u)
[e :U 104 ]
[e $ ! == -> _out_pos `ui -> 6 `ui 106  ]
"192
[; ;main.c: 192:       {
{
"193
[; ;main.c: 193:         RB4 = 1;
[e = _RB4 -> -> 1 `i `b ]
"194
[; ;main.c: 194:         RB3 = 0;
[e = _RB3 -> -> 0 `i `b ]
"195
[; ;main.c: 195:       }
}
[e $U 107  ]
"196
[; ;main.c: 196:       else if(out_pos == 8u)
[e :U 106 ]
[e $ ! == -> _out_pos `ui -> 8 `ui 108  ]
"197
[; ;main.c: 197:       {
{
"198
[; ;main.c: 198:         RB3 = 1u;
[e = _RB3 -> -> 1 `ui `b ]
"199
[; ;main.c: 199:         RB2 = 0u;
[e = _RB2 -> -> 0 `ui `b ]
"200
[; ;main.c: 200:       }
}
[e $U 109  ]
"201
[; ;main.c: 201:       else
[e :U 108 ]
"202
[; ;main.c: 202:       {
{
"204
[; ;main.c: 204:       }
}
[e :U 109 ]
[e :U 107 ]
[e :U 105 ]
"205
[; ;main.c: 205:       SSPBUF = spi_buffer[out_pos++];
[e = _SSPBUF *U + &U _spi_buffer * -> ++ _out_pos -> -> 1 `i `uc `ux -> -> # *U &U _spi_buffer `ui `ux ]
"206
[; ;main.c: 206:       if(out_pos == sizeof(spi_buffer))
[e $ ! == -> _out_pos `ui -> # _spi_buffer `ui 110  ]
"207
[; ;main.c: 207:       {
{
"208
[; ;main.c: 208:         out_pos = 0;
[e = _out_pos -> -> 0 `i `uc ]
"209
[; ;main.c: 209:       }
}
[e :U 110 ]
"215
[; ;main.c: 215:       if(out_pos == 6u)
[e $ ! == -> _out_pos `ui -> 6 `ui 111  ]
"216
[; ;main.c: 216:       {
{
"217
[; ;main.c: 217:         spi_buffer[0] = get_time_data(&current_time, 0u);
[e = *U + &U _spi_buffer * -> -> -> 0 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_time_data (2 , &U _current_time -> -> 0 `ui `uc ]
"218
[; ;main.c: 218:         spi_buffer[1] = get_time_data(&current_time, 1u);
[e = *U + &U _spi_buffer * -> -> -> 1 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_time_data (2 , &U _current_time -> -> 1 `ui `uc ]
"219
[; ;main.c: 219:         spi_buffer[2] = get_time_data(&current_time, 2u);
[e = *U + &U _spi_buffer * -> -> -> 2 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_time_data (2 , &U _current_time -> -> 2 `ui `uc ]
"220
[; ;main.c: 220:         spi_buffer[3] = get_time_data(&current_time, 3u);
[e = *U + &U _spi_buffer * -> -> -> 3 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_time_data (2 , &U _current_time -> -> 3 `ui `uc ]
"221
[; ;main.c: 221:         spi_buffer[4] = get_time_data_seconds(seconds, 4u);
[e = *U + &U _spi_buffer * -> -> -> 4 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_time_data_seconds (2 , _seconds -> -> 4 `ui `uc ]
"222
[; ;main.c: 222:         spi_buffer[5] = get_time_data_seconds(seconds, 5u);
[e = *U + &U _spi_buffer * -> -> -> 5 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_time_data_seconds (2 , _seconds -> -> 5 `ui `uc ]
"223
[; ;main.c: 223:       }
}
[e $U 112  ]
"224
[; ;main.c: 224:       else if(out_pos == 8u)
[e :U 111 ]
[e $ ! == -> _out_pos `ui -> 8 `ui 113  ]
"225
[; ;main.c: 225:       {
{
"226
[; ;main.c: 226:         spi_buffer[6] = (uint8_t)(1u << date_segment);
[e = *U + &U _spi_buffer * -> -> -> 6 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux -> << -> 1 `ui -> _date_segment `i `uc ]
"227
[; ;main.c: 227:         spi_buffer[7] = get_date_data(&current_time, date_segment++);
[e = *U + &U _spi_buffer * -> -> -> 7 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_date_data (2 , &U _current_time ++ _date_segment -> -> 1 `i `uc ]
"228
[; ;main.c: 228:         if(date_segment == 8u)
[e $ ! == -> _date_segment `ui -> 8 `ui 114  ]
"229
[; ;main.c: 229:         {
{
"230
[; ;main.c: 230:           date_segment = 0u;
[e = _date_segment -> -> 0 `ui `uc ]
"231
[; ;main.c: 231:         }
}
[e :U 114 ]
"232
[; ;main.c: 232:       }
}
[e $U 115  ]
"233
[; ;main.c: 233:       else if(out_pos == 0u)
[e :U 113 ]
[e $ ! == -> _out_pos `ui -> 0 `ui 116  ]
"234
[; ;main.c: 234:       {
{
"235
[; ;main.c: 235:         spi_buffer[8] = (uint8_t)(1u << day_segment);
[e = *U + &U _spi_buffer * -> -> -> 8 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux -> << -> 1 `ui -> _day_segment `i `uc ]
"236
[; ;main.c: 236:         spi_buffer[9] = get_day_data(&current_time, day_segment, 0u);
[e = *U + &U _spi_buffer * -> -> -> 9 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_day_data (3 , , &U _current_time _day_segment -> -> 0 `ui `uc ]
"237
[; ;main.c: 237:         spi_buffer[10] = get_day_data(&current_time, day_segment++, 1u);
[e = *U + &U _spi_buffer * -> -> -> 10 `i `ui `ux -> -> # *U &U _spi_buffer `ui `ux ( _get_day_data (3 , , &U _current_time ++ _day_segment -> -> 1 `i `uc -> -> 1 `ui `uc ]
"238
[; ;main.c: 238:         if(day_segment == 3u)
[e $ ! == -> _day_segment `ui -> 3 `ui 117  ]
"239
[; ;main.c: 239:         {
{
"240
[; ;main.c: 240:           day_segment = 0u;
[e = _day_segment -> -> 0 `ui `uc ]
"241
[; ;main.c: 241:         }
}
[e :U 117 ]
"242
[; ;main.c: 242:       }
}
[e $U 118  ]
"243
[; ;main.c: 243:       else
[e :U 116 ]
"244
[; ;main.c: 244:       {
{
"246
[; ;main.c: 246:       }
}
[e :U 118 ]
[e :U 115 ]
[e :U 112 ]
"247
[; ;main.c: 247:     }
}
[e :U 103 ]
"249
[; ;main.c: 249:   }
}
[e :U 92 ]
[e $U 93  ]
[e :U 94 ]
"250
[; ;main.c: 250: }
[e :UE 91 ]
}
[a 1C 73 110 105 116 105 97 108 105 122 97 116 105 111 110 32 115 117 99 99 101 115 115 102 117 108 108 121 32 100 111 110 101 10 0 ]
