

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Jun 01 20:20:47 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F73
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=1
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=1
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	intentry,global,class=CODE,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.32
    39                           ; Generated 02/02/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F73 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0092                     	;# 
   114  0093                     	;# 
   115  0094                     	;# 
   116  0098                     	;# 
   117  0099                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  0000                     	;# 
   125  0001                     	;# 
   126  0002                     	;# 
   127  0003                     	;# 
   128  0004                     	;# 
   129  0005                     	;# 
   130  0006                     	;# 
   131  0007                     	;# 
   132  000A                     	;# 
   133  000B                     	;# 
   134  000C                     	;# 
   135  000D                     	;# 
   136  000E                     	;# 
   137  000E                     	;# 
   138  000F                     	;# 
   139  0010                     	;# 
   140  0011                     	;# 
   141  0012                     	;# 
   142  0013                     	;# 
   143  0014                     	;# 
   144  0015                     	;# 
   145  0015                     	;# 
   146  0016                     	;# 
   147  0017                     	;# 
   148  0018                     	;# 
   149  0019                     	;# 
   150  001A                     	;# 
   151  001B                     	;# 
   152  001B                     	;# 
   153  001C                     	;# 
   154  001D                     	;# 
   155  001E                     	;# 
   156  001F                     	;# 
   157  0081                     	;# 
   158  0085                     	;# 
   159  0086                     	;# 
   160  0087                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175                           
   176                           	psect	idataBANK0
   177  0CAF                     __pidataBANK0:
   178                           
   179                           ;initializer for _last_one
   180  0CAF  3400               	retlw	0
   181  0CB0  3400               	retlw	0
   182  0CB1  3401               	retlw	1
   183  0CB2  3401               	retlw	1
   184  0CB3  3401               	retlw	1
   185  0CB4  3414               	retlw	20
   186                           
   187                           ;initializer for _current_time
   188  0CB5  3400               	retlw	0
   189  0CB6  3400               	retlw	0
   190  0CB7  3401               	retlw	1
   191  0CB8  3401               	retlw	1
   192  0CB9  3401               	retlw	1
   193  0CBA  3414               	retlw	20
   194                           
   195                           	psect	strings
   196  0800                     __pstrings:
   197  0800                     stringtab:
   198  0800                     __stringtab:
   199  0800                     stringcode:	
   200                           ;	String table - string pointers are 1 byte each
   201                           
   202  0800                     stringdir:
   203  0800  3008               	movlw	high stringdir
   204  0801  008A               	movwf	10
   205  0802  0804               	movf	4,w
   206  0803  0A84               	incf	4,f
   207  0804  0782               	addwf	2,f
   208  0805                     __stringbase:
   209  0805  3400               	retlw	0
   210  0806                     __end_of__stringtab:
   211  0806                     _day_segment_coding:
   212  0806  348C               	retlw	140
   213  0807  344C               	retlw	76
   214  0808  3489               	retlw	137
   215  0809  34CB               	retlw	203
   216  080A  348C               	retlw	140
   217  080B  3468               	retlw	104
   218  080C  3490               	retlw	144
   219  080D  34D9               	retlw	217
   220  080E  3422               	retlw	34
   221  080F  3400               	retlw	0
   222  0810  348C               	retlw	140
   223  0811  3468               	retlw	104
   224  0812  348C               	retlw	140
   225  0813  344C               	retlw	76
   226  0814  3422               	retlw	34
   227  0815  3400               	retlw	0
   228  0816  3423               	retlw	35
   229  0817  3402               	retlw	2
   230  0818  3490               	retlw	144
   231  0819  34D9               	retlw	217
   232  081A  3489               	retlw	137
   233  081B  34CB               	retlw	203
   234  081C  348C               	retlw	140
   235  081D  3468               	retlw	104
   236  081E  3499               	retlw	153
   237  081F  3402               	retlw	2
   238  0820  3499               	retlw	153
   239  0821  343A               	retlw	58
   240  0822  3499               	retlw	153
   241  0823  3483               	retlw	131
   242  0824  3419               	retlw	25
   243  0825  34D3               	retlw	211
   244  0826  3499               	retlw	153
   245  0827  345A               	retlw	90
   246  0828  348C               	retlw	140
   247  0829  344C               	retlw	76
   248  082A  3419               	retlw	25
   249  082B  34D3               	retlw	211
   250  082C  3489               	retlw	137
   251  082D  34CB               	retlw	203
   252  082E  348C               	retlw	140
   253  082F  3468               	retlw	104
   254  0830                     __end_of_day_segment_coding:
   255  0830                     _week_day:
   256  0830  344D               	retlw	77
   257  0831  344F               	retlw	79
   258  0832  344E               	retlw	78
   259  0833  3444               	retlw	68
   260  0834  3449               	retlw	73
   261  0835  3445               	retlw	69
   262  0836  344D               	retlw	77
   263  0837  3449               	retlw	73
   264  0838  3454               	retlw	84
   265  0839  3444               	retlw	68
   266  083A  344F               	retlw	79
   267  083B  344E               	retlw	78
   268  083C  3446               	retlw	70
   269  083D  3452               	retlw	82
   270  083E  3452               	retlw	82
   271  083F  3453               	retlw	83
   272  0840  3441               	retlw	65
   273  0841  344D               	retlw	77
   274  0842  3453               	retlw	83
   275  0843  344F               	retlw	79
   276  0844  344E               	retlw	78
   277  0845                     __end_of_week_day:
   278  0845                     _max_days:
   279  0845  341F               	retlw	31
   280  0846  341C               	retlw	28
   281  0847  341F               	retlw	31
   282  0848  341E               	retlw	30
   283  0849  341F               	retlw	31
   284  084A  341E               	retlw	30
   285  084B  341F               	retlw	31
   286  084C  341F               	retlw	31
   287  084D  341E               	retlw	30
   288  084E  341F               	retlw	31
   289  084F  341E               	retlw	30
   290  0850  341F               	retlw	31
   291  0851                     __end_of_max_days:
   292  0851                     _time_segment_coding:
   293  0851  34BE               	retlw	190
   294  0852  3412               	retlw	18
   295  0853  347C               	retlw	124
   296  0854  3476               	retlw	118
   297  0855  34D2               	retlw	210
   298  0856  34E6               	retlw	230
   299  0857  34EE               	retlw	238
   300  0858  3432               	retlw	50
   301  0859  34FE               	retlw	254
   302  085A  34F6               	retlw	246
   303  085B                     __end_of_time_segment_coding:
   304  085B                     _date_segment_coding:
   305  085B  343F               	retlw	63
   306  085C  3406               	retlw	6
   307  085D  345B               	retlw	91
   308  085E  344F               	retlw	79
   309  085F  3466               	retlw	102
   310  0860  346D               	retlw	109
   311  0861  347D               	retlw	125
   312  0862  3407               	retlw	7
   313  0863  347F               	retlw	127
   314  0864  346F               	retlw	111
   315  0865                     __end_of_date_segment_coding:
   316  0014                     _SSPCON	set	20
   317  0018                     _RCSTA	set	24
   318  0007                     _PORTC	set	7
   319  0006                     _PORTB	set	6
   320  0005                     _PORTA	set	5
   321  0010                     _T1CON	set	16
   322  000B                     _INTCONbits	set	11
   323  0013                     _SSPBUF	set	19
   324  0019                     _TXREG	set	25
   325  000E                     _TMR1L	set	14
   326  000F                     _TMR1H	set	15
   327  005E                     _PEIE	set	94
   328  005C                     _INTE	set	92
   329  0033                     _RB3	set	51
   330  0034                     _RB4	set	52
   331  0032                     _RB2	set	50
   332  00A7                     _WCOL	set	167
   333  0063                     _SSPIF	set	99
   334  0035                     _RB5	set	53
   335  0031                     _RB1	set	49
   336  0059                     _INTF	set	89
   337  0064                     _TXIF	set	100
   338  0065                     _RCIF	set	101
   339  0060                     _TMR1IF	set	96
   340  0094                     _SSPSTAT	set	148
   341  0098                     _TXSTA	set	152
   342  0099                     _SPBRG	set	153
   343  0087                     _TRISC	set	135
   344  0086                     _TRISB	set	134
   345  0085                     _TRISA	set	133
   346  009F                     _ADCON1	set	159
   347  0460                     _TMR1IE	set	1120
   348  040E                     _INTEDG	set	1038
   349  0464                     _TXIE	set	1124
   350  0465                     _RCIE	set	1125
   351  0865                     STR_1:
   352  0865  3449               	retlw	73	;'I'
   353  0866  346E               	retlw	110	;'n'
   354  0867  3469               	retlw	105	;'i'
   355  0868  3474               	retlw	116	;'t'
   356  0869  3469               	retlw	105	;'i'
   357  086A  3461               	retlw	97	;'a'
   358  086B  346C               	retlw	108	;'l'
   359  086C  3469               	retlw	105	;'i'
   360  086D  347A               	retlw	122	;'z'
   361  086E  3461               	retlw	97	;'a'
   362  086F  3474               	retlw	116	;'t'
   363  0870  3469               	retlw	105	;'i'
   364  0871  346F               	retlw	111	;'o'
   365  0872  346E               	retlw	110	;'n'
   366  0873  3420               	retlw	32	;' '
   367  0874  3473               	retlw	115	;'s'
   368  0875  3475               	retlw	117	;'u'
   369  0876  3463               	retlw	99	;'c'
   370  0877  3463               	retlw	99	;'c'
   371  0878  3465               	retlw	101	;'e'
   372  0879  3473               	retlw	115	;'s'
   373  087A  3473               	retlw	115	;'s'
   374  087B  3466               	retlw	102	;'f'
   375  087C  3475               	retlw	117	;'u'
   376  087D  346C               	retlw	108	;'l'
   377  087E  346C               	retlw	108	;'l'
   378  087F  3479               	retlw	121	;'y'
   379  0880  3420               	retlw	32	;' '
   380  0881  3464               	retlw	100	;'d'
   381  0882  346F               	retlw	111	;'o'
   382  0883  346E               	retlw	110	;'n'
   383  0884  3465               	retlw	101	;'e'
   384  0885  340A               	retlw	10
   385  0886  3400               	retlw	0
   386  0887                     STR_2:
   387  0887  3454               	retlw	84	;'T'
   388  0888  3469               	retlw	105	;'i'
   389  0889  346D               	retlw	109	;'m'
   390  088A  3465               	retlw	101	;'e'
   391  088B  343A               	retlw	58	;':'
   392  088C  3420               	retlw	32	;' '
   393  088D  3400               	retlw	0
   394                           
   395                           	psect	cinit
   396  0014                     start_initialization:	
   397                           ; #config settings
   398                           
   399  0014                     __initialization:
   400                           
   401                           ; Initialize objects allocated to BANK0
   402  0014  1383               	bcf	3,7	;select IRP bank0
   403  0015  3066               	movlw	low (__pdataBANK0+12)
   404  0016  00FD               	movwf	btemp+-1
   405  0017  300C               	movlw	high __pidataBANK0
   406  0018  00FE               	movwf	btemp
   407  0019  30AF               	movlw	low __pidataBANK0
   408  001A  00FF               	movwf	btemp+1
   409  001B  305A               	movlw	low __pdataBANK0
   410  001C  0084               	movwf	4
   411  001D  158A  24CE  118A   	fcall	init_ram0
   412                           
   413                           ; Clear objects allocated to BANK1
   414  0020  30A0               	movlw	low __pbssBANK1
   415  0021  0084               	movwf	4
   416  0022  30C8               	movlw	low (__pbssBANK1+40)
   417  0023  158A  2487  118A   	fcall	clear_ram0
   418                           
   419                           ; Clear objects allocated to BANK0
   420  0026  3021               	movlw	low __pbssBANK0
   421  0027  0084               	movwf	4
   422  0028  3044               	movlw	low (__pbssBANK0+35)
   423  0029  158A  2487  118A   	fcall	clear_ram0
   424  002C                     end_of_initialization:	
   425                           ;End of C runtime variable initialization code
   426                           
   427  002C                     __end_of__initialization:
   428  002C  0183               	clrf	3
   429  002D  118A  2CF8         	ljmp	_main	;jump to C main() function
   430                           
   431                           	psect	bssBANK0
   432  0021                     __pbssBANK0:
   433  0021                     _spi_buffer:
   434  0021                     	ds	11
   435  002C                     _tmp_time:
   436  002C                     	ds	6
   437  0032                     _milli_seconds:
   438  0032                     	ds	2
   439  0034                     _pause:
   440  0034                     	ds	2
   441  0036                     _new_value:
   442  0036                     	ds	2
   443  0038                     _ms_counter:
   444  0038                     	ds	2
   445  003A                     _parity_date:
   446  003A                     	ds	1
   447  003B                     _parity_hours:
   448  003B                     	ds	1
   449  003C                     _parity_minutes:
   450  003C                     	ds	1
   451  003D                     _out_pos:
   452  003D                     	ds	1
   453  003E                     _seconds:
   454  003E                     	ds	1
   455  003F                     _bit_counter:
   456  003F                     	ds	1
   457  0040                     _out:
   458  0040                     	ds	1
   459  0041                     _in:
   460  0041                     	ds	1
   461  0042                     _day_segment:
   462  0042                     	ds	1
   463  0043                     _date_segment:
   464  0043                     	ds	1
   465                           
   466                           	psect	dataBANK0
   467  005A                     __pdataBANK0:
   468  005A                     _last_one:
   469  005A                     	ds	6
   470  0060                     _current_time:
   471  0060                     	ds	6
   472                           
   473                           	psect	bssBANK1
   474  00A0                     __pbssBANK1:
   475  00A0                     _buffer:
   476  00A0                     	ds	40
   477                           
   478                           	psect	inittext
   479  0CCA                     init_fetch0:	
   480                           ;	Called with low address in FSR and high address in W
   481                           
   482  0CCA  087E               	movf	btemp,w
   483  0CCB  008A               	movwf	10
   484  0CCC  087F               	movf	btemp+1,w
   485  0CCD  0082               	movwf	2
   486  0CCE                     init_ram0:	
   487                           ;Called with:
   488                           ;	high address of idata address in btemp 
   489                           ;	low address of idata address in btemp+1 
   490                           ;	low address of data in FSR
   491                           ;	high address + 1 of data in btemp-1
   492                           
   493  0CCE  158A  24CA  158A   	fcall	init_fetch0
   494  0CD1  0080               	movwf	0
   495  0CD2  0A84               	incf	4,f
   496  0CD3  0804               	movf	4,w
   497  0CD4  067D               	xorwf	btemp+-1,w
   498  0CD5  1903               	btfsc	3,2
   499  0CD6  3400               	retlw	0
   500  0CD7  0AFF               	incf	btemp+1,f
   501  0CD8  1903               	btfsc	3,2
   502  0CD9  0AFE               	incf	btemp,f
   503  0CDA  2CCE               	goto	init_ram0
   504                           
   505                           	psect	clrtext
   506  0C87                     clear_ram0:	
   507                           ;	Called with FSR containing the base address, and
   508                           ;	W with the last address+1
   509                           
   510  0C87  0064               	clrwdt	;clear the watchdog before getting into this loop
   511  0C88                     clrloop0:
   512  0C88  0180               	clrf	0	;clear RAM location pointed to by FSR
   513  0C89  0A84               	incf	4,f	;increment pointer
   514  0C8A  0604               	xorwf	4,w	;XOR with final address
   515  0C8B  1903               	btfsc	3,2	;have we reached the end yet?
   516  0C8C  3400               	retlw	0	;all done for this memory range, return
   517  0C8D  0604               	xorwf	4,w	;XOR again to restore value
   518  0C8E  2C88               	goto	clrloop0	;do the next byte
   519                           
   520                           	psect	cstackCOMMON
   521  0000                     __pcstackCOMMON:
   522  0000                     ??_init:
   523  0000                     ??_gpio_init:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0000                     ??_uart_init:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0000                     ??_spi_init:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0000                     ??_init_timer_1:	
   533                           ; 1 bytes @ 0x0
   534                           
   535                           
   536                           	psect	cstackBANK0
   537  0044                     __pcstackBANK0:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0044                     ?_init:
   541  0044                     ?_minute_gone:	
   542                           ; 1 bytes @ 0x0
   543                           
   544  0044                     ?_get_time:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0044                     ?_gpio_init:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0044                     ?_uart_init:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0044                     ?_spi_init:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0044                     ?_init_timer_1:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0044                     ?_isr:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0044                     ??_isr:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0044                     ?_main:	
   566                           ; 1 bytes @ 0x0
   567                           
   568                           
   569                           ; 1 bytes @ 0x0
   570  0044                     	ds	4
   571  0048                     ?_strcpy:
   572  0048                     ??_minute_gone:	
   573                           ; 1 bytes @ 0x4
   574                           
   575  0048                     ??_get_time:	
   576                           ; 1 bytes @ 0x4
   577                           
   578  0048                     ?___bmul:	
   579                           ; 1 bytes @ 0x4
   580                           
   581  0048                     ?_strlen:	
   582                           ; 1 bytes @ 0x4
   583                           
   584  0048                     ?___lwdiv:	
   585                           ; 2 bytes @ 0x4
   586                           
   587  0048                     ?___lwmod:	
   588                           ; 2 bytes @ 0x4
   589                           
   590  0048                     ___bmul@multiplicand:	
   591                           ; 2 bytes @ 0x4
   592                           
   593  0048                     strcpy@from:	
   594                           ; 1 bytes @ 0x4
   595                           
   596  0048                     ___lwdiv@divisor:	
   597                           ; 1 bytes @ 0x4
   598                           
   599  0048                     ___lwmod@divisor:	
   600                           ; 2 bytes @ 0x4
   601                           
   602                           
   603                           ; 2 bytes @ 0x4
   604  0048                     	ds	1
   605  0049                     ??_strcpy:
   606  0049                     ??___bmul:	
   607                           ; 1 bytes @ 0x5
   608                           
   609  0049                     get_time@p_time:	
   610                           ; 1 bytes @ 0x5
   611                           
   612  0049                     minute_gone@threshold:	
   613                           ; 1 bytes @ 0x5
   614                           
   615                           
   616                           ; 1 bytes @ 0x5
   617  0049                     	ds	1
   618  004A                     ??_strlen:
   619  004A                     minute_gone@bit_counter:	
   620                           ; 1 bytes @ 0x6
   621                           
   622  004A                     ___bmul@product:	
   623                           ; 1 bytes @ 0x6
   624                           
   625  004A                     strcpy@cp:	
   626                           ; 1 bytes @ 0x6
   627                           
   628  004A                     ___lwdiv@dividend:	
   629                           ; 1 bytes @ 0x6
   630                           
   631  004A                     ___lwmod@dividend:	
   632                           ; 2 bytes @ 0x6
   633                           
   634                           
   635                           ; 2 bytes @ 0x6
   636  004A                     	ds	1
   637  004B                     ___bmul@multiplier:
   638  004B                     strcpy@to:	
   639                           ; 1 bytes @ 0x7
   640                           
   641  004B                     strlen@s:	
   642                           ; 1 bytes @ 0x7
   643                           
   644                           
   645                           ; 1 bytes @ 0x7
   646  004B                     	ds	1
   647  004C                     ?_new_bit:
   648  004C                     ?_get_day_data:	
   649                           ; 1 bytes @ 0x8
   650                           
   651  004C                     ??___lwdiv:	
   652                           ; 1 bytes @ 0x8
   653                           
   654  004C                     ??___lwmod:	
   655                           ; 1 bytes @ 0x8
   656                           
   657  004C                     get_day_data@day_segment:	
   658                           ; 1 bytes @ 0x8
   659                           
   660  004C                     new_bit@value:	
   661                           ; 1 bytes @ 0x8
   662                           
   663  004C                     strlen@cp:	
   664                           ; 1 bytes @ 0x8
   665                           
   666                           
   667                           ; 1 bytes @ 0x8
   668  004C                     	ds	1
   669  004D                     ??_new_bit:
   670  004D                     get_day_data@byte:	
   671                           ; 1 bytes @ 0x9
   672                           
   673  004D                     ___lwmod@counter:	
   674                           ; 1 bytes @ 0x9
   675                           
   676  004D                     ___lwdiv@quotient:	
   677                           ; 1 bytes @ 0x9
   678                           
   679                           
   680                           ; 2 bytes @ 0x9
   681  004D                     	ds	1
   682  004E                     ??_get_day_data:
   683                           
   684                           ; 1 bytes @ 0xA
   685  004E                     	ds	1
   686  004F                     new_bit@bit_number:
   687  004F                     ___lwdiv@counter:	
   688                           ; 1 bytes @ 0xB
   689                           
   690                           
   691                           ; 1 bytes @ 0xB
   692  004F                     	ds	1
   693  0050                     ?_make_time:
   694  0050                     ?_get_time_data:	
   695                           ; 1 bytes @ 0xC
   696                           
   697  0050                     ?_get_time_data_seconds:	
   698                           ; 1 bytes @ 0xC
   699                           
   700  0050                     ?_get_date_data:	
   701                           ; 1 bytes @ 0xC
   702                           
   703  0050                     get_date_data@date_segment:	
   704                           ; 1 bytes @ 0xC
   705                           
   706  0050                     get_time_data@time_segment:	
   707                           ; 1 bytes @ 0xC
   708                           
   709  0050                     get_time_data_seconds@time_segment:	
   710                           ; 1 bytes @ 0xC
   711                           
   712  0050                     make_time@p_time:	
   713                           ; 1 bytes @ 0xC
   714                           
   715                           
   716                           ; 1 bytes @ 0xC
   717  0050                     	ds	1
   718  0051                     ??_make_time:
   719  0051                     ??_get_time_data:	
   720                           ; 1 bytes @ 0xD
   721                           
   722  0051                     ??_get_time_data_seconds:	
   723                           ; 1 bytes @ 0xD
   724                           
   725  0051                     ??_get_date_data:	
   726                           ; 1 bytes @ 0xD
   727                           
   728                           
   729                           ; 1 bytes @ 0xD
   730  0051                     	ds	2
   731  0053                     get_day_data@data:
   732                           
   733                           ; 1 bytes @ 0xF
   734  0053                     	ds	1
   735  0054                     get_date_data@value:
   736  0054                     get_day_data@p_time:	
   737                           ; 1 bytes @ 0x10
   738                           
   739  0054                     get_time_data@data:	
   740                           ; 1 bytes @ 0x10
   741                           
   742  0054                     get_time_data_seconds@data:	
   743                           ; 1 bytes @ 0x10
   744                           
   745                           
   746                           ; 1 bytes @ 0x10
   747  0054                     	ds	1
   748  0055                     get_date_data@p_time:
   749  0055                     get_time_data@p_time:	
   750                           ; 1 bytes @ 0x11
   751                           
   752  0055                     get_time_data_seconds@seconds:	
   753                           ; 1 bytes @ 0x11
   754                           
   755  0055                     make_time@buffer:	
   756                           ; 1 bytes @ 0x11
   757                           
   758                           
   759                           ; 1 bytes @ 0x11
   760  0055                     	ds	1
   761  0056                     make_time@written_bytes:
   762                           
   763                           ; 1 bytes @ 0x12
   764  0056                     	ds	1
   765  0057                     ??_main:
   766                           
   767                           ; 1 bytes @ 0x13
   768  0057                     	ds	2
   769  0059                     main@new_time:
   770                           
   771                           ; 1 bytes @ 0x15
   772  0059                     	ds	1
   773                           
   774                           	psect	maintext
   775  04F8                     __pmaintext:	
   776 ;;
   777 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   778 ;;
   779 ;; *************** function _main *****************
   780 ;; Defined at:
   781 ;;		line 120 in file "main.c"
   782 ;; Parameters:    Size  Location     Type
   783 ;;		None
   784 ;; Auto vars:     Size  Location     Type
   785 ;;  new_time        1   21[BANK0 ] _Bool 
   786 ;; Return value:  Size  Location     Type
   787 ;;                  1    wreg      void 
   788 ;; Registers used:
   789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   790 ;; Tracked objects:
   791 ;;		On entry : B00/0
   792 ;;		On exit  : 0/0
   793 ;;		Unchanged: 0/0
   794 ;; Data sizes:     COMMON   BANK0   BANK1
   795 ;;      Params:         0       0       0
   796 ;;      Locals:         0       1       0
   797 ;;      Temps:          0       2       0
   798 ;;      Totals:         0       3       0
   799 ;;Total ram usage:        3 bytes
   800 ;; Hardware stack levels required when called: 4
   801 ;; This function calls:
   802 ;;		_get_date_data
   803 ;;		_get_day_data
   804 ;;		_get_time
   805 ;;		_get_time_data
   806 ;;		_get_time_data_seconds
   807 ;;		_init
   808 ;;		_make_time
   809 ;;		_minute_gone
   810 ;;		_new_bit
   811 ;;		_strcpy
   812 ;;		_strlen
   813 ;; This function is called by:
   814 ;;		Startup code after reset
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           
   819                           ;psect for function _main
   820  04F8                     _main:
   821  04F8                     l2148:	
   822                           ;incstack = 0
   823                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   824                           
   825                           
   826                           ;main.c: 122:   _Bool new_time = 0;
   827  04F8  1283               	bcf	3,5	;RP0=0, select bank0
   828  04F9  1303               	bcf	3,6	;RP1=0, select bank0
   829  04FA  01D9               	clrf	main@new_time
   830  04FB                     l2150:
   831                           
   832                           ;main.c: 123:   init();
   833  04FB  118A  27EA  118A   	fcall	_init
   834  04FE                     l2152:
   835                           
   836                           ;main.c: 124:   RB1 = 0;
   837  04FE  1283               	bcf	3,5	;RP0=0, select bank0
   838  04FF  1303               	bcf	3,6	;RP1=0, select bank0
   839  0500  1086               	bcf	6,1	;volatile
   840  0501                     l2154:
   841                           
   842                           ;main.c: 125:   RB5 = 1;
   843  0501  1686               	bsf	6,5	;volatile
   844  0502                     l2156:
   845                           
   846                           ;main.c: 127:   (void)strcpy(buffer, "Initialization successfully done\n");
   847  0502  3060               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   848  0503  00D7               	movwf	??_main
   849  0504  0857               	movf	??_main,w
   850  0505  00C8               	movwf	strcpy@from
   851  0506  30A0               	movlw	(low (_buffer| 0))& (0+255)
   852  0507  158A  250D  118A   	fcall	_strcpy
   853  050A                     l2158:
   854                           
   855                           ;main.c: 128:   in = (uint8_t)strlen(buffer);
   856  050A  30A0               	movlw	(low (_buffer| 0))& (0+255)
   857  050B  158A  24F2  118A   	fcall	_strlen
   858  050E  1283               	bcf	3,5	;RP0=0, select bank0
   859  050F  1303               	bcf	3,6	;RP1=0, select bank0
   860  0510  0848               	movf	?_strlen,w
   861  0511  00D7               	movwf	??_main
   862  0512  0857               	movf	??_main,w
   863  0513  00C1               	movwf	_in	;volatile
   864  0514                     l2160:
   865                           
   866                           ;main.c: 129:   TXREG = buffer[out++];
   867  0514  0840               	movf	_out,w
   868  0515  3EA0               	addlw	(low (_buffer| 0))& (0+255)
   869  0516  0084               	movwf	4
   870  0517  1383               	bcf	3,7	;select IRP bank1
   871  0518  0800               	movf	0,w
   872  0519  0099               	movwf	25	;volatile
   873  051A                     l2162:
   874  051A  3001               	movlw	1
   875  051B  00D7               	movwf	??_main
   876  051C  0857               	movf	??_main,w
   877  051D  07C0               	addwf	_out,f	;volatile
   878  051E                     l2164:
   879                           
   880                           ;main.c: 130:   TXIE = 1;
   881  051E  1683               	bsf	3,5	;RP0=1, select bank1
   882  051F  1303               	bcf	3,6	;RP1=0, select bank1
   883  0520  160C               	bsf	12,4	;volatile
   884  0521                     l2166:
   885                           
   886                           ;main.c: 135:   {;main.c: 136:     if(pause > 1000u)
   887  0521  3003               	movlw	3
   888  0522  1283               	bcf	3,5	;RP0=0, select bank0
   889  0523  0235               	subwf	_pause+1,w	;volatile
   890  0524  30E9               	movlw	233
   891  0525  1903               	skipnz
   892  0526  0234               	subwf	_pause,w	;volatile
   893  0527  1C03               	skipc
   894  0528  2D2A               	goto	u1691
   895  0529  2D2B               	goto	u1690
   896  052A                     u1691:
   897  052A  2D39               	goto	l2180
   898  052B                     u1690:
   899  052B                     l2168:
   900                           
   901                           ;main.c: 137:     {;main.c: 138:       pause = 0u;
   902  052B  01B4               	clrf	_pause	;volatile
   903  052C  01B5               	clrf	_pause+1	;volatile
   904  052D                     l2170:
   905                           
   906                           ;main.c: 139:       minute_gone(bit_counter);
   907  052D  083F               	movf	_bit_counter,w	;volatile
   908  052E  158A  268E  118A   	fcall	_minute_gone
   909  0531                     l2172:
   910                           
   911                           ;main.c: 140:       bit_counter = 0u;
   912  0531  1283               	bcf	3,5	;RP0=0, select bank0
   913  0532  1303               	bcf	3,6	;RP1=0, select bank0
   914  0533  01BF               	clrf	_bit_counter	;volatile
   915  0534                     l2174:
   916                           
   917                           ;main.c: 141:       milli_seconds = 0u;
   918  0534  01B2               	clrf	_milli_seconds	;volatile
   919  0535  01B3               	clrf	_milli_seconds+1	;volatile
   920  0536                     l2176:
   921                           
   922                           ;main.c: 142:       seconds = 0u;
   923  0536  01BE               	clrf	_seconds	;volatile
   924  0537                     l2178:
   925                           
   926                           ;main.c: 143:       new_time = 1;
   927  0537  01D9               	clrf	main@new_time
   928  0538  0AD9               	incf	main@new_time,f
   929  0539                     l2180:
   930                           
   931                           ;main.c: 145:     if(milli_seconds >= 1000u)
   932  0539  3003               	movlw	3
   933  053A  0233               	subwf	_milli_seconds+1,w	;volatile
   934  053B  30E8               	movlw	232
   935  053C  1903               	skipnz
   936  053D  0232               	subwf	_milli_seconds,w	;volatile
   937  053E  1C03               	skipc
   938  053F  2D41               	goto	u1701
   939  0540  2D42               	goto	u1700
   940  0541                     u1701:
   941  0541  2D48               	goto	l2186
   942  0542                     u1700:
   943  0542                     l2182:
   944                           
   945                           ;main.c: 146:     {;main.c: 147:       milli_seconds = 0u;
   946  0542  01B2               	clrf	_milli_seconds	;volatile
   947  0543  01B3               	clrf	_milli_seconds+1	;volatile
   948  0544                     l2184:
   949                           
   950                           ;main.c: 148:       seconds++;
   951  0544  3001               	movlw	1
   952  0545  00D7               	movwf	??_main
   953  0546  0857               	movf	??_main,w
   954  0547  07BE               	addwf	_seconds,f	;volatile
   955  0548                     l2186:
   956                           
   957                           ;main.c: 150:     if(seconds == 60u)
   958  0548  303C               	movlw	60
   959  0549  063E               	xorwf	_seconds,w	;volatile
   960  054A  1D03               	btfss	3,2
   961  054B  2D4D               	goto	u1711
   962  054C  2D4E               	goto	u1710
   963  054D                     u1711:
   964  054D  2D57               	goto	l2194
   965  054E                     u1710:
   966  054E                     l2188:
   967                           
   968                           ;main.c: 151:     {;main.c: 152:       seconds = 0u;
   969  054E  01BE               	clrf	_seconds	;volatile
   970  054F                     l2190:
   971                           
   972                           ;main.c: 153:       minute_gone(0u);
   973  054F  3000               	movlw	0
   974  0550  158A  268E  118A   	fcall	_minute_gone
   975  0553                     l2192:
   976                           
   977                           ;main.c: 154:       new_time = 1;
   978  0553  1283               	bcf	3,5	;RP0=0, select bank0
   979  0554  1303               	bcf	3,6	;RP1=0, select bank0
   980  0555  01D9               	clrf	main@new_time
   981  0556  0AD9               	incf	main@new_time,f
   982  0557                     l2194:
   983                           
   984                           ;main.c: 156:     if(new_time)
   985  0557  0859               	movf	main@new_time,w
   986  0558  1903               	btfsc	3,2
   987  0559  2D5B               	goto	u1721
   988  055A  2D5C               	goto	u1720
   989  055B                     u1721:
   990  055B  2D80               	goto	l2208
   991  055C                     u1720:
   992  055C                     l2196:
   993                           
   994                           ;main.c: 157:     {;main.c: 158:       get_time(&current_time);
   995  055C  3060               	movlw	(low (_current_time| 0))& (0+255)
   996  055D  158A  252E  118A   	fcall	_get_time
   997                           
   998                           ;main.c: 160:       in = make_time(buffer, &current_time);
   999  0560  3060               	movlw	(low (_current_time| 0))& (0+255)
  1000  0561  1283               	bcf	3,5	;RP0=0, select bank0
  1001  0562  1303               	bcf	3,6	;RP1=0, select bank0
  1002  0563  00D7               	movwf	??_main
  1003  0564  0857               	movf	??_main,w
  1004  0565  00D0               	movwf	make_time@p_time
  1005  0566  30A0               	movlw	(low (_buffer| 0))& (0+255)
  1006  0567  118A  22D1  118A   	fcall	_make_time
  1007  056A  1283               	bcf	3,5	;RP0=0, select bank0
  1008  056B  1303               	bcf	3,6	;RP1=0, select bank0
  1009  056C  00D8               	movwf	??_main+1
  1010  056D  0858               	movf	??_main+1,w
  1011  056E  00C1               	movwf	_in	;volatile
  1012  056F                     l2198:
  1013                           
  1014                           ;main.c: 161:       out = 0u;
  1015  056F  01C0               	clrf	_out	;volatile
  1016  0570                     l2200:
  1017                           
  1018                           ;main.c: 162:       TXREG = buffer[out++];
  1019  0570  0840               	movf	_out,w
  1020  0571  3EA0               	addlw	(low (_buffer| 0))& (0+255)
  1021  0572  0084               	movwf	4
  1022  0573  1383               	bcf	3,7	;select IRP bank1
  1023  0574  0800               	movf	0,w
  1024  0575  0099               	movwf	25	;volatile
  1025  0576                     l2202:
  1026  0576  3001               	movlw	1
  1027  0577  00D7               	movwf	??_main
  1028  0578  0857               	movf	??_main,w
  1029  0579  07C0               	addwf	_out,f	;volatile
  1030  057A                     l2204:
  1031                           
  1032                           ;main.c: 163:       TXIE = 1u;
  1033  057A  1683               	bsf	3,5	;RP0=1, select bank1
  1034  057B  1303               	bcf	3,6	;RP1=0, select bank1
  1035  057C  160C               	bsf	12,4	;volatile
  1036  057D                     l2206:
  1037                           
  1038                           ;main.c: 165:       new_time = 0;
  1039  057D  1283               	bcf	3,5	;RP0=0, select bank0
  1040  057E  1303               	bcf	3,6	;RP1=0, select bank0
  1041  057F  01D9               	clrf	main@new_time
  1042  0580                     l2208:
  1043                           
  1044                           ;main.c: 167:     if((new_value >= 40u) && (new_value <= 130u))
  1045  0580  3000               	movlw	0
  1046  0581  0237               	subwf	_new_value+1,w	;volatile
  1047  0582  3028               	movlw	40
  1048  0583  1903               	skipnz
  1049  0584  0236               	subwf	_new_value,w	;volatile
  1050  0585  1C03               	skipc
  1051  0586  2D88               	goto	u1731
  1052  0587  2D89               	goto	u1730
  1053  0588                     u1731:
  1054  0588  2DA0               	goto	l2218
  1055  0589                     u1730:
  1056  0589                     l2210:
  1057  0589  3000               	movlw	0
  1058  058A  0237               	subwf	_new_value+1,w	;volatile
  1059  058B  3083               	movlw	131
  1060  058C  1903               	skipnz
  1061  058D  0236               	subwf	_new_value,w	;volatile
  1062  058E  1803               	skipnc
  1063  058F  2D91               	goto	u1741
  1064  0590  2D92               	goto	u1740
  1065  0591                     u1741:
  1066  0591  2DA0               	goto	l2218
  1067  0592                     u1740:
  1068  0592                     l2212:
  1069                           
  1070                           ;main.c: 168:     {;main.c: 169:       new_value = 0u;
  1071  0592  01B6               	clrf	_new_value	;volatile
  1072  0593  01B7               	clrf	_new_value+1	;volatile
  1073  0594                     l2214:
  1074                           
  1075                           ;main.c: 170:       new_bit(bit_counter++, 0u);
  1076  0594  01CC               	clrf	new_bit@value
  1077  0595  083F               	movf	_bit_counter,w	;volatile
  1078  0596  118A  202F  118A   	fcall	_new_bit
  1079  0599                     l2216:
  1080  0599  3001               	movlw	1
  1081  059A  1283               	bcf	3,5	;RP0=0, select bank0
  1082  059B  1303               	bcf	3,6	;RP1=0, select bank0
  1083  059C  00D7               	movwf	??_main
  1084  059D  0857               	movf	??_main,w
  1085  059E  07BF               	addwf	_bit_counter,f	;volatile
  1086                           
  1087                           ;main.c: 171:     }
  1088  059F  2DBB               	goto	l110
  1089  05A0                     l2218:
  1090  05A0  3000               	movlw	0
  1091  05A1  0237               	subwf	_new_value+1,w	;volatile
  1092  05A2  308C               	movlw	140
  1093  05A3  1903               	skipnz
  1094  05A4  0236               	subwf	_new_value,w	;volatile
  1095  05A5  1C03               	skipc
  1096  05A6  2DA8               	goto	u1751
  1097  05A7  2DA9               	goto	u1750
  1098  05A8                     u1751:
  1099  05A8  2DBB               	goto	l110
  1100  05A9                     u1750:
  1101  05A9                     l2220:
  1102  05A9  3000               	movlw	0
  1103  05AA  0237               	subwf	_new_value+1,w	;volatile
  1104  05AB  30E7               	movlw	231
  1105  05AC  1903               	skipnz
  1106  05AD  0236               	subwf	_new_value,w	;volatile
  1107  05AE  1803               	skipnc
  1108  05AF  2DB1               	goto	u1761
  1109  05B0  2DB2               	goto	u1760
  1110  05B1                     u1761:
  1111  05B1  2DBB               	goto	l110
  1112  05B2                     u1760:
  1113  05B2                     l2222:
  1114                           
  1115                           ;main.c: 173:     {;main.c: 174:       new_value = 0u;
  1116  05B2  01B6               	clrf	_new_value	;volatile
  1117  05B3  01B7               	clrf	_new_value+1	;volatile
  1118  05B4                     l2224:
  1119                           
  1120                           ;main.c: 175:       new_bit(bit_counter++, 1u);
  1121  05B4  01CC               	clrf	new_bit@value
  1122  05B5  0ACC               	incf	new_bit@value,f
  1123  05B6  083F               	movf	_bit_counter,w	;volatile
  1124  05B7  118A  202F  118A   	fcall	_new_bit
  1125  05BA  2D99               	goto	l2216
  1126  05BB                     l110:
  1127                           
  1128                           ;main.c: 182:     if(SSPIF)
  1129  05BB  1D8C               	btfss	12,3	;volatile
  1130  05BC  2DBE               	goto	u1771
  1131  05BD  2DBF               	goto	u1770
  1132  05BE                     u1771:
  1133  05BE  2D21               	goto	l2166
  1134  05BF                     u1770:
  1135  05BF                     l2228:
  1136                           
  1137                           ;main.c: 183:     {;main.c: 184:       WCOL = 0u;
  1138  05BF  1394               	bcf	20,7	;volatile
  1139                           
  1140                           ;main.c: 185:       SSPIF = 0u;
  1141  05C0  118C               	bcf	12,3	;volatile
  1142  05C1                     l2230:
  1143                           
  1144                           ;main.c: 186:       if(out_pos == 0u)
  1145  05C1  083D               	movf	_out_pos,w
  1146  05C2  1D03               	btfss	3,2
  1147  05C3  2DC5               	goto	u1781
  1148  05C4  2DC6               	goto	u1780
  1149  05C5                     u1781:
  1150  05C5  2DC9               	goto	l2234
  1151  05C6                     u1780:
  1152  05C6                     l2232:
  1153                           
  1154                           ;main.c: 187:       {;main.c: 188:         RB2 = 1u;
  1155  05C6  1506               	bsf	6,2	;volatile
  1156                           
  1157                           ;main.c: 189:         RB4 = 0u;
  1158  05C7  1206               	bcf	6,4	;volatile
  1159                           
  1160                           ;main.c: 190:       }
  1161  05C8  2DDB               	goto	l2242
  1162  05C9                     l2234:
  1163  05C9  3006               	movlw	6
  1164  05CA  063D               	xorwf	_out_pos,w
  1165  05CB  1D03               	btfss	3,2
  1166  05CC  2DCE               	goto	u1791
  1167  05CD  2DCF               	goto	u1790
  1168  05CE                     u1791:
  1169  05CE  2DD2               	goto	l2238
  1170  05CF                     u1790:
  1171  05CF                     l2236:
  1172                           
  1173                           ;main.c: 192:       {;main.c: 193:         RB4 = 1;
  1174  05CF  1606               	bsf	6,4	;volatile
  1175                           
  1176                           ;main.c: 194:         RB3 = 0;
  1177  05D0  1186               	bcf	6,3	;volatile
  1178                           
  1179                           ;main.c: 195:       }
  1180  05D1  2DDB               	goto	l2242
  1181  05D2                     l2238:
  1182  05D2  3008               	movlw	8
  1183  05D3  063D               	xorwf	_out_pos,w
  1184  05D4  1D03               	btfss	3,2
  1185  05D5  2DD7               	goto	u1801
  1186  05D6  2DD8               	goto	u1800
  1187  05D7                     u1801:
  1188  05D7  2DDB               	goto	l117
  1189  05D8                     u1800:
  1190  05D8                     l2240:
  1191                           
  1192                           ;main.c: 197:       {;main.c: 198:         RB3 = 1u;
  1193  05D8  1586               	bsf	6,3	;volatile
  1194                           
  1195                           ;main.c: 199:         RB2 = 0u;
  1196  05D9  1106               	bcf	6,2	;volatile
  1197                           
  1198                           ;main.c: 200:       }
  1199  05DA  2DDB               	goto	l2242
  1200  05DB                     l117:
  1201  05DB                     l2242:
  1202                           
  1203                           ;main.c: 205:       SSPBUF = spi_buffer[out_pos++];
  1204  05DB  083D               	movf	_out_pos,w
  1205  05DC  3E21               	addlw	(low (_spi_buffer| 0))& (0+255)
  1206  05DD  0084               	movwf	4
  1207  05DE  1383               	bcf	3,7	;select IRP bank0
  1208  05DF  0800               	movf	0,w
  1209  05E0  0093               	movwf	19	;volatile
  1210  05E1                     l2244:
  1211  05E1  3001               	movlw	1
  1212  05E2  00D7               	movwf	??_main
  1213  05E3  0857               	movf	??_main,w
  1214  05E4  07BD               	addwf	_out_pos,f
  1215  05E5                     l2246:
  1216                           
  1217                           ;main.c: 206:       if(out_pos == sizeof(spi_buffer))
  1218  05E5  300B               	movlw	11
  1219  05E6  063D               	xorwf	_out_pos,w
  1220  05E7  1D03               	btfss	3,2
  1221  05E8  2DEA               	goto	u1811
  1222  05E9  2DEB               	goto	u1810
  1223  05EA                     u1811:
  1224  05EA  2DEC               	goto	l2250
  1225  05EB                     u1810:
  1226  05EB                     l2248:
  1227                           
  1228                           ;main.c: 207:       {;main.c: 208:         out_pos = 0;
  1229  05EB  01BD               	clrf	_out_pos
  1230  05EC                     l2250:
  1231                           
  1232                           ;main.c: 215:       if(out_pos == 6u)
  1233  05EC  3006               	movlw	6
  1234  05ED  063D               	xorwf	_out_pos,w
  1235  05EE  1D03               	btfss	3,2
  1236  05EF  2DF1               	goto	u1821
  1237  05F0  2DF2               	goto	u1820
  1238  05F1                     u1821:
  1239  05F1  2E3C               	goto	l2254
  1240  05F2                     u1820:
  1241  05F2                     l2252:
  1242                           
  1243                           ;main.c: 216:       {;main.c: 217:         spi_buffer[0] = get_time_data(&current_time, 
      +                          0u);
  1244  05F2  01D0               	clrf	get_time_data@time_segment
  1245  05F3  3060               	movlw	(low (_current_time| 0))& (0+255)
  1246  05F4  158A  2740  118A   	fcall	_get_time_data
  1247  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  1248  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  1249  05F9  00D7               	movwf	??_main
  1250  05FA  0857               	movf	??_main,w
  1251  05FB  00A1               	movwf	_spi_buffer
  1252                           
  1253                           ;main.c: 218:         spi_buffer[1] = get_time_data(&current_time, 1u);
  1254  05FC  01D0               	clrf	get_time_data@time_segment
  1255  05FD  0AD0               	incf	get_time_data@time_segment,f
  1256  05FE  3060               	movlw	(low (_current_time| 0))& (0+255)
  1257  05FF  158A  2740  118A   	fcall	_get_time_data
  1258  0602  1283               	bcf	3,5	;RP0=0, select bank0
  1259  0603  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0604  00D7               	movwf	??_main
  1261  0605  0857               	movf	??_main,w
  1262  0606  00A2               	movwf	_spi_buffer+1
  1263                           
  1264                           ;main.c: 219:         spi_buffer[2] = get_time_data(&current_time, 2u);
  1265  0607  3002               	movlw	2
  1266  0608  00D7               	movwf	??_main
  1267  0609  0857               	movf	??_main,w
  1268  060A  00D0               	movwf	get_time_data@time_segment
  1269  060B  3060               	movlw	(low (_current_time| 0))& (0+255)
  1270  060C  158A  2740  118A   	fcall	_get_time_data
  1271  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0611  00D8               	movwf	??_main+1
  1274  0612  0858               	movf	??_main+1,w
  1275  0613  00A3               	movwf	_spi_buffer+2
  1276                           
  1277                           ;main.c: 220:         spi_buffer[3] = get_time_data(&current_time, 3u);
  1278  0614  3003               	movlw	3
  1279  0615  00D7               	movwf	??_main
  1280  0616  0857               	movf	??_main,w
  1281  0617  00D0               	movwf	get_time_data@time_segment
  1282  0618  3060               	movlw	(low (_current_time| 0))& (0+255)
  1283  0619  158A  2740  118A   	fcall	_get_time_data
  1284  061C  1283               	bcf	3,5	;RP0=0, select bank0
  1285  061D  1303               	bcf	3,6	;RP1=0, select bank0
  1286  061E  00D8               	movwf	??_main+1
  1287  061F  0858               	movf	??_main+1,w
  1288  0620  00A4               	movwf	_spi_buffer+3
  1289                           
  1290                           ;main.c: 221:         spi_buffer[4] = get_time_data_seconds(seconds, 4u);
  1291  0621  3004               	movlw	4
  1292  0622  00D7               	movwf	??_main
  1293  0623  0857               	movf	??_main,w
  1294  0624  00D0               	movwf	get_time_data_seconds@time_segment
  1295  0625  083E               	movf	_seconds,w	;volatile
  1296  0626  118A  279E  118A   	fcall	_get_time_data_seconds
  1297  0629  1283               	bcf	3,5	;RP0=0, select bank0
  1298  062A  1303               	bcf	3,6	;RP1=0, select bank0
  1299  062B  00D8               	movwf	??_main+1
  1300  062C  0858               	movf	??_main+1,w
  1301  062D  00A5               	movwf	_spi_buffer+4
  1302                           
  1303                           ;main.c: 222:         spi_buffer[5] = get_time_data_seconds(seconds, 5u);
  1304  062E  3005               	movlw	5
  1305  062F  00D7               	movwf	??_main
  1306  0630  0857               	movf	??_main,w
  1307  0631  00D0               	movwf	get_time_data_seconds@time_segment
  1308  0632  083E               	movf	_seconds,w	;volatile
  1309  0633  118A  279E  118A   	fcall	_get_time_data_seconds
  1310  0636  1283               	bcf	3,5	;RP0=0, select bank0
  1311  0637  1303               	bcf	3,6	;RP1=0, select bank0
  1312  0638  00D8               	movwf	??_main+1
  1313  0639  0858               	movf	??_main+1,w
  1314  063A  00A6               	movwf	_spi_buffer+5
  1315                           
  1316                           ;main.c: 223:       }
  1317  063B  2D21               	goto	l2166
  1318  063C                     l2254:
  1319  063C  3008               	movlw	8
  1320  063D  063D               	xorwf	_out_pos,w
  1321  063E  1D03               	btfss	3,2
  1322  063F  2E41               	goto	u1831
  1323  0640  2E42               	goto	u1830
  1324  0641                     u1831:
  1325  0641  2E68               	goto	l2266
  1326  0642                     u1830:
  1327  0642                     l2256:
  1328                           
  1329                           ;main.c: 225:       {;main.c: 226:         spi_buffer[6] = (uint8_t)(1u << date_segment)
      +                          ;
  1330  0642  3001               	movlw	1
  1331  0643  00D7               	movwf	??_main
  1332  0644  0A43               	incf	_date_segment,w
  1333  0645  2E48               	goto	u1844
  1334  0646                     u1845:
  1335  0646  1003               	clrc
  1336  0647  0DD7               	rlf	??_main,f
  1337  0648                     u1844:
  1338  0648  3EFF               	addlw	-1
  1339  0649  1D03               	skipz
  1340  064A  2E46               	goto	u1845
  1341  064B  0857               	movf	??_main,w
  1342  064C  00D8               	movwf	??_main+1
  1343  064D  0858               	movf	??_main+1,w
  1344  064E  00A7               	movwf	_spi_buffer+6
  1345  064F                     l2258:
  1346                           
  1347                           ;main.c: 227:         spi_buffer[7] = get_date_data(&current_time, date_segment++);
  1348  064F  0843               	movf	_date_segment,w
  1349  0650  00D7               	movwf	??_main
  1350  0651  0857               	movf	??_main,w
  1351  0652  00D0               	movwf	get_date_data@date_segment
  1352  0653  3060               	movlw	(low (_current_time| 0))& (0+255)
  1353  0654  118A  26A6  118A   	fcall	_get_date_data
  1354  0657  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0658  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0659  00D8               	movwf	??_main+1
  1357  065A  0858               	movf	??_main+1,w
  1358  065B  00A8               	movwf	_spi_buffer+7
  1359  065C                     l2260:
  1360  065C  3001               	movlw	1
  1361  065D  00D7               	movwf	??_main
  1362  065E  0857               	movf	??_main,w
  1363  065F  07C3               	addwf	_date_segment,f
  1364  0660                     l2262:
  1365                           
  1366                           ;main.c: 228:         if(date_segment == 8u)
  1367  0660  3008               	movlw	8
  1368  0661  0643               	xorwf	_date_segment,w
  1369  0662  1D03               	btfss	3,2
  1370  0663  2E65               	goto	u1851
  1371  0664  2E66               	goto	u1850
  1372  0665                     u1851:
  1373  0665  2D21               	goto	l2166
  1374  0666                     u1850:
  1375  0666                     l2264:
  1376                           
  1377                           ;main.c: 229:         {;main.c: 230:           date_segment = 0u;
  1378  0666  01C3               	clrf	_date_segment
  1379  0667  2D21               	goto	l2166
  1380  0668                     l2266:
  1381  0668  083D               	movf	_out_pos,w
  1382  0669  1D03               	btfss	3,2
  1383  066A  2E6C               	goto	u1861
  1384  066B  2E6D               	goto	u1860
  1385  066C                     u1861:
  1386  066C  2EA3               	goto	l122
  1387  066D                     u1860:
  1388  066D                     l2268:
  1389                           
  1390                           ;main.c: 234:       {;main.c: 235:         spi_buffer[8] = (uint8_t)(1u << day_segment);
  1391  066D  3001               	movlw	1
  1392  066E  00D7               	movwf	??_main
  1393  066F  0A42               	incf	_day_segment,w
  1394  0670  2E73               	goto	u1874
  1395  0671                     u1875:
  1396  0671  1003               	clrc
  1397  0672  0DD7               	rlf	??_main,f
  1398  0673                     u1874:
  1399  0673  3EFF               	addlw	-1
  1400  0674  1D03               	skipz
  1401  0675  2E71               	goto	u1875
  1402  0676  0857               	movf	??_main,w
  1403  0677  00D8               	movwf	??_main+1
  1404  0678  0858               	movf	??_main+1,w
  1405  0679  00A9               	movwf	_spi_buffer+8
  1406  067A                     l2270:
  1407                           
  1408                           ;main.c: 236:         spi_buffer[9] = get_day_data(&current_time, day_segment, 0u);
  1409  067A  0842               	movf	_day_segment,w
  1410  067B  00D7               	movwf	??_main
  1411  067C  0857               	movf	??_main,w
  1412  067D  00CC               	movwf	get_day_data@day_segment
  1413  067E  01CD               	clrf	get_day_data@byte
  1414  067F  3060               	movlw	(low (_current_time| 0))& (0+255)
  1415  0680  158A  25DD  118A   	fcall	_get_day_data
  1416  0683  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0684  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0685  00D8               	movwf	??_main+1
  1419  0686  0858               	movf	??_main+1,w
  1420  0687  00AA               	movwf	_spi_buffer+9
  1421  0688                     l2272:
  1422                           
  1423                           ;main.c: 237:         spi_buffer[10] = get_day_data(&current_time, day_segment++, 1u);
  1424  0688  0842               	movf	_day_segment,w
  1425  0689  00D7               	movwf	??_main
  1426  068A  0857               	movf	??_main,w
  1427  068B  00CC               	movwf	get_day_data@day_segment
  1428  068C  01CD               	clrf	get_day_data@byte
  1429  068D  0ACD               	incf	get_day_data@byte,f
  1430  068E  3060               	movlw	(low (_current_time| 0))& (0+255)
  1431  068F  158A  25DD  118A   	fcall	_get_day_data
  1432  0692  1283               	bcf	3,5	;RP0=0, select bank0
  1433  0693  1303               	bcf	3,6	;RP1=0, select bank0
  1434  0694  00D8               	movwf	??_main+1
  1435  0695  0858               	movf	??_main+1,w
  1436  0696  00AB               	movwf	_spi_buffer+10
  1437  0697  3001               	movlw	1
  1438  0698  00D7               	movwf	??_main
  1439  0699  0857               	movf	??_main,w
  1440  069A  07C2               	addwf	_day_segment,f
  1441                           
  1442                           ;main.c: 238:         if(day_segment == 3u)
  1443  069B  3003               	movlw	3
  1444  069C  0642               	xorwf	_day_segment,w
  1445  069D  1D03               	btfss	3,2
  1446  069E  2EA0               	goto	u1881
  1447  069F  2EA1               	goto	u1880
  1448  06A0                     u1881:
  1449  06A0  2EA3               	goto	l122
  1450  06A1                     u1880:
  1451  06A1                     l2274:
  1452                           
  1453                           ;main.c: 239:         {;main.c: 240:           day_segment = 0u;
  1454  06A1  01C2               	clrf	_day_segment
  1455  06A2  2D21               	goto	l2166
  1456  06A3                     l122:
  1457  06A3  2D21               	goto	l2166
  1458  06A4  118A  280F         	ljmp	start
  1459  06A6                     __end_of_main:
  1460                           
  1461                           	psect	text1
  1462  0CF2                     __ptext1:	
  1463 ;; *************** function _strlen *****************
  1464 ;; Defined at:
  1465 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strlen.c"
  1466 ;; Parameters:    Size  Location     Type
  1467 ;;  s               1    wreg     PTR const unsigned char 
  1468 ;;		 -> buffer(40), 
  1469 ;; Auto vars:     Size  Location     Type
  1470 ;;  s               1    7[BANK0 ] PTR const unsigned char 
  1471 ;;		 -> buffer(40), 
  1472 ;;  cp              1    8[BANK0 ] PTR const unsigned char 
  1473 ;;		 -> buffer(40), 
  1474 ;; Return value:  Size  Location     Type
  1475 ;;                  2    4[BANK0 ] unsigned int 
  1476 ;; Registers used:
  1477 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1478 ;; Tracked objects:
  1479 ;;		On entry : 0/0
  1480 ;;		On exit  : 0/0
  1481 ;;		Unchanged: 0/0
  1482 ;; Data sizes:     COMMON   BANK0   BANK1
  1483 ;;      Params:         0       2       0
  1484 ;;      Locals:         0       2       0
  1485 ;;      Temps:          0       1       0
  1486 ;;      Totals:         0       5       0
  1487 ;;Total ram usage:        5 bytes
  1488 ;; Hardware stack levels used: 1
  1489 ;; Hardware stack levels required when called: 1
  1490 ;; This function calls:
  1491 ;;		Nothing
  1492 ;; This function is called by:
  1493 ;;		_main
  1494 ;; This function uses a non-reentrant model
  1495 ;;
  1496                           
  1497                           
  1498                           ;psect for function _strlen
  1499  0CF2                     _strlen:
  1500                           
  1501                           ;incstack = 0
  1502                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0]
  1503                           ;strlen@s stored from wreg
  1504  0CF2  1283               	bcf	3,5	;RP0=0, select bank0
  1505  0CF3  1303               	bcf	3,6	;RP1=0, select bank0
  1506  0CF4  00CB               	movwf	strlen@s
  1507  0CF5                     l1712:
  1508  0CF5  084B               	movf	strlen@s,w
  1509  0CF6  00CA               	movwf	??_strlen
  1510  0CF7  084A               	movf	??_strlen,w
  1511  0CF8  00CC               	movwf	strlen@cp
  1512  0CF9  2CFE               	goto	l1716
  1513  0CFA                     l1714:
  1514  0CFA  3001               	movlw	1
  1515  0CFB  00CA               	movwf	??_strlen
  1516  0CFC  084A               	movf	??_strlen,w
  1517  0CFD  07CC               	addwf	strlen@cp,f
  1518  0CFE                     l1716:
  1519  0CFE  084C               	movf	strlen@cp,w
  1520  0CFF  0084               	movwf	4
  1521  0D00  1383               	bcf	3,7	;select IRP bank0
  1522  0D01  0800               	movf	0,w
  1523  0D02  1D03               	btfss	3,2
  1524  0D03  2D05               	goto	u1111
  1525  0D04  2D06               	goto	u1110
  1526  0D05                     u1111:
  1527  0D05  2CFA               	goto	l1714
  1528  0D06                     u1110:
  1529  0D06                     l1718:
  1530  0D06  084B               	movf	strlen@s,w
  1531  0D07  024C               	subwf	strlen@cp,w
  1532  0D08  00C8               	movwf	?_strlen
  1533  0D09  01C9               	clrf	?_strlen+1
  1534  0D0A  1BC8               	btfsc	?_strlen,7
  1535  0D0B  03C9               	decf	?_strlen+1,f
  1536  0D0C                     l804:
  1537  0D0C  0008               	return
  1538  0D0D                     __end_of_strlen:
  1539                           
  1540                           	psect	text2
  1541  002F                     __ptext2:	
  1542 ;; *************** function _new_bit *****************
  1543 ;; Defined at:
  1544 ;;		line 100 in file "dcf77_decoder.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;  bit_number      1    wreg     unsigned char 
  1547 ;;  value           1    8[BANK0 ] unsigned char 
  1548 ;; Auto vars:     Size  Location     Type
  1549 ;;  bit_number      1   11[BANK0 ] unsigned char 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1
  1559 ;;      Params:         0       1       0
  1560 ;;      Locals:         0       1       0
  1561 ;;      Temps:          0       2       0
  1562 ;;      Totals:         0       4       0
  1563 ;;Total ram usage:        4 bytes
  1564 ;; Hardware stack levels used: 1
  1565 ;; Hardware stack levels required when called: 2
  1566 ;; This function calls:
  1567 ;;		___bmul
  1568 ;; This function is called by:
  1569 ;;		_main
  1570 ;; This function uses a non-reentrant model
  1571 ;;
  1572                           
  1573                           
  1574                           ;psect for function _new_bit
  1575  002F                     _new_bit:
  1576                           
  1577                           ;incstack = 0
  1578                           ; Regs used in _new_bit: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1579                           ;new_bit@bit_number stored from wreg
  1580  002F  1283               	bcf	3,5	;RP0=0, select bank0
  1581  0030  1303               	bcf	3,6	;RP1=0, select bank0
  1582  0031  00CF               	movwf	new_bit@bit_number
  1583  0032                     l1886:
  1584                           
  1585                           ;dcf77_decoder.c: 100: void new_bit(uint8_t bit_number, uint8_t value);dcf77_decoder.c: 
      +                          101: {;dcf77_decoder.c: 102:   switch(bit_number)
  1586  0032  2A54               	goto	l2000
  1587  0033                     l1888:
  1588                           
  1589                           ;dcf77_decoder.c: 105:       tmp_time.minutes = 1u * value;
  1590  0033  084C               	movf	new_bit@value,w
  1591  0034  00CD               	movwf	??_new_bit
  1592  0035  084D               	movf	??_new_bit,w
  1593  0036  00AC               	movwf	_tmp_time
  1594                           
  1595                           ;dcf77_decoder.c: 106:       parity_minutes = value;
  1596  0037  084C               	movf	new_bit@value,w
  1597  0038  00CD               	movwf	??_new_bit
  1598  0039  084D               	movf	??_new_bit,w
  1599  003A  00BC               	movwf	_parity_minutes
  1600                           
  1601                           ;dcf77_decoder.c: 107:       break;
  1602  003B  2AD0               	goto	l247
  1603  003C                     l1890:
  1604                           
  1605                           ;dcf77_decoder.c: 109:       tmp_time.minutes += 2u * value;
  1606  003C  084C               	movf	new_bit@value,w
  1607  003D  00CD               	movwf	??_new_bit
  1608  003E  074D               	addwf	??_new_bit,w
  1609  003F  00CE               	movwf	??_new_bit+1
  1610  0040  084E               	movf	??_new_bit+1,w
  1611  0041  07AC               	addwf	_tmp_time,f
  1612                           
  1613                           ;dcf77_decoder.c: 110:       parity_minutes += value;
  1614  0042  084C               	movf	new_bit@value,w
  1615  0043  00CD               	movwf	??_new_bit
  1616  0044  084D               	movf	??_new_bit,w
  1617  0045  07BC               	addwf	_parity_minutes,f
  1618                           
  1619                           ;dcf77_decoder.c: 111:       break;
  1620  0046  2AD0               	goto	l247
  1621  0047                     l1892:
  1622                           
  1623                           ;dcf77_decoder.c: 113:       tmp_time.minutes += 4u * value;
  1624  0047  084C               	movf	new_bit@value,w
  1625  0048  00CD               	movwf	??_new_bit
  1626  0049  3001               	movlw	1
  1627  004A                     u1315:
  1628  004A  1003               	clrc
  1629  004B  0DCD               	rlf	??_new_bit,f
  1630  004C  3EFF               	addlw	-1
  1631  004D  1D03               	skipz
  1632  004E  284A               	goto	u1315
  1633  004F  1003               	clrc
  1634  0050  0D4D               	rlf	??_new_bit,w
  1635  0051  00CE               	movwf	??_new_bit+1
  1636  0052  084E               	movf	??_new_bit+1,w
  1637  0053  07AC               	addwf	_tmp_time,f
  1638                           
  1639                           ;dcf77_decoder.c: 114:       parity_minutes += value;
  1640  0054  084C               	movf	new_bit@value,w
  1641  0055  00CD               	movwf	??_new_bit
  1642  0056  084D               	movf	??_new_bit,w
  1643  0057  07BC               	addwf	_parity_minutes,f
  1644                           
  1645                           ;dcf77_decoder.c: 115:       break;
  1646  0058  2AD0               	goto	l247
  1647  0059                     l1894:
  1648                           
  1649                           ;dcf77_decoder.c: 117:       tmp_time.minutes += 8u * value;
  1650  0059  084C               	movf	new_bit@value,w
  1651  005A  00CD               	movwf	??_new_bit
  1652  005B  3002               	movlw	2
  1653  005C                     u1325:
  1654  005C  1003               	clrc
  1655  005D  0DCD               	rlf	??_new_bit,f
  1656  005E  3EFF               	addlw	-1
  1657  005F  1D03               	skipz
  1658  0060  285C               	goto	u1325
  1659  0061  1003               	clrc
  1660  0062  0D4D               	rlf	??_new_bit,w
  1661  0063  00CE               	movwf	??_new_bit+1
  1662  0064  084E               	movf	??_new_bit+1,w
  1663  0065  07AC               	addwf	_tmp_time,f
  1664                           
  1665                           ;dcf77_decoder.c: 118:       parity_minutes += value;
  1666  0066  084C               	movf	new_bit@value,w
  1667  0067  00CD               	movwf	??_new_bit
  1668  0068  084D               	movf	??_new_bit,w
  1669  0069  07BC               	addwf	_parity_minutes,f
  1670                           
  1671                           ;dcf77_decoder.c: 119:       break;
  1672  006A  2AD0               	goto	l247
  1673  006B                     l1896:
  1674                           
  1675                           ;dcf77_decoder.c: 121:       tmp_time.minutes += 10u * value;
  1676  006B  300A               	movlw	10
  1677  006C  00CD               	movwf	??_new_bit
  1678  006D  084D               	movf	??_new_bit,w
  1679  006E  00C8               	movwf	___bmul@multiplicand
  1680  006F  084C               	movf	new_bit@value,w
  1681  0070  158A  24DB  118A   	fcall	___bmul
  1682  0073  1283               	bcf	3,5	;RP0=0, select bank0
  1683  0074  1303               	bcf	3,6	;RP1=0, select bank0
  1684  0075  00CE               	movwf	??_new_bit+1
  1685  0076  084E               	movf	??_new_bit+1,w
  1686  0077  07AC               	addwf	_tmp_time,f
  1687  0078                     l1898:
  1688                           
  1689                           ;dcf77_decoder.c: 122:       parity_minutes += value;
  1690  0078  084C               	movf	new_bit@value,w
  1691  0079  00CD               	movwf	??_new_bit
  1692  007A  084D               	movf	??_new_bit,w
  1693  007B  07BC               	addwf	_parity_minutes,f
  1694                           
  1695                           ;dcf77_decoder.c: 123:       break;
  1696  007C  2AD0               	goto	l247
  1697  007D                     l1900:
  1698                           
  1699                           ;dcf77_decoder.c: 125:       tmp_time.minutes += 20u * value;
  1700  007D  0E4C               	swapf	new_bit@value,w
  1701  007E  39F0               	andlw	240
  1702  007F  00CD               	movwf	??_new_bit
  1703  0080  084C               	movf	new_bit@value,w
  1704  0081  074C               	addwf	new_bit@value,w
  1705  0082  07CD               	addwf	??_new_bit,f
  1706  0083  07CD               	addwf	??_new_bit,f
  1707  0084  084D               	movf	??_new_bit,w
  1708  0085  00CE               	movwf	??_new_bit+1
  1709  0086  084E               	movf	??_new_bit+1,w
  1710  0087  07AC               	addwf	_tmp_time,f
  1711                           
  1712                           ;dcf77_decoder.c: 126:       parity_minutes += value;
  1713  0088  084C               	movf	new_bit@value,w
  1714  0089  00CD               	movwf	??_new_bit
  1715  008A  084D               	movf	??_new_bit,w
  1716  008B  07BC               	addwf	_parity_minutes,f
  1717                           
  1718                           ;dcf77_decoder.c: 127:       break;
  1719  008C  2AD0               	goto	l247
  1720  008D                     l1902:
  1721                           
  1722                           ;dcf77_decoder.c: 129:       tmp_time.minutes += 40u * value;
  1723  008D  3028               	movlw	40
  1724  008E  00CD               	movwf	??_new_bit
  1725  008F  084D               	movf	??_new_bit,w
  1726  0090  00C8               	movwf	___bmul@multiplicand
  1727  0091  084C               	movf	new_bit@value,w
  1728  0092  158A  24DB  118A   	fcall	___bmul
  1729  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1730  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1731  0097  00CE               	movwf	??_new_bit+1
  1732  0098  084E               	movf	??_new_bit+1,w
  1733  0099  07AC               	addwf	_tmp_time,f
  1734  009A  2878               	goto	l1898
  1735  009B                     l1906:
  1736                           
  1737                           ;dcf77_decoder.c: 133:       parity_minutes += value;
  1738  009B  084C               	movf	new_bit@value,w
  1739  009C  00CD               	movwf	??_new_bit
  1740  009D  084D               	movf	??_new_bit,w
  1741  009E  07BC               	addwf	_parity_minutes,f
  1742  009F                     l1908:
  1743                           
  1744                           ;dcf77_decoder.c: 135:       if (parity_minutes % 2u)
  1745  009F  1C3C               	btfss	_parity_minutes,0
  1746  00A0  28A2               	goto	u1331
  1747  00A1  28A3               	goto	u1330
  1748  00A2                     u1331:
  1749  00A2  2AD0               	goto	l247
  1750  00A3                     u1330:
  1751  00A3                     l1910:
  1752                           
  1753                           ;dcf77_decoder.c: 136:       {;dcf77_decoder.c: 137:         tmp_time.minutes = (255);
  1754  00A3  30FF               	movlw	255
  1755  00A4  00CD               	movwf	??_new_bit
  1756  00A5  084D               	movf	??_new_bit,w
  1757  00A6  00AC               	movwf	_tmp_time
  1758  00A7  2AD0               	goto	l247
  1759  00A8                     l1912:
  1760                           
  1761                           ;dcf77_decoder.c: 141:       tmp_time.hours = 1u * value;
  1762  00A8  084C               	movf	new_bit@value,w
  1763  00A9  00CD               	movwf	??_new_bit
  1764  00AA  084D               	movf	??_new_bit,w
  1765  00AB  00AD               	movwf	_tmp_time+1
  1766                           
  1767                           ;dcf77_decoder.c: 142:       parity_hours = value;
  1768  00AC  084C               	movf	new_bit@value,w
  1769  00AD  00CD               	movwf	??_new_bit
  1770  00AE  084D               	movf	??_new_bit,w
  1771  00AF  00BB               	movwf	_parity_hours
  1772                           
  1773                           ;dcf77_decoder.c: 143:       break;
  1774  00B0  2AD0               	goto	l247
  1775  00B1                     l1914:
  1776                           
  1777                           ;dcf77_decoder.c: 145:       tmp_time.hours += 2u * value;
  1778  00B1  084C               	movf	new_bit@value,w
  1779  00B2  00CD               	movwf	??_new_bit
  1780  00B3  074D               	addwf	??_new_bit,w
  1781  00B4  00CE               	movwf	??_new_bit+1
  1782  00B5  084E               	movf	??_new_bit+1,w
  1783  00B6  07AD               	addwf	_tmp_time+1,f
  1784                           
  1785                           ;dcf77_decoder.c: 146:       parity_hours += value;
  1786  00B7  084C               	movf	new_bit@value,w
  1787  00B8  00CD               	movwf	??_new_bit
  1788  00B9  084D               	movf	??_new_bit,w
  1789  00BA  07BB               	addwf	_parity_hours,f
  1790                           
  1791                           ;dcf77_decoder.c: 147:       break;
  1792  00BB  2AD0               	goto	l247
  1793  00BC                     l1916:
  1794                           
  1795                           ;dcf77_decoder.c: 149:       tmp_time.hours += 4u * value;
  1796  00BC  084C               	movf	new_bit@value,w
  1797  00BD  00CD               	movwf	??_new_bit
  1798  00BE  3001               	movlw	1
  1799  00BF                     u1345:
  1800  00BF  1003               	clrc
  1801  00C0  0DCD               	rlf	??_new_bit,f
  1802  00C1  3EFF               	addlw	-1
  1803  00C2  1D03               	skipz
  1804  00C3  28BF               	goto	u1345
  1805  00C4  1003               	clrc
  1806  00C5  0D4D               	rlf	??_new_bit,w
  1807  00C6  00CE               	movwf	??_new_bit+1
  1808  00C7  084E               	movf	??_new_bit+1,w
  1809  00C8  07AD               	addwf	_tmp_time+1,f
  1810                           
  1811                           ;dcf77_decoder.c: 150:       parity_hours += value;
  1812  00C9  084C               	movf	new_bit@value,w
  1813  00CA  00CD               	movwf	??_new_bit
  1814  00CB  084D               	movf	??_new_bit,w
  1815  00CC  07BB               	addwf	_parity_hours,f
  1816                           
  1817                           ;dcf77_decoder.c: 151:       break;
  1818  00CD  2AD0               	goto	l247
  1819  00CE                     l1918:
  1820                           
  1821                           ;dcf77_decoder.c: 153:       tmp_time.hours += 8u * value;
  1822  00CE  084C               	movf	new_bit@value,w
  1823  00CF  00CD               	movwf	??_new_bit
  1824  00D0  3002               	movlw	2
  1825  00D1                     u1355:
  1826  00D1  1003               	clrc
  1827  00D2  0DCD               	rlf	??_new_bit,f
  1828  00D3  3EFF               	addlw	-1
  1829  00D4  1D03               	skipz
  1830  00D5  28D1               	goto	u1355
  1831  00D6  1003               	clrc
  1832  00D7  0D4D               	rlf	??_new_bit,w
  1833  00D8  00CE               	movwf	??_new_bit+1
  1834  00D9  084E               	movf	??_new_bit+1,w
  1835  00DA  07AD               	addwf	_tmp_time+1,f
  1836                           
  1837                           ;dcf77_decoder.c: 154:       parity_hours += value;
  1838  00DB  084C               	movf	new_bit@value,w
  1839  00DC  00CD               	movwf	??_new_bit
  1840  00DD  084D               	movf	??_new_bit,w
  1841  00DE  07BB               	addwf	_parity_hours,f
  1842                           
  1843                           ;dcf77_decoder.c: 155:       break;
  1844  00DF  2AD0               	goto	l247
  1845  00E0                     l1920:
  1846                           
  1847                           ;dcf77_decoder.c: 157:       tmp_time.hours += 10u * value;
  1848  00E0  300A               	movlw	10
  1849  00E1  00CD               	movwf	??_new_bit
  1850  00E2  084D               	movf	??_new_bit,w
  1851  00E3  00C8               	movwf	___bmul@multiplicand
  1852  00E4  084C               	movf	new_bit@value,w
  1853  00E5  158A  24DB  118A   	fcall	___bmul
  1854  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1855  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1856  00EA  00CE               	movwf	??_new_bit+1
  1857  00EB  084E               	movf	??_new_bit+1,w
  1858  00EC  07AD               	addwf	_tmp_time+1,f
  1859  00ED                     l1922:
  1860                           
  1861                           ;dcf77_decoder.c: 158:       parity_hours += value;
  1862  00ED  084C               	movf	new_bit@value,w
  1863  00EE  00CD               	movwf	??_new_bit
  1864  00EF  084D               	movf	??_new_bit,w
  1865  00F0  07BB               	addwf	_parity_hours,f
  1866                           
  1867                           ;dcf77_decoder.c: 159:       break;
  1868  00F1  2AD0               	goto	l247
  1869  00F2                     l1924:
  1870                           
  1871                           ;dcf77_decoder.c: 161:       tmp_time.hours += 20u * value;
  1872  00F2  0E4C               	swapf	new_bit@value,w
  1873  00F3  39F0               	andlw	240
  1874  00F4  00CD               	movwf	??_new_bit
  1875  00F5  084C               	movf	new_bit@value,w
  1876  00F6  074C               	addwf	new_bit@value,w
  1877  00F7  07CD               	addwf	??_new_bit,f
  1878  00F8  07CD               	addwf	??_new_bit,f
  1879  00F9  084D               	movf	??_new_bit,w
  1880  00FA  00CE               	movwf	??_new_bit+1
  1881  00FB  084E               	movf	??_new_bit+1,w
  1882  00FC  07AD               	addwf	_tmp_time+1,f
  1883                           
  1884                           ;dcf77_decoder.c: 162:       parity_hours += value;
  1885  00FD  084C               	movf	new_bit@value,w
  1886  00FE  00CD               	movwf	??_new_bit
  1887  00FF  084D               	movf	??_new_bit,w
  1888  0100  07BB               	addwf	_parity_hours,f
  1889                           
  1890                           ;dcf77_decoder.c: 163:       break;
  1891  0101  2AD0               	goto	l247
  1892  0102                     l1926:
  1893                           
  1894                           ;dcf77_decoder.c: 165:       parity_hours += value;
  1895  0102  084C               	movf	new_bit@value,w
  1896  0103  00CD               	movwf	??_new_bit
  1897  0104  084D               	movf	??_new_bit,w
  1898  0105  07BB               	addwf	_parity_hours,f
  1899  0106                     l1928:
  1900                           
  1901                           ;dcf77_decoder.c: 166:       if(parity_hours % 2u)
  1902  0106  1C3B               	btfss	_parity_hours,0
  1903  0107  2909               	goto	u1361
  1904  0108  290A               	goto	u1360
  1905  0109                     u1361:
  1906  0109  2AD0               	goto	l247
  1907  010A                     u1360:
  1908  010A                     l1930:
  1909                           
  1910                           ;dcf77_decoder.c: 167:       {;dcf77_decoder.c: 168:         tmp_time.hours = (255);
  1911  010A  30FF               	movlw	255
  1912  010B  00CD               	movwf	??_new_bit
  1913  010C  084D               	movf	??_new_bit,w
  1914  010D  00AD               	movwf	_tmp_time+1
  1915  010E  2AD0               	goto	l247
  1916  010F                     l1932:
  1917                           
  1918                           ;dcf77_decoder.c: 172:       tmp_time.day = 1u * value;
  1919  010F  084C               	movf	new_bit@value,w
  1920  0110  00CD               	movwf	??_new_bit
  1921  0111  084D               	movf	??_new_bit,w
  1922  0112  00AF               	movwf	_tmp_time+3
  1923                           
  1924                           ;dcf77_decoder.c: 173:       parity_date = value;
  1925  0113  084C               	movf	new_bit@value,w
  1926  0114  00CD               	movwf	??_new_bit
  1927  0115  084D               	movf	??_new_bit,w
  1928  0116  00BA               	movwf	_parity_date
  1929                           
  1930                           ;dcf77_decoder.c: 174:       break;
  1931  0117  2AD0               	goto	l247
  1932  0118                     l1934:
  1933                           
  1934                           ;dcf77_decoder.c: 176:       tmp_time.day += 2u * value;
  1935  0118  084C               	movf	new_bit@value,w
  1936  0119  00CD               	movwf	??_new_bit
  1937  011A  074D               	addwf	??_new_bit,w
  1938  011B  00CE               	movwf	??_new_bit+1
  1939  011C  084E               	movf	??_new_bit+1,w
  1940  011D  07AF               	addwf	_tmp_time+3,f
  1941                           
  1942                           ;dcf77_decoder.c: 177:       parity_date += value;
  1943  011E  084C               	movf	new_bit@value,w
  1944  011F  00CD               	movwf	??_new_bit
  1945  0120  084D               	movf	??_new_bit,w
  1946  0121  07BA               	addwf	_parity_date,f
  1947                           
  1948                           ;dcf77_decoder.c: 178:       break;
  1949  0122  2AD0               	goto	l247
  1950  0123                     l1936:
  1951                           
  1952                           ;dcf77_decoder.c: 180:       tmp_time.day += 4u * value;
  1953  0123  084C               	movf	new_bit@value,w
  1954  0124  00CD               	movwf	??_new_bit
  1955  0125  3001               	movlw	1
  1956  0126                     u1375:
  1957  0126  1003               	clrc
  1958  0127  0DCD               	rlf	??_new_bit,f
  1959  0128  3EFF               	addlw	-1
  1960  0129  1D03               	skipz
  1961  012A  2926               	goto	u1375
  1962  012B  1003               	clrc
  1963  012C  0D4D               	rlf	??_new_bit,w
  1964  012D  00CE               	movwf	??_new_bit+1
  1965  012E  084E               	movf	??_new_bit+1,w
  1966  012F  07AF               	addwf	_tmp_time+3,f
  1967                           
  1968                           ;dcf77_decoder.c: 181:       parity_date += value;
  1969  0130  084C               	movf	new_bit@value,w
  1970  0131  00CD               	movwf	??_new_bit
  1971  0132  084D               	movf	??_new_bit,w
  1972  0133  07BA               	addwf	_parity_date,f
  1973                           
  1974                           ;dcf77_decoder.c: 182:       break;
  1975  0134  2AD0               	goto	l247
  1976  0135                     l1938:
  1977                           
  1978                           ;dcf77_decoder.c: 184:       tmp_time.day += 8u * value;
  1979  0135  084C               	movf	new_bit@value,w
  1980  0136  00CD               	movwf	??_new_bit
  1981  0137  3002               	movlw	2
  1982  0138                     u1385:
  1983  0138  1003               	clrc
  1984  0139  0DCD               	rlf	??_new_bit,f
  1985  013A  3EFF               	addlw	-1
  1986  013B  1D03               	skipz
  1987  013C  2938               	goto	u1385
  1988  013D  1003               	clrc
  1989  013E  0D4D               	rlf	??_new_bit,w
  1990  013F  00CE               	movwf	??_new_bit+1
  1991  0140  084E               	movf	??_new_bit+1,w
  1992  0141  07AF               	addwf	_tmp_time+3,f
  1993                           
  1994                           ;dcf77_decoder.c: 185:       parity_date += value;
  1995  0142  084C               	movf	new_bit@value,w
  1996  0143  00CD               	movwf	??_new_bit
  1997  0144  084D               	movf	??_new_bit,w
  1998  0145  07BA               	addwf	_parity_date,f
  1999                           
  2000                           ;dcf77_decoder.c: 186:       break;
  2001  0146  2AD0               	goto	l247
  2002  0147                     l1940:
  2003                           
  2004                           ;dcf77_decoder.c: 188:       tmp_time.day += 10u * value;
  2005  0147  300A               	movlw	10
  2006  0148  00CD               	movwf	??_new_bit
  2007  0149  084D               	movf	??_new_bit,w
  2008  014A  00C8               	movwf	___bmul@multiplicand
  2009  014B  084C               	movf	new_bit@value,w
  2010  014C  158A  24DB  118A   	fcall	___bmul
  2011  014F  1283               	bcf	3,5	;RP0=0, select bank0
  2012  0150  1303               	bcf	3,6	;RP1=0, select bank0
  2013  0151  00CE               	movwf	??_new_bit+1
  2014  0152  084E               	movf	??_new_bit+1,w
  2015  0153  07AF               	addwf	_tmp_time+3,f
  2016  0154                     l1942:
  2017                           
  2018                           ;dcf77_decoder.c: 189:       parity_date += value;
  2019  0154  084C               	movf	new_bit@value,w
  2020  0155  00CD               	movwf	??_new_bit
  2021  0156  084D               	movf	??_new_bit,w
  2022  0157  07BA               	addwf	_parity_date,f
  2023                           
  2024                           ;dcf77_decoder.c: 190:       break;
  2025  0158  2AD0               	goto	l247
  2026  0159                     l1944:
  2027                           
  2028                           ;dcf77_decoder.c: 192:       tmp_time.day += 20u * value;
  2029  0159  0E4C               	swapf	new_bit@value,w
  2030  015A  39F0               	andlw	240
  2031  015B  00CD               	movwf	??_new_bit
  2032  015C  084C               	movf	new_bit@value,w
  2033  015D  074C               	addwf	new_bit@value,w
  2034  015E  07CD               	addwf	??_new_bit,f
  2035  015F  07CD               	addwf	??_new_bit,f
  2036  0160  084D               	movf	??_new_bit,w
  2037  0161  00CE               	movwf	??_new_bit+1
  2038  0162  084E               	movf	??_new_bit+1,w
  2039  0163  07AF               	addwf	_tmp_time+3,f
  2040                           
  2041                           ;dcf77_decoder.c: 193:       parity_date += value;
  2042  0164  084C               	movf	new_bit@value,w
  2043  0165  00CD               	movwf	??_new_bit
  2044  0166  084D               	movf	??_new_bit,w
  2045  0167  07BA               	addwf	_parity_date,f
  2046                           
  2047                           ;dcf77_decoder.c: 194:       break;
  2048  0168  2AD0               	goto	l247
  2049  0169                     l1946:
  2050                           
  2051                           ;dcf77_decoder.c: 196:       tmp_time.day_of_week = 1u * value;
  2052  0169  084C               	movf	new_bit@value,w
  2053  016A  00CD               	movwf	??_new_bit
  2054  016B  084D               	movf	??_new_bit,w
  2055  016C  00AE               	movwf	_tmp_time+2
  2056  016D  2954               	goto	l1942
  2057  016E                     l1950:
  2058                           
  2059                           ;dcf77_decoder.c: 200:       tmp_time.day_of_week += 2u * value;
  2060  016E  084C               	movf	new_bit@value,w
  2061  016F  00CD               	movwf	??_new_bit
  2062  0170  074D               	addwf	??_new_bit,w
  2063  0171  00CE               	movwf	??_new_bit+1
  2064  0172  084E               	movf	??_new_bit+1,w
  2065  0173  07AE               	addwf	_tmp_time+2,f
  2066                           
  2067                           ;dcf77_decoder.c: 201:       parity_date += value;
  2068  0174  084C               	movf	new_bit@value,w
  2069  0175  00CD               	movwf	??_new_bit
  2070  0176  084D               	movf	??_new_bit,w
  2071  0177  07BA               	addwf	_parity_date,f
  2072                           
  2073                           ;dcf77_decoder.c: 202:       break;
  2074  0178  2AD0               	goto	l247
  2075  0179                     l1952:
  2076                           
  2077                           ;dcf77_decoder.c: 204:       tmp_time.day_of_week += 4u * value;
  2078  0179  084C               	movf	new_bit@value,w
  2079  017A  00CD               	movwf	??_new_bit
  2080  017B  3001               	movlw	1
  2081  017C                     u1395:
  2082  017C  1003               	clrc
  2083  017D  0DCD               	rlf	??_new_bit,f
  2084  017E  3EFF               	addlw	-1
  2085  017F  1D03               	skipz
  2086  0180  297C               	goto	u1395
  2087  0181  1003               	clrc
  2088  0182  0D4D               	rlf	??_new_bit,w
  2089  0183  00CE               	movwf	??_new_bit+1
  2090  0184  084E               	movf	??_new_bit+1,w
  2091  0185  07AE               	addwf	_tmp_time+2,f
  2092                           
  2093                           ;dcf77_decoder.c: 205:       parity_date += value;
  2094  0186  084C               	movf	new_bit@value,w
  2095  0187  00CD               	movwf	??_new_bit
  2096  0188  084D               	movf	??_new_bit,w
  2097  0189  07BA               	addwf	_parity_date,f
  2098                           
  2099                           ;dcf77_decoder.c: 206:       break;
  2100  018A  2AD0               	goto	l247
  2101  018B                     l1954:
  2102                           
  2103                           ;dcf77_decoder.c: 208:       tmp_time.month = 1u * value;
  2104  018B  084C               	movf	new_bit@value,w
  2105  018C  00CD               	movwf	??_new_bit
  2106  018D  084D               	movf	??_new_bit,w
  2107  018E  00B0               	movwf	_tmp_time+4
  2108  018F  2954               	goto	l1942
  2109  0190                     l1958:
  2110                           
  2111                           ;dcf77_decoder.c: 212:       tmp_time.month += 2u * value;
  2112  0190  084C               	movf	new_bit@value,w
  2113  0191  00CD               	movwf	??_new_bit
  2114  0192  074D               	addwf	??_new_bit,w
  2115  0193  00CE               	movwf	??_new_bit+1
  2116  0194  084E               	movf	??_new_bit+1,w
  2117  0195  07B0               	addwf	_tmp_time+4,f
  2118                           
  2119                           ;dcf77_decoder.c: 213:       parity_date += value;
  2120  0196  084C               	movf	new_bit@value,w
  2121  0197  00CD               	movwf	??_new_bit
  2122  0198  084D               	movf	??_new_bit,w
  2123  0199  07BA               	addwf	_parity_date,f
  2124                           
  2125                           ;dcf77_decoder.c: 214:       break;
  2126  019A  2AD0               	goto	l247
  2127  019B                     l1960:
  2128                           
  2129                           ;dcf77_decoder.c: 216:       tmp_time.month += 4u * value;
  2130  019B  084C               	movf	new_bit@value,w
  2131  019C  00CD               	movwf	??_new_bit
  2132  019D  3001               	movlw	1
  2133  019E                     u1405:
  2134  019E  1003               	clrc
  2135  019F  0DCD               	rlf	??_new_bit,f
  2136  01A0  3EFF               	addlw	-1
  2137  01A1  1D03               	skipz
  2138  01A2  299E               	goto	u1405
  2139  01A3  1003               	clrc
  2140  01A4  0D4D               	rlf	??_new_bit,w
  2141  01A5  00CE               	movwf	??_new_bit+1
  2142  01A6  084E               	movf	??_new_bit+1,w
  2143  01A7  07B0               	addwf	_tmp_time+4,f
  2144                           
  2145                           ;dcf77_decoder.c: 217:       parity_date += value;
  2146  01A8  084C               	movf	new_bit@value,w
  2147  01A9  00CD               	movwf	??_new_bit
  2148  01AA  084D               	movf	??_new_bit,w
  2149  01AB  07BA               	addwf	_parity_date,f
  2150                           
  2151                           ;dcf77_decoder.c: 218:       break;
  2152  01AC  2AD0               	goto	l247
  2153  01AD                     l1962:
  2154                           
  2155                           ;dcf77_decoder.c: 220:       tmp_time.month += 8u * value;
  2156  01AD  084C               	movf	new_bit@value,w
  2157  01AE  00CD               	movwf	??_new_bit
  2158  01AF  3002               	movlw	2
  2159  01B0                     u1415:
  2160  01B0  1003               	clrc
  2161  01B1  0DCD               	rlf	??_new_bit,f
  2162  01B2  3EFF               	addlw	-1
  2163  01B3  1D03               	skipz
  2164  01B4  29B0               	goto	u1415
  2165  01B5  1003               	clrc
  2166  01B6  0D4D               	rlf	??_new_bit,w
  2167  01B7  00CE               	movwf	??_new_bit+1
  2168  01B8  084E               	movf	??_new_bit+1,w
  2169  01B9  07B0               	addwf	_tmp_time+4,f
  2170                           
  2171                           ;dcf77_decoder.c: 221:       parity_date += value;
  2172  01BA  084C               	movf	new_bit@value,w
  2173  01BB  00CD               	movwf	??_new_bit
  2174  01BC  084D               	movf	??_new_bit,w
  2175  01BD  07BA               	addwf	_parity_date,f
  2176                           
  2177                           ;dcf77_decoder.c: 222:       break;
  2178  01BE  2AD0               	goto	l247
  2179  01BF                     l1964:
  2180                           
  2181                           ;dcf77_decoder.c: 224:       tmp_time.month += 10u * value;
  2182  01BF  300A               	movlw	10
  2183  01C0  00CD               	movwf	??_new_bit
  2184  01C1  084D               	movf	??_new_bit,w
  2185  01C2  00C8               	movwf	___bmul@multiplicand
  2186  01C3  084C               	movf	new_bit@value,w
  2187  01C4  158A  24DB  118A   	fcall	___bmul
  2188  01C7  1283               	bcf	3,5	;RP0=0, select bank0
  2189  01C8  1303               	bcf	3,6	;RP1=0, select bank0
  2190  01C9  00CE               	movwf	??_new_bit+1
  2191  01CA  084E               	movf	??_new_bit+1,w
  2192  01CB  07B0               	addwf	_tmp_time+4,f
  2193  01CC  2954               	goto	l1942
  2194  01CD                     l1968:
  2195                           
  2196                           ;dcf77_decoder.c: 228:       tmp_time.year = 1u * value;
  2197  01CD  084C               	movf	new_bit@value,w
  2198  01CE  00CD               	movwf	??_new_bit
  2199  01CF  084D               	movf	??_new_bit,w
  2200  01D0  00B1               	movwf	_tmp_time+5
  2201  01D1  2954               	goto	l1942
  2202  01D2                     l1972:
  2203                           
  2204                           ;dcf77_decoder.c: 232:       tmp_time.year += 2u * value;
  2205  01D2  084C               	movf	new_bit@value,w
  2206  01D3  00CD               	movwf	??_new_bit
  2207  01D4  074D               	addwf	??_new_bit,w
  2208  01D5  00CE               	movwf	??_new_bit+1
  2209  01D6  084E               	movf	??_new_bit+1,w
  2210  01D7  07B1               	addwf	_tmp_time+5,f
  2211                           
  2212                           ;dcf77_decoder.c: 233:       parity_date += value;
  2213  01D8  084C               	movf	new_bit@value,w
  2214  01D9  00CD               	movwf	??_new_bit
  2215  01DA  084D               	movf	??_new_bit,w
  2216  01DB  07BA               	addwf	_parity_date,f
  2217                           
  2218                           ;dcf77_decoder.c: 234:       break;
  2219  01DC  2AD0               	goto	l247
  2220  01DD                     l1974:
  2221                           
  2222                           ;dcf77_decoder.c: 236:       tmp_time.year += 4u * value;
  2223  01DD  084C               	movf	new_bit@value,w
  2224  01DE  00CD               	movwf	??_new_bit
  2225  01DF  3001               	movlw	1
  2226  01E0                     u1425:
  2227  01E0  1003               	clrc
  2228  01E1  0DCD               	rlf	??_new_bit,f
  2229  01E2  3EFF               	addlw	-1
  2230  01E3  1D03               	skipz
  2231  01E4  29E0               	goto	u1425
  2232  01E5  1003               	clrc
  2233  01E6  0D4D               	rlf	??_new_bit,w
  2234  01E7  00CE               	movwf	??_new_bit+1
  2235  01E8  084E               	movf	??_new_bit+1,w
  2236  01E9  07B1               	addwf	_tmp_time+5,f
  2237                           
  2238                           ;dcf77_decoder.c: 237:       parity_date += value;
  2239  01EA  084C               	movf	new_bit@value,w
  2240  01EB  00CD               	movwf	??_new_bit
  2241  01EC  084D               	movf	??_new_bit,w
  2242  01ED  07BA               	addwf	_parity_date,f
  2243                           
  2244                           ;dcf77_decoder.c: 238:       break;
  2245  01EE  2AD0               	goto	l247
  2246  01EF                     l1976:
  2247                           
  2248                           ;dcf77_decoder.c: 240:       tmp_time.year += 8u * value;
  2249  01EF  084C               	movf	new_bit@value,w
  2250  01F0  00CD               	movwf	??_new_bit
  2251  01F1  3002               	movlw	2
  2252  01F2                     u1435:
  2253  01F2  1003               	clrc
  2254  01F3  0DCD               	rlf	??_new_bit,f
  2255  01F4  3EFF               	addlw	-1
  2256  01F5  1D03               	skipz
  2257  01F6  29F2               	goto	u1435
  2258  01F7  1003               	clrc
  2259  01F8  0D4D               	rlf	??_new_bit,w
  2260  01F9  00CE               	movwf	??_new_bit+1
  2261  01FA  084E               	movf	??_new_bit+1,w
  2262  01FB  07B1               	addwf	_tmp_time+5,f
  2263                           
  2264                           ;dcf77_decoder.c: 241:       parity_date += value;
  2265  01FC  084C               	movf	new_bit@value,w
  2266  01FD  00CD               	movwf	??_new_bit
  2267  01FE  084D               	movf	??_new_bit,w
  2268  01FF  07BA               	addwf	_parity_date,f
  2269                           
  2270                           ;dcf77_decoder.c: 242:       break;
  2271  0200  2AD0               	goto	l247
  2272  0201                     l1978:
  2273                           
  2274                           ;dcf77_decoder.c: 244:       tmp_time.year += 10u * value;
  2275  0201  300A               	movlw	10
  2276  0202  00CD               	movwf	??_new_bit
  2277  0203  084D               	movf	??_new_bit,w
  2278  0204  00C8               	movwf	___bmul@multiplicand
  2279  0205  084C               	movf	new_bit@value,w
  2280  0206  158A  24DB  118A   	fcall	___bmul
  2281  0209  1283               	bcf	3,5	;RP0=0, select bank0
  2282  020A  1303               	bcf	3,6	;RP1=0, select bank0
  2283  020B  00CE               	movwf	??_new_bit+1
  2284  020C  084E               	movf	??_new_bit+1,w
  2285  020D  07B1               	addwf	_tmp_time+5,f
  2286  020E  2954               	goto	l1942
  2287  020F                     l1982:
  2288                           
  2289                           ;dcf77_decoder.c: 248:       tmp_time.year += 20u * value;
  2290  020F  0E4C               	swapf	new_bit@value,w
  2291  0210  39F0               	andlw	240
  2292  0211  00CD               	movwf	??_new_bit
  2293  0212  084C               	movf	new_bit@value,w
  2294  0213  074C               	addwf	new_bit@value,w
  2295  0214  07CD               	addwf	??_new_bit,f
  2296  0215  07CD               	addwf	??_new_bit,f
  2297  0216  084D               	movf	??_new_bit,w
  2298  0217  00CE               	movwf	??_new_bit+1
  2299  0218  084E               	movf	??_new_bit+1,w
  2300  0219  07B1               	addwf	_tmp_time+5,f
  2301                           
  2302                           ;dcf77_decoder.c: 249:       parity_date += value;
  2303  021A  084C               	movf	new_bit@value,w
  2304  021B  00CD               	movwf	??_new_bit
  2305  021C  084D               	movf	??_new_bit,w
  2306  021D  07BA               	addwf	_parity_date,f
  2307                           
  2308                           ;dcf77_decoder.c: 250:       break;
  2309  021E  2AD0               	goto	l247
  2310  021F                     l1984:
  2311                           
  2312                           ;dcf77_decoder.c: 252:       tmp_time.year += 40u * value;
  2313  021F  3028               	movlw	40
  2314  0220  00CD               	movwf	??_new_bit
  2315  0221  084D               	movf	??_new_bit,w
  2316  0222  00C8               	movwf	___bmul@multiplicand
  2317  0223  084C               	movf	new_bit@value,w
  2318  0224  158A  24DB  118A   	fcall	___bmul
  2319  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2320  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2321  0229  00CE               	movwf	??_new_bit+1
  2322  022A  084E               	movf	??_new_bit+1,w
  2323  022B  07B1               	addwf	_tmp_time+5,f
  2324  022C  2954               	goto	l1942
  2325  022D                     l1988:
  2326                           
  2327                           ;dcf77_decoder.c: 256:       tmp_time.year += 80u * value;
  2328  022D  3050               	movlw	80
  2329  022E  00CD               	movwf	??_new_bit
  2330  022F  084D               	movf	??_new_bit,w
  2331  0230  00C8               	movwf	___bmul@multiplicand
  2332  0231  084C               	movf	new_bit@value,w
  2333  0232  158A  24DB  118A   	fcall	___bmul
  2334  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2335  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2336  0237  00CE               	movwf	??_new_bit+1
  2337  0238  084E               	movf	??_new_bit+1,w
  2338  0239  07B1               	addwf	_tmp_time+5,f
  2339  023A  2954               	goto	l1942
  2340  023B                     l1992:
  2341                           
  2342                           ;dcf77_decoder.c: 260:       parity_date += value;
  2343  023B  084C               	movf	new_bit@value,w
  2344  023C  00CD               	movwf	??_new_bit
  2345  023D  084D               	movf	??_new_bit,w
  2346  023E  07BA               	addwf	_parity_date,f
  2347  023F                     l1994:
  2348                           
  2349                           ;dcf77_decoder.c: 261:       if(parity_date % 2u)
  2350  023F  1C3A               	btfss	_parity_date,0
  2351  0240  2A42               	goto	u1441
  2352  0241  2A43               	goto	u1440
  2353  0242                     u1441:
  2354  0242  2AD0               	goto	l247
  2355  0243                     u1440:
  2356  0243                     l1996:
  2357                           
  2358                           ;dcf77_decoder.c: 262:       {;dcf77_decoder.c: 263:         tmp_time.day = (255);
  2359  0243  30FF               	movlw	255
  2360  0244  00CD               	movwf	??_new_bit
  2361  0245  084D               	movf	??_new_bit,w
  2362  0246  00AF               	movwf	_tmp_time+3
  2363                           
  2364                           ;dcf77_decoder.c: 264:         tmp_time.month = (255);
  2365  0247  30FF               	movlw	255
  2366  0248  00CD               	movwf	??_new_bit
  2367  0249  084D               	movf	??_new_bit,w
  2368  024A  00B0               	movwf	_tmp_time+4
  2369                           
  2370                           ;dcf77_decoder.c: 265:         tmp_time.year = (255);
  2371  024B  30FF               	movlw	255
  2372  024C  00CD               	movwf	??_new_bit
  2373  024D  084D               	movf	??_new_bit,w
  2374  024E  00B1               	movwf	_tmp_time+5
  2375                           
  2376                           ;dcf77_decoder.c: 266:         tmp_time.day_of_week = (255);
  2377  024F  30FF               	movlw	255
  2378  0250  00CD               	movwf	??_new_bit
  2379  0251  084D               	movf	??_new_bit,w
  2380  0252  00AE               	movwf	_tmp_time+2
  2381  0253  2AD0               	goto	l247
  2382  0254                     l2000:
  2383  0254  084F               	movf	new_bit@bit_number,w
  2384  0255  00CD               	movwf	??_new_bit
  2385  0256  01CE               	clrf	??_new_bit+1
  2386                           
  2387                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2388                           ; Switch size 1, requested type "simple"
  2389                           ; Number of cases is 1, Range of values is 0 to 0
  2390                           ; switch strategies available:
  2391                           ; Name         Instructions Cycles
  2392                           ; simple_byte            4     3 (average)
  2393                           ; direct_byte            9     7 (fixed)
  2394                           ; jumptable            260     6 (fixed)
  2395                           ;	Chosen strategy is simple_byte
  2396  0257  084E               	movf	??_new_bit+1,w
  2397  0258  3A00               	xorlw	0	; case 0
  2398  0259  1903               	skipnz
  2399  025A  2A5C               	goto	l2346
  2400  025B  2AD0               	goto	l247
  2401  025C                     l2346:
  2402                           
  2403                           ; Switch size 1, requested type "simple"
  2404                           ; Number of cases is 38, Range of values is 21 to 58
  2405                           ; switch strategies available:
  2406                           ; Name         Instructions Cycles
  2407                           ; direct_byte           86    10 (fixed)
  2408                           ; simple_byte          115    58 (average)
  2409                           ; jumptable            263     9 (fixed)
  2410                           ;	Chosen strategy is simple_byte
  2411  025C  084D               	movf	??_new_bit,w
  2412  025D  3A15               	xorlw	21	; case 21
  2413  025E  1903               	skipnz
  2414  025F  2833               	goto	l1888
  2415  0260  3A03               	xorlw	3	; case 22
  2416  0261  1903               	skipnz
  2417  0262  283C               	goto	l1890
  2418  0263  3A01               	xorlw	1	; case 23
  2419  0264  1903               	skipnz
  2420  0265  2847               	goto	l1892
  2421  0266  3A0F               	xorlw	15	; case 24
  2422  0267  1903               	skipnz
  2423  0268  2859               	goto	l1894
  2424  0269  3A01               	xorlw	1	; case 25
  2425  026A  1903               	skipnz
  2426  026B  286B               	goto	l1896
  2427  026C  3A03               	xorlw	3	; case 26
  2428  026D  1903               	skipnz
  2429  026E  287D               	goto	l1900
  2430  026F  3A01               	xorlw	1	; case 27
  2431  0270  1903               	skipnz
  2432  0271  288D               	goto	l1902
  2433  0272  3A07               	xorlw	7	; case 28
  2434  0273  1903               	skipnz
  2435  0274  289B               	goto	l1906
  2436  0275  3A01               	xorlw	1	; case 29
  2437  0276  1903               	skipnz
  2438  0277  28A8               	goto	l1912
  2439  0278  3A03               	xorlw	3	; case 30
  2440  0279  1903               	skipnz
  2441  027A  28B1               	goto	l1914
  2442  027B  3A01               	xorlw	1	; case 31
  2443  027C  1903               	skipnz
  2444  027D  28BC               	goto	l1916
  2445  027E  3A3F               	xorlw	63	; case 32
  2446  027F  1903               	skipnz
  2447  0280  28CE               	goto	l1918
  2448  0281  3A01               	xorlw	1	; case 33
  2449  0282  1903               	skipnz
  2450  0283  28E0               	goto	l1920
  2451  0284  3A03               	xorlw	3	; case 34
  2452  0285  1903               	skipnz
  2453  0286  28F2               	goto	l1924
  2454  0287  3A01               	xorlw	1	; case 35
  2455  0288  1903               	skipnz
  2456  0289  2902               	goto	l1926
  2457  028A  3A07               	xorlw	7	; case 36
  2458  028B  1903               	skipnz
  2459  028C  290F               	goto	l1932
  2460  028D  3A01               	xorlw	1	; case 37
  2461  028E  1903               	skipnz
  2462  028F  2918               	goto	l1934
  2463  0290  3A03               	xorlw	3	; case 38
  2464  0291  1903               	skipnz
  2465  0292  2923               	goto	l1936
  2466  0293  3A01               	xorlw	1	; case 39
  2467  0294  1903               	skipnz
  2468  0295  2935               	goto	l1938
  2469  0296  3A0F               	xorlw	15	; case 40
  2470  0297  1903               	skipnz
  2471  0298  2947               	goto	l1940
  2472  0299  3A01               	xorlw	1	; case 41
  2473  029A  1903               	skipnz
  2474  029B  2959               	goto	l1944
  2475  029C  3A03               	xorlw	3	; case 42
  2476  029D  1903               	skipnz
  2477  029E  2969               	goto	l1946
  2478  029F  3A01               	xorlw	1	; case 43
  2479  02A0  1903               	skipnz
  2480  02A1  296E               	goto	l1950
  2481  02A2  3A07               	xorlw	7	; case 44
  2482  02A3  1903               	skipnz
  2483  02A4  2979               	goto	l1952
  2484  02A5  3A01               	xorlw	1	; case 45
  2485  02A6  1903               	skipnz
  2486  02A7  298B               	goto	l1954
  2487  02A8  3A03               	xorlw	3	; case 46
  2488  02A9  1903               	skipnz
  2489  02AA  2990               	goto	l1958
  2490  02AB  3A01               	xorlw	1	; case 47
  2491  02AC  1903               	skipnz
  2492  02AD  299B               	goto	l1960
  2493  02AE  3A1F               	xorlw	31	; case 48
  2494  02AF  1903               	skipnz
  2495  02B0  29AD               	goto	l1962
  2496  02B1  3A01               	xorlw	1	; case 49
  2497  02B2  1903               	skipnz
  2498  02B3  29BF               	goto	l1964
  2499  02B4  3A03               	xorlw	3	; case 50
  2500  02B5  1903               	skipnz
  2501  02B6  29CD               	goto	l1968
  2502  02B7  3A01               	xorlw	1	; case 51
  2503  02B8  1903               	skipnz
  2504  02B9  29D2               	goto	l1972
  2505  02BA  3A07               	xorlw	7	; case 52
  2506  02BB  1903               	skipnz
  2507  02BC  29DD               	goto	l1974
  2508  02BD  3A01               	xorlw	1	; case 53
  2509  02BE  1903               	skipnz
  2510  02BF  29EF               	goto	l1976
  2511  02C0  3A03               	xorlw	3	; case 54
  2512  02C1  1903               	skipnz
  2513  02C2  2A01               	goto	l1978
  2514  02C3  3A01               	xorlw	1	; case 55
  2515  02C4  1903               	skipnz
  2516  02C5  2A0F               	goto	l1982
  2517  02C6  3A0F               	xorlw	15	; case 56
  2518  02C7  1903               	skipnz
  2519  02C8  2A1F               	goto	l1984
  2520  02C9  3A01               	xorlw	1	; case 57
  2521  02CA  1903               	skipnz
  2522  02CB  2A2D               	goto	l1988
  2523  02CC  3A03               	xorlw	3	; case 58
  2524  02CD  1903               	skipnz
  2525  02CE  2A3B               	goto	l1992
  2526  02CF  2AD0               	goto	l247
  2527  02D0                     l247:
  2528  02D0  0008               	return
  2529  02D1                     __end_of_new_bit:
  2530                           
  2531                           	psect	text3
  2532  0E8E                     __ptext3:	
  2533 ;; *************** function _minute_gone *****************
  2534 ;; Defined at:
  2535 ;;		line 286 in file "dcf77_decoder.c"
  2536 ;; Parameters:    Size  Location     Type
  2537 ;;  bit_counter     1    wreg     unsigned char 
  2538 ;; Auto vars:     Size  Location     Type
  2539 ;;  bit_counter     1    6[BANK0 ] unsigned char 
  2540 ;;  threshold       1    5[BANK0 ] unsigned char 
  2541 ;; Return value:  Size  Location     Type
  2542 ;;                  1    wreg      void 
  2543 ;; Registers used:
  2544 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2545 ;; Tracked objects:
  2546 ;;		On entry : 0/0
  2547 ;;		On exit  : 0/0
  2548 ;;		Unchanged: 0/0
  2549 ;; Data sizes:     COMMON   BANK0   BANK1
  2550 ;;      Params:         0       0       0
  2551 ;;      Locals:         0       2       0
  2552 ;;      Temps:          0       1       0
  2553 ;;      Totals:         0       3       0
  2554 ;;Total ram usage:        3 bytes
  2555 ;; Hardware stack levels used: 2
  2556 ;; Hardware stack levels required when called: 1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_main
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           
  2564                           
  2565                           ;psect for function _minute_gone
  2566  0E8E                     _minute_gone:
  2567                           
  2568                           ;incstack = 0
  2569                           ; Regs used in _minute_gone: [wreg-fsr0h+status,2+status,0+pclath]
  2570                           ;minute_gone@bit_counter stored from wreg
  2571  0E8E  1283               	bcf	3,5	;RP0=0, select bank0
  2572  0E8F  1303               	bcf	3,6	;RP1=0, select bank0
  2573  0E90  00CA               	movwf	minute_gone@bit_counter
  2574  0E91                     l1722:
  2575                           
  2576                           ;dcf77_decoder.c: 286: void minute_gone(uint8_t bit_counter);dcf77_decoder.c: 287: {;dcf
      +                          77_decoder.c: 288:   if((tmp_time.minutes != (255)) && (bit_counter == 59u))
  2577  0E91  0A2C               	incf	_tmp_time,w
  2578  0E92  1903               	btfsc	3,2
  2579  0E93  2E95               	goto	u1121
  2580  0E94  2E96               	goto	u1120
  2581  0E95                     u1121:
  2582  0E95  2EA1               	goto	l1728
  2583  0E96                     u1120:
  2584  0E96                     l1724:
  2585  0E96  303B               	movlw	59
  2586  0E97  064A               	xorwf	minute_gone@bit_counter,w
  2587  0E98  1D03               	btfss	3,2
  2588  0E99  2E9B               	goto	u1131
  2589  0E9A  2E9C               	goto	u1130
  2590  0E9B                     u1131:
  2591  0E9B  2EA1               	goto	l1728
  2592  0E9C                     u1130:
  2593  0E9C                     l1726:
  2594                           
  2595                           ;dcf77_decoder.c: 289:   {;dcf77_decoder.c: 290:     last_one.minutes = tmp_time.minutes
      +                          ;
  2596  0E9C  082C               	movf	_tmp_time,w
  2597  0E9D  00C8               	movwf	??_minute_gone
  2598  0E9E  0848               	movf	??_minute_gone,w
  2599  0E9F  00DA               	movwf	_last_one
  2600                           
  2601                           ;dcf77_decoder.c: 291:   }
  2602  0EA0  2EB0               	goto	l1734
  2603  0EA1                     l1728:
  2604                           
  2605                           ;dcf77_decoder.c: 293:   {;dcf77_decoder.c: 294:     last_one.minutes++;
  2606  0EA1  3001               	movlw	1
  2607  0EA2  00C8               	movwf	??_minute_gone
  2608  0EA3  0848               	movf	??_minute_gone,w
  2609  0EA4  07DA               	addwf	_last_one,f
  2610                           
  2611                           ;dcf77_decoder.c: 295:     if(last_one.minutes == 60u)
  2612  0EA5  303C               	movlw	60
  2613  0EA6  065A               	xorwf	_last_one,w
  2614  0EA7  1D03               	btfss	3,2
  2615  0EA8  2EAA               	goto	u1141
  2616  0EA9  2EAB               	goto	u1140
  2617  0EAA                     u1141:
  2618  0EAA  2EB0               	goto	l1734
  2619  0EAB                     u1140:
  2620  0EAB                     l1730:
  2621                           
  2622                           ;dcf77_decoder.c: 296:     {;dcf77_decoder.c: 297:       last_one.minutes = 0u;
  2623  0EAB  01DA               	clrf	_last_one
  2624  0EAC                     l1732:
  2625                           
  2626                           ;dcf77_decoder.c: 298:       last_one.hours++;
  2627  0EAC  3001               	movlw	1
  2628  0EAD  00C8               	movwf	??_minute_gone
  2629  0EAE  0848               	movf	??_minute_gone,w
  2630  0EAF  07DB               	addwf	_last_one+1,f
  2631  0EB0                     l1734:
  2632                           
  2633                           ;dcf77_decoder.c: 302:   if((tmp_time.hours != (255)) && (bit_counter == 59u))
  2634  0EB0  0A2D               	incf	_tmp_time+1,w
  2635  0EB1  1903               	btfsc	3,2
  2636  0EB2  2EB4               	goto	u1151
  2637  0EB3  2EB5               	goto	u1150
  2638  0EB4                     u1151:
  2639  0EB4  2EC0               	goto	l1740
  2640  0EB5                     u1150:
  2641  0EB5                     l1736:
  2642  0EB5  303B               	movlw	59
  2643  0EB6  064A               	xorwf	minute_gone@bit_counter,w
  2644  0EB7  1D03               	btfss	3,2
  2645  0EB8  2EBA               	goto	u1161
  2646  0EB9  2EBB               	goto	u1160
  2647  0EBA                     u1161:
  2648  0EBA  2EC0               	goto	l1740
  2649  0EBB                     u1160:
  2650  0EBB                     l1738:
  2651                           
  2652                           ;dcf77_decoder.c: 303:   {;dcf77_decoder.c: 304:     last_one.hours = tmp_time.hours;
  2653  0EBB  082D               	movf	_tmp_time+1,w
  2654  0EBC  00C8               	movwf	??_minute_gone
  2655  0EBD  0848               	movf	??_minute_gone,w
  2656  0EBE  00DB               	movwf	_last_one+1
  2657                           
  2658                           ;dcf77_decoder.c: 305:   }
  2659  0EBF  2ECB               	goto	l1746
  2660  0EC0                     l1740:
  2661                           
  2662                           ;dcf77_decoder.c: 307:   {;dcf77_decoder.c: 308:     if(last_one.hours == 24u)
  2663  0EC0  3018               	movlw	24
  2664  0EC1  065B               	xorwf	_last_one+1,w
  2665  0EC2  1D03               	btfss	3,2
  2666  0EC3  2EC5               	goto	u1171
  2667  0EC4  2EC6               	goto	u1170
  2668  0EC5                     u1171:
  2669  0EC5  2ECB               	goto	l1746
  2670  0EC6                     u1170:
  2671  0EC6                     l1742:
  2672                           
  2673                           ;dcf77_decoder.c: 309:     {;dcf77_decoder.c: 310:       last_one.hours = 0u;
  2674  0EC6  01DB               	clrf	_last_one+1
  2675  0EC7                     l1744:
  2676                           
  2677                           ;dcf77_decoder.c: 311:       last_one.day++;
  2678  0EC7  3001               	movlw	1
  2679  0EC8  00C8               	movwf	??_minute_gone
  2680  0EC9  0848               	movf	??_minute_gone,w
  2681  0ECA  07DD               	addwf	_last_one+3,f
  2682  0ECB                     l1746:
  2683                           
  2684                           ;dcf77_decoder.c: 315:   if((tmp_time.day != (255)) && (bit_counter == 59u))
  2685  0ECB  0A2F               	incf	_tmp_time+3,w
  2686  0ECC  1903               	btfsc	3,2
  2687  0ECD  2ECF               	goto	u1181
  2688  0ECE  2ED0               	goto	u1180
  2689  0ECF                     u1181:
  2690  0ECF  2EDB               	goto	l1752
  2691  0ED0                     u1180:
  2692  0ED0                     l1748:
  2693  0ED0  303B               	movlw	59
  2694  0ED1  064A               	xorwf	minute_gone@bit_counter,w
  2695  0ED2  1D03               	btfss	3,2
  2696  0ED3  2ED5               	goto	u1191
  2697  0ED4  2ED6               	goto	u1190
  2698  0ED5                     u1191:
  2699  0ED5  2EDB               	goto	l1752
  2700  0ED6                     u1190:
  2701  0ED6                     l1750:
  2702                           
  2703                           ;dcf77_decoder.c: 316:   {;dcf77_decoder.c: 317:     last_one.day = tmp_time.day;
  2704  0ED6  082F               	movf	_tmp_time+3,w
  2705  0ED7  00C8               	movwf	??_minute_gone
  2706  0ED8  0848               	movf	??_minute_gone,w
  2707  0ED9  00DD               	movwf	_last_one+3
  2708                           
  2709                           ;dcf77_decoder.c: 318:   }
  2710  0EDA  2F05               	goto	l260
  2711  0EDB                     l1752:
  2712                           
  2713                           ;dcf77_decoder.c: 320:   {;dcf77_decoder.c: 321:     if(last_one.month > 0u)
  2714  0EDB  085E               	movf	_last_one+4,w
  2715  0EDC  1903               	btfsc	3,2
  2716  0EDD  2EDF               	goto	u1201
  2717  0EDE  2EE0               	goto	u1200
  2718  0EDF                     u1201:
  2719  0EDF  2F05               	goto	l260
  2720  0EE0                     u1200:
  2721  0EE0                     l1754:
  2722                           
  2723                           ;dcf77_decoder.c: 322:     {;dcf77_decoder.c: 323:       uint8_t threshold = max_days[la
      +                          st_one.month - 1u];
  2724  0EE0  085E               	movf	_last_one+4,w
  2725  0EE1  3E3F               	addlw	low (((_max_days-__stringbase)| (0+32768)+255))
  2726  0EE2  0084               	movwf	4
  2727  0EE3  158A  2000  158A   	fcall	stringdir
  2728  0EE6  00C8               	movwf	??_minute_gone
  2729  0EE7  0848               	movf	??_minute_gone,w
  2730  0EE8  00C9               	movwf	minute_gone@threshold
  2731  0EE9                     l1756:
  2732                           
  2733                           ;dcf77_decoder.c: 324:       if((last_one.month == 2u) && ((last_one.year % 4u) == 0u))
  2734  0EE9  3002               	movlw	2
  2735  0EEA  065E               	xorwf	_last_one+4,w
  2736  0EEB  1D03               	btfss	3,2
  2737  0EEC  2EEE               	goto	u1211
  2738  0EED  2EEF               	goto	u1210
  2739  0EEE                     u1211:
  2740  0EEE  2EF9               	goto	l1762
  2741  0EEF                     u1210:
  2742  0EEF                     l1758:
  2743  0EEF  085F               	movf	_last_one+5,w
  2744  0EF0  3903               	andlw	3
  2745  0EF1  1D03               	btfss	3,2
  2746  0EF2  2EF4               	goto	u1221
  2747  0EF3  2EF5               	goto	u1220
  2748  0EF4                     u1221:
  2749  0EF4  2EF9               	goto	l1762
  2750  0EF5                     u1220:
  2751  0EF5                     l1760:
  2752                           
  2753                           ;dcf77_decoder.c: 325:       {;dcf77_decoder.c: 326:         threshold++;
  2754  0EF5  3001               	movlw	1
  2755  0EF6  00C8               	movwf	??_minute_gone
  2756  0EF7  0848               	movf	??_minute_gone,w
  2757  0EF8  07C9               	addwf	minute_gone@threshold,f
  2758  0EF9                     l1762:
  2759                           
  2760                           ;dcf77_decoder.c: 328:       if(last_one.day == threshold)
  2761  0EF9  085D               	movf	_last_one+3,w
  2762  0EFA  0649               	xorwf	minute_gone@threshold,w
  2763  0EFB  1D03               	skipz
  2764  0EFC  2EFE               	goto	u1231
  2765  0EFD  2EFF               	goto	u1230
  2766  0EFE                     u1231:
  2767  0EFE  2F05               	goto	l260
  2768  0EFF                     u1230:
  2769  0EFF                     l1764:
  2770                           
  2771                           ;dcf77_decoder.c: 329:       {;dcf77_decoder.c: 330:         last_one.day = 1;
  2772  0EFF  01DD               	clrf	_last_one+3
  2773  0F00  0ADD               	incf	_last_one+3,f
  2774  0F01                     l1766:
  2775                           
  2776                           ;dcf77_decoder.c: 331:         last_one.month++;
  2777  0F01  3001               	movlw	1
  2778  0F02  00C8               	movwf	??_minute_gone
  2779  0F03  0848               	movf	??_minute_gone,w
  2780  0F04  07DE               	addwf	_last_one+4,f
  2781  0F05                     l260:	
  2782                           ;dcf77_decoder.c: 334:   }
  2783                           
  2784                           
  2785                           ;dcf77_decoder.c: 336:   if((tmp_time.month != (255)) && (bit_counter == 59u))
  2786  0F05  0A30               	incf	_tmp_time+4,w
  2787  0F06  1903               	btfsc	3,2
  2788  0F07  2F09               	goto	u1241
  2789  0F08  2F0A               	goto	u1240
  2790  0F09                     u1241:
  2791  0F09  2F15               	goto	l1772
  2792  0F0A                     u1240:
  2793  0F0A                     l1768:
  2794  0F0A  303B               	movlw	59
  2795  0F0B  064A               	xorwf	minute_gone@bit_counter,w
  2796  0F0C  1D03               	btfss	3,2
  2797  0F0D  2F0F               	goto	u1251
  2798  0F0E  2F10               	goto	u1250
  2799  0F0F                     u1251:
  2800  0F0F  2F15               	goto	l1772
  2801  0F10                     u1250:
  2802  0F10                     l1770:
  2803                           
  2804                           ;dcf77_decoder.c: 337:   {;dcf77_decoder.c: 338:     last_one.month = tmp_time.month;
  2805  0F10  0830               	movf	_tmp_time+4,w
  2806  0F11  00C8               	movwf	??_minute_gone
  2807  0F12  0848               	movf	??_minute_gone,w
  2808  0F13  00DE               	movwf	_last_one+4
  2809                           
  2810                           ;dcf77_decoder.c: 339:   }
  2811  0F14  2F21               	goto	l265
  2812  0F15                     l1772:
  2813                           
  2814                           ;dcf77_decoder.c: 341:   {;dcf77_decoder.c: 342:     if(last_one.month == 13u)
  2815  0F15  300D               	movlw	13
  2816  0F16  065E               	xorwf	_last_one+4,w
  2817  0F17  1D03               	btfss	3,2
  2818  0F18  2F1A               	goto	u1261
  2819  0F19  2F1B               	goto	u1260
  2820  0F1A                     u1261:
  2821  0F1A  2F21               	goto	l265
  2822  0F1B                     u1260:
  2823  0F1B                     l1774:
  2824                           
  2825                           ;dcf77_decoder.c: 343:     {;dcf77_decoder.c: 344:       last_one.month = 1u;
  2826  0F1B  01DE               	clrf	_last_one+4
  2827  0F1C  0ADE               	incf	_last_one+4,f
  2828  0F1D                     l1776:
  2829                           
  2830                           ;dcf77_decoder.c: 345:       last_one.year++;
  2831  0F1D  3001               	movlw	1
  2832  0F1E  00C8               	movwf	??_minute_gone
  2833  0F1F  0848               	movf	??_minute_gone,w
  2834  0F20  07DF               	addwf	_last_one+5,f
  2835  0F21                     l265:	
  2836                           ;dcf77_decoder.c: 347:   }
  2837                           
  2838                           
  2839                           ;dcf77_decoder.c: 349:   if((tmp_time.year != (255)) && (bit_counter == 59u))
  2840  0F21  0A31               	incf	_tmp_time+5,w
  2841  0F22  1903               	btfsc	3,2
  2842  0F23  2F25               	goto	u1271
  2843  0F24  2F26               	goto	u1270
  2844  0F25                     u1271:
  2845  0F25  2F30               	goto	l1782
  2846  0F26                     u1270:
  2847  0F26                     l1778:
  2848  0F26  303B               	movlw	59
  2849  0F27  064A               	xorwf	minute_gone@bit_counter,w
  2850  0F28  1D03               	btfss	3,2
  2851  0F29  2F2B               	goto	u1281
  2852  0F2A  2F2C               	goto	u1280
  2853  0F2B                     u1281:
  2854  0F2B  2F30               	goto	l1782
  2855  0F2C                     u1280:
  2856  0F2C                     l1780:
  2857                           
  2858                           ;dcf77_decoder.c: 350:   {;dcf77_decoder.c: 351:     last_one.year = tmp_time.year;
  2859  0F2C  0831               	movf	_tmp_time+5,w
  2860  0F2D  00C8               	movwf	??_minute_gone
  2861  0F2E  0848               	movf	??_minute_gone,w
  2862  0F2F  00DF               	movwf	_last_one+5
  2863  0F30                     l1782:
  2864                           
  2865                           ;dcf77_decoder.c: 354:   if((tmp_time.day_of_week != (255)) && (bit_counter == 59u))
  2866  0F30  0A2E               	incf	_tmp_time+2,w
  2867  0F31  1903               	btfsc	3,2
  2868  0F32  2F34               	goto	u1291
  2869  0F33  2F35               	goto	u1290
  2870  0F34                     u1291:
  2871  0F34  2F3F               	goto	l269
  2872  0F35                     u1290:
  2873  0F35                     l1784:
  2874  0F35  303B               	movlw	59
  2875  0F36  064A               	xorwf	minute_gone@bit_counter,w
  2876  0F37  1D03               	btfss	3,2
  2877  0F38  2F3A               	goto	u1301
  2878  0F39  2F3B               	goto	u1300
  2879  0F3A                     u1301:
  2880  0F3A  2F3F               	goto	l269
  2881  0F3B                     u1300:
  2882  0F3B                     l1786:
  2883                           
  2884                           ;dcf77_decoder.c: 355:   {;dcf77_decoder.c: 356:     last_one.day_of_week = tmp_time.day
      +                          _of_week;
  2885  0F3B  082E               	movf	_tmp_time+2,w
  2886  0F3C  00C8               	movwf	??_minute_gone
  2887  0F3D  0848               	movf	??_minute_gone,w
  2888  0F3E  00DC               	movwf	_last_one+2
  2889  0F3F                     l269:
  2890  0F3F  0008               	return
  2891  0F40                     __end_of_minute_gone:
  2892                           
  2893                           	psect	text4
  2894  02D1                     __ptext4:	
  2895 ;; *************** function _make_time *****************
  2896 ;; Defined at:
  2897 ;;		line 52 in file "print_date.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  buffer          1    wreg     PTR unsigned char 
  2900 ;;		 -> buffer(40), 
  2901 ;;  p_time          1   12[BANK0 ] PTR struct .
  2902 ;;		 -> current_time(6), 
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;  buffer          1   17[BANK0 ] PTR unsigned char 
  2905 ;;		 -> buffer(40), 
  2906 ;;  written_byte    1   18[BANK0 ] unsigned char 
  2907 ;; Return value:  Size  Location     Type
  2908 ;;                  1    wreg      unsigned char 
  2909 ;; Registers used:
  2910 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2911 ;; Tracked objects:
  2912 ;;		On entry : 0/0
  2913 ;;		On exit  : 0/0
  2914 ;;		Unchanged: 0/0
  2915 ;; Data sizes:     COMMON   BANK0   BANK1
  2916 ;;      Params:         0       1       0
  2917 ;;      Locals:         0       2       0
  2918 ;;      Temps:          0       4       0
  2919 ;;      Totals:         0       7       0
  2920 ;;Total ram usage:        7 bytes
  2921 ;; Hardware stack levels used: 1
  2922 ;; Hardware stack levels required when called: 3
  2923 ;; This function calls:
  2924 ;;		___bmul
  2925 ;;		___lwdiv
  2926 ;;		___lwmod
  2927 ;;		_strcpy
  2928 ;; This function is called by:
  2929 ;;		_main
  2930 ;; This function uses a non-reentrant model
  2931 ;;
  2932                           
  2933                           
  2934                           ;psect for function _make_time
  2935  02D1                     _make_time:
  2936                           
  2937                           ;incstack = 0
  2938                           ; Regs used in _make_time: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2939                           ;make_time@buffer stored from wreg
  2940  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  2941  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  2942  02D3  00D5               	movwf	make_time@buffer
  2943  02D4                     l1794:
  2944                           
  2945                           ;print_date.c: 52: uint8_t make_time(char buffer[], time *p_time);print_date.c: 53: {;pr
      +                          int_date.c: 54:   uint8_t written_bytes = 6;
  2946  02D4  3006               	movlw	6
  2947  02D5  00D1               	movwf	??_make_time
  2948  02D6  0851               	movf	??_make_time,w
  2949  02D7  00D6               	movwf	make_time@written_bytes
  2950  02D8                     l1796:
  2951                           
  2952                           ;print_date.c: 55:   (void)strcpy(buffer, "Time: ");
  2953  02D8  3082               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2954  02D9  00D1               	movwf	??_make_time
  2955  02DA  0851               	movf	??_make_time,w
  2956  02DB  00C8               	movwf	strcpy@from
  2957  02DC  0855               	movf	make_time@buffer,w
  2958  02DD  158A  250D  118A   	fcall	_strcpy
  2959  02E0                     l1798:
  2960                           
  2961                           ;print_date.c: 56:   buffer[written_bytes++] = week_day[p_time->day_of_week - 1u][0];
  2962  02E0  3003               	movlw	3
  2963  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2964  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2965  02E3  00D1               	movwf	??_make_time
  2966  02E4  0851               	movf	??_make_time,w
  2967  02E5  00C8               	movwf	___bmul@multiplicand
  2968  02E6  0850               	movf	make_time@p_time,w
  2969  02E7  3E02               	addlw	2
  2970  02E8  0084               	movwf	4
  2971  02E9  1383               	bcf	3,7	;select IRP bank0
  2972  02EA  0800               	movf	0,w
  2973  02EB  158A  24DB  118A   	fcall	___bmul
  2974  02EE  3E28               	addlw	low (((_week_day-__stringbase)| (0+32768)+253))
  2975  02EF  0084               	movwf	4
  2976  02F0  158A  2000  118A   	fcall	stringdir
  2977  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2978  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2979  02F5  00D2               	movwf	??_make_time+1
  2980  02F6  0855               	movf	make_time@buffer,w
  2981  02F7  3E06               	addlw	6
  2982  02F8  0084               	movwf	4
  2983  02F9  0852               	movf	??_make_time+1,w
  2984  02FA  1383               	bcf	3,7	;select IRP bank0
  2985  02FB  0080               	movwf	0
  2986  02FC                     l1800:
  2987  02FC  3001               	movlw	1
  2988  02FD  00D1               	movwf	??_make_time
  2989  02FE  0851               	movf	??_make_time,w
  2990  02FF  07D6               	addwf	make_time@written_bytes,f
  2991  0300                     l1802:
  2992                           
  2993                           ;print_date.c: 57:   buffer[written_bytes++] = week_day[p_time->day_of_week - 1u][1];
  2994  0300  3003               	movlw	3
  2995  0301  00D1               	movwf	??_make_time
  2996  0302  0851               	movf	??_make_time,w
  2997  0303  00C8               	movwf	___bmul@multiplicand
  2998  0304  0850               	movf	make_time@p_time,w
  2999  0305  3E02               	addlw	2
  3000  0306  0084               	movwf	4
  3001  0307  0800               	movf	0,w
  3002  0308  158A  24DB  118A   	fcall	___bmul
  3003  030B  3E29               	addlw	low (((_week_day-__stringbase)| (0+32768)+254))
  3004  030C  0084               	movwf	4
  3005  030D  158A  2000  118A   	fcall	stringdir
  3006  0310  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0311  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0312  00D2               	movwf	??_make_time+1
  3009  0313  0856               	movf	make_time@written_bytes,w
  3010  0314  0755               	addwf	make_time@buffer,w
  3011  0315  00D3               	movwf	??_make_time+2
  3012  0316  0853               	movf	??_make_time+2,w
  3013  0317  0084               	movwf	4
  3014  0318  0852               	movf	??_make_time+1,w
  3015  0319  1383               	bcf	3,7	;select IRP bank0
  3016  031A  0080               	movwf	0
  3017  031B                     l1804:
  3018  031B  3001               	movlw	1
  3019  031C  00D1               	movwf	??_make_time
  3020  031D  0851               	movf	??_make_time,w
  3021  031E  07D6               	addwf	make_time@written_bytes,f
  3022  031F                     l1806:
  3023                           
  3024                           ;print_date.c: 58:   buffer[written_bytes++] = week_day[p_time->day_of_week - 1u][2];
  3025  031F  3003               	movlw	3
  3026  0320  00D1               	movwf	??_make_time
  3027  0321  0851               	movf	??_make_time,w
  3028  0322  00C8               	movwf	___bmul@multiplicand
  3029  0323  0850               	movf	make_time@p_time,w
  3030  0324  3E02               	addlw	2
  3031  0325  0084               	movwf	4
  3032  0326  0800               	movf	0,w
  3033  0327  158A  24DB  118A   	fcall	___bmul
  3034  032A  3E2A               	addlw	low (((_week_day-__stringbase)| (0+32768)+255))
  3035  032B  0084               	movwf	4
  3036  032C  158A  2000  118A   	fcall	stringdir
  3037  032F  1283               	bcf	3,5	;RP0=0, select bank0
  3038  0330  1303               	bcf	3,6	;RP1=0, select bank0
  3039  0331  00D2               	movwf	??_make_time+1
  3040  0332  0856               	movf	make_time@written_bytes,w
  3041  0333  0755               	addwf	make_time@buffer,w
  3042  0334  00D3               	movwf	??_make_time+2
  3043  0335  0853               	movf	??_make_time+2,w
  3044  0336  0084               	movwf	4
  3045  0337  0852               	movf	??_make_time+1,w
  3046  0338  1383               	bcf	3,7	;select IRP bank0
  3047  0339  0080               	movwf	0
  3048  033A                     l1808:
  3049  033A  3001               	movlw	1
  3050  033B  00D1               	movwf	??_make_time
  3051  033C  0851               	movf	??_make_time,w
  3052  033D  07D6               	addwf	make_time@written_bytes,f
  3053  033E                     l1810:
  3054                           
  3055                           ;print_date.c: 59:   buffer[written_bytes++] = ' ';
  3056  033E  3020               	movlw	32
  3057  033F  00D1               	movwf	??_make_time
  3058  0340  0856               	movf	make_time@written_bytes,w
  3059  0341  0755               	addwf	make_time@buffer,w
  3060  0342  00D2               	movwf	??_make_time+1
  3061  0343  0852               	movf	??_make_time+1,w
  3062  0344  0084               	movwf	4
  3063  0345  0851               	movf	??_make_time,w
  3064  0346  0080               	movwf	0
  3065  0347                     l1812:
  3066  0347  3001               	movlw	1
  3067  0348  00D1               	movwf	??_make_time
  3068  0349  0851               	movf	??_make_time,w
  3069  034A  07D6               	addwf	make_time@written_bytes,f
  3070  034B                     l1814:
  3071                           
  3072                           ;print_date.c: 60:   buffer[written_bytes++] = (p_time->day / 10u) + '0';
  3073  034B  300A               	movlw	10
  3074  034C  00C8               	movwf	___lwdiv@divisor
  3075  034D  3000               	movlw	0
  3076  034E  00C9               	movwf	___lwdiv@divisor+1
  3077  034F  0850               	movf	make_time@p_time,w
  3078  0350  3E03               	addlw	3
  3079  0351  0084               	movwf	4
  3080  0352  0800               	movf	0,w
  3081  0353  00D1               	movwf	??_make_time
  3082  0354  01D2               	clrf	??_make_time+1
  3083  0355  0851               	movf	??_make_time,w
  3084  0356  00CA               	movwf	___lwdiv@dividend
  3085  0357  0852               	movf	??_make_time+1,w
  3086  0358  00CB               	movwf	___lwdiv@dividend+1
  3087  0359  158A  2597  118A   	fcall	___lwdiv
  3088  035C  1283               	bcf	3,5	;RP0=0, select bank0
  3089  035D  1303               	bcf	3,6	;RP1=0, select bank0
  3090  035E  0848               	movf	?___lwdiv,w
  3091  035F  3E30               	addlw	48
  3092  0360  00D3               	movwf	??_make_time+2
  3093  0361  0856               	movf	make_time@written_bytes,w
  3094  0362  0755               	addwf	make_time@buffer,w
  3095  0363  00D4               	movwf	??_make_time+3
  3096  0364  0854               	movf	??_make_time+3,w
  3097  0365  0084               	movwf	4
  3098  0366  0853               	movf	??_make_time+2,w
  3099  0367  1383               	bcf	3,7	;select IRP bank0
  3100  0368  0080               	movwf	0
  3101  0369                     l1816:
  3102  0369  3001               	movlw	1
  3103  036A  00D1               	movwf	??_make_time
  3104  036B  0851               	movf	??_make_time,w
  3105  036C  07D6               	addwf	make_time@written_bytes,f
  3106  036D                     l1818:
  3107                           
  3108                           ;print_date.c: 61:   buffer[written_bytes++] = (p_time->day % 10u) + '0';
  3109  036D  300A               	movlw	10
  3110  036E  00C8               	movwf	___lwmod@divisor
  3111  036F  3000               	movlw	0
  3112  0370  00C9               	movwf	___lwmod@divisor+1
  3113  0371  0850               	movf	make_time@p_time,w
  3114  0372  3E03               	addlw	3
  3115  0373  0084               	movwf	4
  3116  0374  0800               	movf	0,w
  3117  0375  00D1               	movwf	??_make_time
  3118  0376  01D2               	clrf	??_make_time+1
  3119  0377  0851               	movf	??_make_time,w
  3120  0378  00CA               	movwf	___lwmod@dividend
  3121  0379  0852               	movf	??_make_time+1,w
  3122  037A  00CB               	movwf	___lwmod@dividend+1
  3123  037B  158A  255B  118A   	fcall	___lwmod
  3124  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3125  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0380  0848               	movf	?___lwmod,w
  3127  0381  3E30               	addlw	48
  3128  0382  00D3               	movwf	??_make_time+2
  3129  0383  0856               	movf	make_time@written_bytes,w
  3130  0384  0755               	addwf	make_time@buffer,w
  3131  0385  00D4               	movwf	??_make_time+3
  3132  0386  0854               	movf	??_make_time+3,w
  3133  0387  0084               	movwf	4
  3134  0388  0853               	movf	??_make_time+2,w
  3135  0389  1383               	bcf	3,7	;select IRP bank0
  3136  038A  0080               	movwf	0
  3137  038B                     l1820:
  3138  038B  3001               	movlw	1
  3139  038C  00D1               	movwf	??_make_time
  3140  038D  0851               	movf	??_make_time,w
  3141  038E  07D6               	addwf	make_time@written_bytes,f
  3142  038F                     l1822:
  3143                           
  3144                           ;print_date.c: 62:   buffer[written_bytes++] = '.';
  3145  038F  302E               	movlw	46
  3146  0390  00D1               	movwf	??_make_time
  3147  0391  0856               	movf	make_time@written_bytes,w
  3148  0392  0755               	addwf	make_time@buffer,w
  3149  0393  00D2               	movwf	??_make_time+1
  3150  0394  0852               	movf	??_make_time+1,w
  3151  0395  0084               	movwf	4
  3152  0396  0851               	movf	??_make_time,w
  3153  0397  0080               	movwf	0
  3154  0398                     l1824:
  3155  0398  3001               	movlw	1
  3156  0399  00D1               	movwf	??_make_time
  3157  039A  0851               	movf	??_make_time,w
  3158  039B  07D6               	addwf	make_time@written_bytes,f
  3159  039C                     l1826:
  3160                           
  3161                           ;print_date.c: 63:   buffer[written_bytes++] = (p_time->month / 10u) + '0';
  3162  039C  300A               	movlw	10
  3163  039D  00C8               	movwf	___lwdiv@divisor
  3164  039E  3000               	movlw	0
  3165  039F  00C9               	movwf	___lwdiv@divisor+1
  3166  03A0  0850               	movf	make_time@p_time,w
  3167  03A1  3E04               	addlw	4
  3168  03A2  0084               	movwf	4
  3169  03A3  0800               	movf	0,w
  3170  03A4  00D1               	movwf	??_make_time
  3171  03A5  01D2               	clrf	??_make_time+1
  3172  03A6  0851               	movf	??_make_time,w
  3173  03A7  00CA               	movwf	___lwdiv@dividend
  3174  03A8  0852               	movf	??_make_time+1,w
  3175  03A9  00CB               	movwf	___lwdiv@dividend+1
  3176  03AA  158A  2597  118A   	fcall	___lwdiv
  3177  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  3178  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  3179  03AF  0848               	movf	?___lwdiv,w
  3180  03B0  3E30               	addlw	48
  3181  03B1  00D3               	movwf	??_make_time+2
  3182  03B2  0856               	movf	make_time@written_bytes,w
  3183  03B3  0755               	addwf	make_time@buffer,w
  3184  03B4  00D4               	movwf	??_make_time+3
  3185  03B5  0854               	movf	??_make_time+3,w
  3186  03B6  0084               	movwf	4
  3187  03B7  0853               	movf	??_make_time+2,w
  3188  03B8  1383               	bcf	3,7	;select IRP bank0
  3189  03B9  0080               	movwf	0
  3190  03BA                     l1828:
  3191  03BA  3001               	movlw	1
  3192  03BB  00D1               	movwf	??_make_time
  3193  03BC  0851               	movf	??_make_time,w
  3194  03BD  07D6               	addwf	make_time@written_bytes,f
  3195  03BE                     l1830:
  3196                           
  3197                           ;print_date.c: 64:   buffer[written_bytes++] = (p_time->month % 10u) + '0';
  3198  03BE  300A               	movlw	10
  3199  03BF  00C8               	movwf	___lwmod@divisor
  3200  03C0  3000               	movlw	0
  3201  03C1  00C9               	movwf	___lwmod@divisor+1
  3202  03C2  0850               	movf	make_time@p_time,w
  3203  03C3  3E04               	addlw	4
  3204  03C4  0084               	movwf	4
  3205  03C5  0800               	movf	0,w
  3206  03C6  00D1               	movwf	??_make_time
  3207  03C7  01D2               	clrf	??_make_time+1
  3208  03C8  0851               	movf	??_make_time,w
  3209  03C9  00CA               	movwf	___lwmod@dividend
  3210  03CA  0852               	movf	??_make_time+1,w
  3211  03CB  00CB               	movwf	___lwmod@dividend+1
  3212  03CC  158A  255B  118A   	fcall	___lwmod
  3213  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  3214  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  3215  03D1  0848               	movf	?___lwmod,w
  3216  03D2  3E30               	addlw	48
  3217  03D3  00D3               	movwf	??_make_time+2
  3218  03D4  0856               	movf	make_time@written_bytes,w
  3219  03D5  0755               	addwf	make_time@buffer,w
  3220  03D6  00D4               	movwf	??_make_time+3
  3221  03D7  0854               	movf	??_make_time+3,w
  3222  03D8  0084               	movwf	4
  3223  03D9  0853               	movf	??_make_time+2,w
  3224  03DA  1383               	bcf	3,7	;select IRP bank0
  3225  03DB  0080               	movwf	0
  3226  03DC                     l1832:
  3227  03DC  3001               	movlw	1
  3228  03DD  00D1               	movwf	??_make_time
  3229  03DE  0851               	movf	??_make_time,w
  3230  03DF  07D6               	addwf	make_time@written_bytes,f
  3231  03E0                     l1834:
  3232                           
  3233                           ;print_date.c: 65:   buffer[written_bytes++] = '.';
  3234  03E0  302E               	movlw	46
  3235  03E1  00D1               	movwf	??_make_time
  3236  03E2  0856               	movf	make_time@written_bytes,w
  3237  03E3  0755               	addwf	make_time@buffer,w
  3238  03E4  00D2               	movwf	??_make_time+1
  3239  03E5  0852               	movf	??_make_time+1,w
  3240  03E6  0084               	movwf	4
  3241  03E7  0851               	movf	??_make_time,w
  3242  03E8  0080               	movwf	0
  3243  03E9                     l1836:
  3244  03E9  3001               	movlw	1
  3245  03EA  00D1               	movwf	??_make_time
  3246  03EB  0851               	movf	??_make_time,w
  3247  03EC  07D6               	addwf	make_time@written_bytes,f
  3248  03ED                     l1838:
  3249                           
  3250                           ;print_date.c: 66:   buffer[written_bytes++] = '2';
  3251  03ED  3032               	movlw	50
  3252  03EE  00D1               	movwf	??_make_time
  3253  03EF  0856               	movf	make_time@written_bytes,w
  3254  03F0  0755               	addwf	make_time@buffer,w
  3255  03F1  00D2               	movwf	??_make_time+1
  3256  03F2  0852               	movf	??_make_time+1,w
  3257  03F3  0084               	movwf	4
  3258  03F4  0851               	movf	??_make_time,w
  3259  03F5  0080               	movwf	0
  3260  03F6                     l1840:
  3261  03F6  3001               	movlw	1
  3262  03F7  00D1               	movwf	??_make_time
  3263  03F8  0851               	movf	??_make_time,w
  3264  03F9  07D6               	addwf	make_time@written_bytes,f
  3265  03FA                     l1842:
  3266                           
  3267                           ;print_date.c: 67:   buffer[written_bytes++] = '0';
  3268  03FA  3030               	movlw	48
  3269  03FB  00D1               	movwf	??_make_time
  3270  03FC  0856               	movf	make_time@written_bytes,w
  3271  03FD  0755               	addwf	make_time@buffer,w
  3272  03FE  00D2               	movwf	??_make_time+1
  3273  03FF  0852               	movf	??_make_time+1,w
  3274  0400  0084               	movwf	4
  3275  0401  0851               	movf	??_make_time,w
  3276  0402  0080               	movwf	0
  3277  0403                     l1844:
  3278  0403  3001               	movlw	1
  3279  0404  00D1               	movwf	??_make_time
  3280  0405  0851               	movf	??_make_time,w
  3281  0406  07D6               	addwf	make_time@written_bytes,f
  3282  0407                     l1846:
  3283                           
  3284                           ;print_date.c: 68:   buffer[written_bytes++] = (p_time->year / 10u) + '0';
  3285  0407  300A               	movlw	10
  3286  0408  00C8               	movwf	___lwdiv@divisor
  3287  0409  3000               	movlw	0
  3288  040A  00C9               	movwf	___lwdiv@divisor+1
  3289  040B  0850               	movf	make_time@p_time,w
  3290  040C  3E05               	addlw	5
  3291  040D  0084               	movwf	4
  3292  040E  0800               	movf	0,w
  3293  040F  00D1               	movwf	??_make_time
  3294  0410  01D2               	clrf	??_make_time+1
  3295  0411  0851               	movf	??_make_time,w
  3296  0412  00CA               	movwf	___lwdiv@dividend
  3297  0413  0852               	movf	??_make_time+1,w
  3298  0414  00CB               	movwf	___lwdiv@dividend+1
  3299  0415  158A  2597  118A   	fcall	___lwdiv
  3300  0418  1283               	bcf	3,5	;RP0=0, select bank0
  3301  0419  1303               	bcf	3,6	;RP1=0, select bank0
  3302  041A  0848               	movf	?___lwdiv,w
  3303  041B  3E30               	addlw	48
  3304  041C  00D3               	movwf	??_make_time+2
  3305  041D  0856               	movf	make_time@written_bytes,w
  3306  041E  0755               	addwf	make_time@buffer,w
  3307  041F  00D4               	movwf	??_make_time+3
  3308  0420  0854               	movf	??_make_time+3,w
  3309  0421  0084               	movwf	4
  3310  0422  0853               	movf	??_make_time+2,w
  3311  0423  1383               	bcf	3,7	;select IRP bank0
  3312  0424  0080               	movwf	0
  3313  0425                     l1848:
  3314  0425  3001               	movlw	1
  3315  0426  00D1               	movwf	??_make_time
  3316  0427  0851               	movf	??_make_time,w
  3317  0428  07D6               	addwf	make_time@written_bytes,f
  3318  0429                     l1850:
  3319                           
  3320                           ;print_date.c: 69:   buffer[written_bytes++] = (p_time->year % 10u) + '0';
  3321  0429  300A               	movlw	10
  3322  042A  00C8               	movwf	___lwmod@divisor
  3323  042B  3000               	movlw	0
  3324  042C  00C9               	movwf	___lwmod@divisor+1
  3325  042D  0850               	movf	make_time@p_time,w
  3326  042E  3E05               	addlw	5
  3327  042F  0084               	movwf	4
  3328  0430  0800               	movf	0,w
  3329  0431  00D1               	movwf	??_make_time
  3330  0432  01D2               	clrf	??_make_time+1
  3331  0433  0851               	movf	??_make_time,w
  3332  0434  00CA               	movwf	___lwmod@dividend
  3333  0435  0852               	movf	??_make_time+1,w
  3334  0436  00CB               	movwf	___lwmod@dividend+1
  3335  0437  158A  255B  118A   	fcall	___lwmod
  3336  043A  1283               	bcf	3,5	;RP0=0, select bank0
  3337  043B  1303               	bcf	3,6	;RP1=0, select bank0
  3338  043C  0848               	movf	?___lwmod,w
  3339  043D  3E30               	addlw	48
  3340  043E  00D3               	movwf	??_make_time+2
  3341  043F  0856               	movf	make_time@written_bytes,w
  3342  0440  0755               	addwf	make_time@buffer,w
  3343  0441  00D4               	movwf	??_make_time+3
  3344  0442  0854               	movf	??_make_time+3,w
  3345  0443  0084               	movwf	4
  3346  0444  0853               	movf	??_make_time+2,w
  3347  0445  1383               	bcf	3,7	;select IRP bank0
  3348  0446  0080               	movwf	0
  3349  0447                     l1852:
  3350  0447  3001               	movlw	1
  3351  0448  00D1               	movwf	??_make_time
  3352  0449  0851               	movf	??_make_time,w
  3353  044A  07D6               	addwf	make_time@written_bytes,f
  3354  044B                     l1854:
  3355                           
  3356                           ;print_date.c: 70:   buffer[written_bytes++] = ' ';
  3357  044B  3020               	movlw	32
  3358  044C  00D1               	movwf	??_make_time
  3359  044D  0856               	movf	make_time@written_bytes,w
  3360  044E  0755               	addwf	make_time@buffer,w
  3361  044F  00D2               	movwf	??_make_time+1
  3362  0450  0852               	movf	??_make_time+1,w
  3363  0451  0084               	movwf	4
  3364  0452  0851               	movf	??_make_time,w
  3365  0453  0080               	movwf	0
  3366  0454                     l1856:
  3367  0454  3001               	movlw	1
  3368  0455  00D1               	movwf	??_make_time
  3369  0456  0851               	movf	??_make_time,w
  3370  0457  07D6               	addwf	make_time@written_bytes,f
  3371  0458                     l1858:
  3372                           
  3373                           ;print_date.c: 71:   buffer[written_bytes++] = (p_time->hours/ 10u) + '0';
  3374  0458  300A               	movlw	10
  3375  0459  00C8               	movwf	___lwdiv@divisor
  3376  045A  3000               	movlw	0
  3377  045B  00C9               	movwf	___lwdiv@divisor+1
  3378  045C  0A50               	incf	make_time@p_time,w
  3379  045D  0084               	movwf	4
  3380  045E  0800               	movf	0,w
  3381  045F  00D1               	movwf	??_make_time
  3382  0460  01D2               	clrf	??_make_time+1
  3383  0461  0851               	movf	??_make_time,w
  3384  0462  00CA               	movwf	___lwdiv@dividend
  3385  0463  0852               	movf	??_make_time+1,w
  3386  0464  00CB               	movwf	___lwdiv@dividend+1
  3387  0465  158A  2597  118A   	fcall	___lwdiv
  3388  0468  1283               	bcf	3,5	;RP0=0, select bank0
  3389  0469  1303               	bcf	3,6	;RP1=0, select bank0
  3390  046A  0848               	movf	?___lwdiv,w
  3391  046B  3E30               	addlw	48
  3392  046C  00D3               	movwf	??_make_time+2
  3393  046D  0856               	movf	make_time@written_bytes,w
  3394  046E  0755               	addwf	make_time@buffer,w
  3395  046F  00D4               	movwf	??_make_time+3
  3396  0470  0854               	movf	??_make_time+3,w
  3397  0471  0084               	movwf	4
  3398  0472  0853               	movf	??_make_time+2,w
  3399  0473  1383               	bcf	3,7	;select IRP bank0
  3400  0474  0080               	movwf	0
  3401  0475                     l1860:
  3402  0475  3001               	movlw	1
  3403  0476  00D1               	movwf	??_make_time
  3404  0477  0851               	movf	??_make_time,w
  3405  0478  07D6               	addwf	make_time@written_bytes,f
  3406  0479                     l1862:
  3407                           
  3408                           ;print_date.c: 72:   buffer[written_bytes++] = (p_time->hours % 10u) + '0';
  3409  0479  300A               	movlw	10
  3410  047A  00C8               	movwf	___lwmod@divisor
  3411  047B  3000               	movlw	0
  3412  047C  00C9               	movwf	___lwmod@divisor+1
  3413  047D  0A50               	incf	make_time@p_time,w
  3414  047E  0084               	movwf	4
  3415  047F  0800               	movf	0,w
  3416  0480  00D1               	movwf	??_make_time
  3417  0481  01D2               	clrf	??_make_time+1
  3418  0482  0851               	movf	??_make_time,w
  3419  0483  00CA               	movwf	___lwmod@dividend
  3420  0484  0852               	movf	??_make_time+1,w
  3421  0485  00CB               	movwf	___lwmod@dividend+1
  3422  0486  158A  255B  118A   	fcall	___lwmod
  3423  0489  1283               	bcf	3,5	;RP0=0, select bank0
  3424  048A  1303               	bcf	3,6	;RP1=0, select bank0
  3425  048B  0848               	movf	?___lwmod,w
  3426  048C  3E30               	addlw	48
  3427  048D  00D3               	movwf	??_make_time+2
  3428  048E  0856               	movf	make_time@written_bytes,w
  3429  048F  0755               	addwf	make_time@buffer,w
  3430  0490  00D4               	movwf	??_make_time+3
  3431  0491  0854               	movf	??_make_time+3,w
  3432  0492  0084               	movwf	4
  3433  0493  0853               	movf	??_make_time+2,w
  3434  0494  1383               	bcf	3,7	;select IRP bank0
  3435  0495  0080               	movwf	0
  3436  0496                     l1864:
  3437  0496  3001               	movlw	1
  3438  0497  00D1               	movwf	??_make_time
  3439  0498  0851               	movf	??_make_time,w
  3440  0499  07D6               	addwf	make_time@written_bytes,f
  3441  049A                     l1866:
  3442                           
  3443                           ;print_date.c: 73:   buffer[written_bytes++] = ':';
  3444  049A  303A               	movlw	58
  3445  049B  00D1               	movwf	??_make_time
  3446  049C  0856               	movf	make_time@written_bytes,w
  3447  049D  0755               	addwf	make_time@buffer,w
  3448  049E  00D2               	movwf	??_make_time+1
  3449  049F  0852               	movf	??_make_time+1,w
  3450  04A0  0084               	movwf	4
  3451  04A1  0851               	movf	??_make_time,w
  3452  04A2  0080               	movwf	0
  3453  04A3                     l1868:
  3454  04A3  3001               	movlw	1
  3455  04A4  00D1               	movwf	??_make_time
  3456  04A5  0851               	movf	??_make_time,w
  3457  04A6  07D6               	addwf	make_time@written_bytes,f
  3458  04A7                     l1870:
  3459                           
  3460                           ;print_date.c: 74:   buffer[written_bytes++] = (p_time->minutes / 10u) + '0';
  3461  04A7  300A               	movlw	10
  3462  04A8  00C8               	movwf	___lwdiv@divisor
  3463  04A9  3000               	movlw	0
  3464  04AA  00C9               	movwf	___lwdiv@divisor+1
  3465  04AB  0850               	movf	make_time@p_time,w
  3466  04AC  0084               	movwf	4
  3467  04AD  0800               	movf	0,w
  3468  04AE  00D1               	movwf	??_make_time
  3469  04AF  01D2               	clrf	??_make_time+1
  3470  04B0  0851               	movf	??_make_time,w
  3471  04B1  00CA               	movwf	___lwdiv@dividend
  3472  04B2  0852               	movf	??_make_time+1,w
  3473  04B3  00CB               	movwf	___lwdiv@dividend+1
  3474  04B4  158A  2597  118A   	fcall	___lwdiv
  3475  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3476  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3477  04B9  0848               	movf	?___lwdiv,w
  3478  04BA  3E30               	addlw	48
  3479  04BB  00D3               	movwf	??_make_time+2
  3480  04BC  0856               	movf	make_time@written_bytes,w
  3481  04BD  0755               	addwf	make_time@buffer,w
  3482  04BE  00D4               	movwf	??_make_time+3
  3483  04BF  0854               	movf	??_make_time+3,w
  3484  04C0  0084               	movwf	4
  3485  04C1  0853               	movf	??_make_time+2,w
  3486  04C2  1383               	bcf	3,7	;select IRP bank0
  3487  04C3  0080               	movwf	0
  3488  04C4                     l1872:
  3489  04C4  3001               	movlw	1
  3490  04C5  00D1               	movwf	??_make_time
  3491  04C6  0851               	movf	??_make_time,w
  3492  04C7  07D6               	addwf	make_time@written_bytes,f
  3493  04C8                     l1874:
  3494                           
  3495                           ;print_date.c: 75:   buffer[written_bytes++] = (p_time->minutes % 10u) + '0';
  3496  04C8  300A               	movlw	10
  3497  04C9  00C8               	movwf	___lwmod@divisor
  3498  04CA  3000               	movlw	0
  3499  04CB  00C9               	movwf	___lwmod@divisor+1
  3500  04CC  0850               	movf	make_time@p_time,w
  3501  04CD  0084               	movwf	4
  3502  04CE  0800               	movf	0,w
  3503  04CF  00D1               	movwf	??_make_time
  3504  04D0  01D2               	clrf	??_make_time+1
  3505  04D1  0851               	movf	??_make_time,w
  3506  04D2  00CA               	movwf	___lwmod@dividend
  3507  04D3  0852               	movf	??_make_time+1,w
  3508  04D4  00CB               	movwf	___lwmod@dividend+1
  3509  04D5  158A  255B  118A   	fcall	___lwmod
  3510  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3511  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3512  04DA  0848               	movf	?___lwmod,w
  3513  04DB  3E30               	addlw	48
  3514  04DC  00D3               	movwf	??_make_time+2
  3515  04DD  0856               	movf	make_time@written_bytes,w
  3516  04DE  0755               	addwf	make_time@buffer,w
  3517  04DF  00D4               	movwf	??_make_time+3
  3518  04E0  0854               	movf	??_make_time+3,w
  3519  04E1  0084               	movwf	4
  3520  04E2  0853               	movf	??_make_time+2,w
  3521  04E3  1383               	bcf	3,7	;select IRP bank0
  3522  04E4  0080               	movwf	0
  3523  04E5                     l1876:
  3524  04E5  3001               	movlw	1
  3525  04E6  00D1               	movwf	??_make_time
  3526  04E7  0851               	movf	??_make_time,w
  3527  04E8  07D6               	addwf	make_time@written_bytes,f
  3528  04E9                     l1878:
  3529                           
  3530                           ;print_date.c: 76:   buffer[written_bytes++] = '\n';
  3531  04E9  300A               	movlw	10
  3532  04EA  00D1               	movwf	??_make_time
  3533  04EB  0856               	movf	make_time@written_bytes,w
  3534  04EC  0755               	addwf	make_time@buffer,w
  3535  04ED  00D2               	movwf	??_make_time+1
  3536  04EE  0852               	movf	??_make_time+1,w
  3537  04EF  0084               	movwf	4
  3538  04F0  0851               	movf	??_make_time,w
  3539  04F1  0080               	movwf	0
  3540  04F2                     l1880:
  3541  04F2  3001               	movlw	1
  3542  04F3  00D1               	movwf	??_make_time
  3543  04F4  0851               	movf	??_make_time,w
  3544  04F5  07D6               	addwf	make_time@written_bytes,f
  3545  04F6                     l1882:
  3546                           
  3547                           ;print_date.c: 77:   return written_bytes;
  3548  04F6  0856               	movf	make_time@written_bytes,w
  3549  04F7                     l188:
  3550  04F7  0008               	return
  3551  04F8                     __end_of_make_time:
  3552                           
  3553                           	psect	text5
  3554  0D0D                     __ptext5:	
  3555 ;; *************** function _strcpy *****************
  3556 ;; Defined at:
  3557 ;;		line 8 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\strcpy.c"
  3558 ;; Parameters:    Size  Location     Type
  3559 ;;  to              1    wreg     PTR unsigned char 
  3560 ;;		 -> buffer(40), 
  3561 ;;  from            1    4[BANK0 ] PTR const unsigned char 
  3562 ;;		 -> STR_2(7), STR_1(34), 
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;  to              1    7[BANK0 ] PTR unsigned char 
  3565 ;;		 -> buffer(40), 
  3566 ;;  cp              1    6[BANK0 ] PTR unsigned char 
  3567 ;;		 -> buffer(40), 
  3568 ;; Return value:  Size  Location     Type
  3569 ;;                  1    wreg      PTR unsigned char 
  3570 ;; Registers used:
  3571 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  3572 ;; Tracked objects:
  3573 ;;		On entry : 0/0
  3574 ;;		On exit  : 0/0
  3575 ;;		Unchanged: 0/0
  3576 ;; Data sizes:     COMMON   BANK0   BANK1
  3577 ;;      Params:         0       1       0
  3578 ;;      Locals:         0       2       0
  3579 ;;      Temps:          0       1       0
  3580 ;;      Totals:         0       4       0
  3581 ;;Total ram usage:        4 bytes
  3582 ;; Hardware stack levels used: 2
  3583 ;; Hardware stack levels required when called: 1
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_main
  3588 ;;		_make_time
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _strcpy
  3594  0D0D                     _strcpy:
  3595                           
  3596                           ;incstack = 0
  3597                           ; Regs used in _strcpy: [wreg-fsr0h+status,2+status,0+pclath]
  3598                           ;strcpy@to stored from wreg
  3599  0D0D  1283               	bcf	3,5	;RP0=0, select bank0
  3600  0D0E  1303               	bcf	3,6	;RP1=0, select bank0
  3601  0D0F  00CB               	movwf	strcpy@to
  3602  0D10                     l1604:
  3603  0D10  084B               	movf	strcpy@to,w
  3604  0D11  00C9               	movwf	??_strcpy
  3605  0D12  0849               	movf	??_strcpy,w
  3606  0D13  00CA               	movwf	strcpy@cp
  3607  0D14  2D1D               	goto	l1608
  3608  0D15                     l1606:
  3609  0D15  3001               	movlw	1
  3610  0D16  00C9               	movwf	??_strcpy
  3611  0D17  0849               	movf	??_strcpy,w
  3612  0D18  07CA               	addwf	strcpy@cp,f
  3613  0D19  3001               	movlw	1
  3614  0D1A  00C9               	movwf	??_strcpy
  3615  0D1B  0849               	movf	??_strcpy,w
  3616  0D1C  07C8               	addwf	strcpy@from,f
  3617  0D1D                     l1608:
  3618  0D1D  0848               	movf	strcpy@from,w
  3619  0D1E  0084               	movwf	4
  3620  0D1F  158A  2000  158A   	fcall	stringdir
  3621  0D22  00C9               	movwf	??_strcpy
  3622  0D23  084A               	movf	strcpy@cp,w
  3623  0D24  0084               	movwf	4
  3624  0D25  0849               	movf	??_strcpy,w
  3625  0D26  1383               	bcf	3,7	;select IRP bank0
  3626  0D27  0080               	movwf	0
  3627  0D28  0800               	movf	0,w
  3628  0D29  1D03               	btfss	3,2
  3629  0D2A  2D2C               	goto	u951
  3630  0D2B  2D2D               	goto	u950
  3631  0D2C                     u951:
  3632  0D2C  2D15               	goto	l1606
  3633  0D2D                     u950:
  3634  0D2D                     l798:
  3635  0D2D  0008               	return
  3636  0D2E                     __end_of_strcpy:
  3637                           
  3638                           	psect	text6
  3639  07EA                     __ptext6:	
  3640 ;; *************** function _init *****************
  3641 ;; Defined at:
  3642 ;;		line 32 in file "bsp.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;		None
  3645 ;; Auto vars:     Size  Location     Type
  3646 ;;		None
  3647 ;; Return value:  Size  Location     Type
  3648 ;;                  1    wreg      void 
  3649 ;; Registers used:
  3650 ;;		wreg, status,2, status,0, pclath, cstack
  3651 ;; Tracked objects:
  3652 ;;		On entry : 0/0
  3653 ;;		On exit  : 0/0
  3654 ;;		Unchanged: 0/0
  3655 ;; Data sizes:     COMMON   BANK0   BANK1
  3656 ;;      Params:         0       0       0
  3657 ;;      Locals:         0       0       0
  3658 ;;      Temps:          0       0       0
  3659 ;;      Totals:         0       0       0
  3660 ;;Total ram usage:        0 bytes
  3661 ;; Hardware stack levels used: 1
  3662 ;; Hardware stack levels required when called: 2
  3663 ;; This function calls:
  3664 ;;		_gpio_init
  3665 ;;		_init_timer_1
  3666 ;;		_spi_init
  3667 ;;		_uart_init
  3668 ;; This function is called by:
  3669 ;;		_main
  3670 ;; This function uses a non-reentrant model
  3671 ;;
  3672                           
  3673                           
  3674                           ;psect for function _init
  3675  07EA                     _init:
  3676  07EA                     l1698:	
  3677                           ;incstack = 0
  3678                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  3679                           
  3680                           
  3681                           ;bsp.c: 34:   gpio_init();
  3682  07EA  158A  24BB  118A   	fcall	_gpio_init
  3683                           
  3684                           ;bsp.c: 35:   uart_init();
  3685  07ED  158A  24A4  118A   	fcall	_uart_init
  3686                           
  3687                           ;bsp.c: 36:   spi_init();
  3688  07F0  158A  2499  118A   	fcall	_spi_init
  3689                           
  3690                           ;bsp.c: 37:   init_timer_1();
  3691  07F3  158A  248F  118A   	fcall	_init_timer_1
  3692  07F6                     l1700:
  3693                           
  3694                           ;bsp.c: 39:   INTE = 1;
  3695  07F6  160B               	bsf	11,4	;volatile
  3696  07F7                     l1702:
  3697                           
  3698                           ;bsp.c: 40:   INTEDG = 0;
  3699  07F7  1683               	bsf	3,5	;RP0=1, select bank1
  3700  07F8  1303               	bcf	3,6	;RP1=0, select bank1
  3701  07F9  1301               	bcf	1,6	;volatile
  3702  07FA                     l1704:
  3703                           
  3704                           ;bsp.c: 41:   RCIE = 1;
  3705  07FA  168C               	bsf	12,5	;volatile
  3706  07FB                     l1706:
  3707                           
  3708                           ;bsp.c: 42:   TMR1IE = 1;
  3709  07FB  140C               	bsf	12,0	;volatile
  3710  07FC                     l1708:
  3711                           
  3712                           ;bsp.c: 43:   PEIE = 1;
  3713  07FC  170B               	bsf	11,6	;volatile
  3714  07FD                     l1710:
  3715                           
  3716                           ;bsp.c: 44:   (INTCONbits.GIE = 1);
  3717  07FD  178B               	bsf	11,7	;volatile
  3718  07FE                     l328:
  3719  07FE  0008               	return
  3720  07FF                     __end_of_init:
  3721                           
  3722                           	psect	text7
  3723  0CA4                     __ptext7:	
  3724 ;; *************** function _uart_init *****************
  3725 ;; Defined at:
  3726 ;;		line 69 in file "bsp.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;		None
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMMON   BANK0   BANK1
  3740 ;;      Params:         0       0       0
  3741 ;;      Locals:         0       0       0
  3742 ;;      Temps:          0       0       0
  3743 ;;      Totals:         0       0       0
  3744 ;;Total ram usage:        0 bytes
  3745 ;; Hardware stack levels used: 1
  3746 ;; Hardware stack levels required when called: 1
  3747 ;; This function calls:
  3748 ;;		Nothing
  3749 ;; This function is called by:
  3750 ;;		_init
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           
  3755                           ;psect for function _uart_init
  3756  0CA4                     _uart_init:
  3757  0CA4                     l1624:	
  3758                           ;incstack = 0
  3759                           ; Regs used in _uart_init: [wreg]
  3760                           
  3761                           
  3762                           ;bsp.c: 71:   SPBRG = 64;
  3763  0CA4  3040               	movlw	64
  3764  0CA5  1683               	bsf	3,5	;RP0=1, select bank1
  3765  0CA6  1303               	bcf	3,6	;RP1=0, select bank1
  3766  0CA7  0099               	movwf	25	;volatile
  3767                           
  3768                           ;bsp.c: 72:   TXSTA = 36;
  3769  0CA8  3024               	movlw	36
  3770  0CA9  0098               	movwf	24	;volatile
  3771                           
  3772                           ;bsp.c: 73:   RCSTA = 128;
  3773  0CAA  3080               	movlw	128
  3774  0CAB  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0CAC  1303               	bcf	3,6	;RP1=0, select bank0
  3776  0CAD  0098               	movwf	24	;volatile
  3777  0CAE                     l337:
  3778  0CAE  0008               	return
  3779  0CAF                     __end_of_uart_init:
  3780                           
  3781                           	psect	text8
  3782  0C99                     __ptext8:	
  3783 ;; *************** function _spi_init *****************
  3784 ;; Defined at:
  3785 ;;		line 76 in file "bsp.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  1    wreg      void 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMMON   BANK0   BANK1
  3799 ;;      Params:         0       0       0
  3800 ;;      Locals:         0       0       0
  3801 ;;      Temps:          0       0       0
  3802 ;;      Totals:         0       0       0
  3803 ;;Total ram usage:        0 bytes
  3804 ;; Hardware stack levels used: 1
  3805 ;; Hardware stack levels required when called: 1
  3806 ;; This function calls:
  3807 ;;		Nothing
  3808 ;; This function is called by:
  3809 ;;		_init
  3810 ;; This function uses a non-reentrant model
  3811 ;;
  3812                           
  3813                           
  3814                           ;psect for function _spi_init
  3815  0C99                     _spi_init:
  3816  0C99                     l1626:	
  3817                           ;incstack = 0
  3818                           ; Regs used in _spi_init: [wreg+status,2]
  3819                           
  3820                           
  3821                           ;bsp.c: 78:   SSPSTAT = 0b01000000;
  3822  0C99  3040               	movlw	64
  3823  0C9A  1683               	bsf	3,5	;RP0=1, select bank1
  3824  0C9B  1303               	bcf	3,6	;RP1=0, select bank1
  3825  0C9C  0094               	movwf	20	;volatile
  3826                           
  3827                           ;bsp.c: 79:   SSPCON = 0b00100010;
  3828  0C9D  3022               	movlw	34
  3829  0C9E  1283               	bcf	3,5	;RP0=0, select bank0
  3830  0C9F  1303               	bcf	3,6	;RP1=0, select bank0
  3831  0CA0  0094               	movwf	20	;volatile
  3832  0CA1                     l1628:
  3833                           
  3834                           ;bsp.c: 80:   SSPIF = 0;
  3835  0CA1  118C               	bcf	12,3	;volatile
  3836  0CA2                     l1630:
  3837                           
  3838                           ;bsp.c: 81:   SSPBUF = 0;
  3839  0CA2  0193               	clrf	19	;volatile
  3840  0CA3                     l340:
  3841  0CA3  0008               	return
  3842  0CA4                     __end_of_spi_init:
  3843                           
  3844                           	psect	text9
  3845  0C8F                     __ptext9:	
  3846 ;; *************** function _init_timer_1 *****************
  3847 ;; Defined at:
  3848 ;;		line 49 in file "bsp.c"
  3849 ;; Parameters:    Size  Location     Type
  3850 ;;		None
  3851 ;; Auto vars:     Size  Location     Type
  3852 ;;		None
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      void 
  3855 ;; Registers used:
  3856 ;;		wreg
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1
  3862 ;;      Params:         0       0       0
  3863 ;;      Locals:         0       0       0
  3864 ;;      Temps:          0       0       0
  3865 ;;      Totals:         0       0       0
  3866 ;;Total ram usage:        0 bytes
  3867 ;; Hardware stack levels used: 1
  3868 ;; Hardware stack levels required when called: 1
  3869 ;; This function calls:
  3870 ;;		Nothing
  3871 ;; This function is called by:
  3872 ;;		_init
  3873 ;; This function uses a non-reentrant model
  3874 ;;
  3875                           
  3876                           
  3877                           ;psect for function _init_timer_1
  3878  0C8F                     _init_timer_1:
  3879  0C8F                     l1632:	
  3880                           ;incstack = 0
  3881                           ; Regs used in _init_timer_1: [wreg]
  3882                           
  3883                           
  3884                           ;bsp.c: 51:   T1CON = 0x01;
  3885  0C8F  3001               	movlw	1
  3886  0C90  1283               	bcf	3,5	;RP0=0, select bank0
  3887  0C91  1303               	bcf	3,6	;RP1=0, select bank0
  3888  0C92  0090               	movwf	16	;volatile
  3889  0C93                     l1634:
  3890                           
  3891                           ;bsp.c: 52:   TMR1IF = 0;
  3892  0C93  100C               	bcf	12,0	;volatile
  3893                           
  3894                           ;bsp.c: 53:   TMR1H = 0xF6;
  3895  0C94  30F6               	movlw	246
  3896  0C95  008F               	movwf	15	;volatile
  3897                           
  3898                           ;bsp.c: 54:   TMR1L = 0x3C;
  3899  0C96  303C               	movlw	60
  3900  0C97  008E               	movwf	14	;volatile
  3901  0C98                     l331:
  3902  0C98  0008               	return
  3903  0C99                     __end_of_init_timer_1:
  3904                           
  3905                           	psect	text10
  3906  0CBB                     __ptext10:	
  3907 ;; *************** function _gpio_init *****************
  3908 ;; Defined at:
  3909 ;;		line 57 in file "bsp.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;                  1    wreg      void 
  3916 ;; Registers used:
  3917 ;;		wreg, status,2
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1
  3923 ;;      Params:         0       0       0
  3924 ;;      Locals:         0       0       0
  3925 ;;      Temps:          0       0       0
  3926 ;;      Totals:         0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used: 1
  3929 ;; Hardware stack levels required when called: 1
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_init
  3934 ;; This function uses a non-reentrant model
  3935 ;;
  3936                           
  3937                           
  3938                           ;psect for function _gpio_init
  3939  0CBB                     _gpio_init:
  3940  0CBB                     l1610:	
  3941                           ;incstack = 0
  3942                           ; Regs used in _gpio_init: [wreg+status,2]
  3943                           
  3944                           
  3945                           ;bsp.c: 59:   ADCON1 = 6;
  3946  0CBB  3006               	movlw	6
  3947  0CBC  1683               	bsf	3,5	;RP0=1, select bank1
  3948  0CBD  1303               	bcf	3,6	;RP1=0, select bank1
  3949  0CBE  009F               	movwf	31	;volatile
  3950  0CBF                     l1612:
  3951                           
  3952                           ;bsp.c: 60:   TRISA = 0;
  3953  0CBF  0185               	clrf	5	;volatile
  3954  0CC0                     l1614:
  3955                           
  3956                           ;bsp.c: 61:   TRISB = 0b11000001;
  3957  0CC0  30C1               	movlw	193
  3958  0CC1  0086               	movwf	6	;volatile
  3959  0CC2                     l1616:
  3960                           
  3961                           ;bsp.c: 62:   TRISC = 0b10000000;
  3962  0CC2  3080               	movlw	128
  3963  0CC3  0087               	movwf	7	;volatile
  3964  0CC4                     l1618:
  3965                           
  3966                           ;bsp.c: 64:   PORTA = 0;
  3967  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  3968  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  3969  0CC6  0185               	clrf	5	;volatile
  3970  0CC7                     l1620:
  3971                           
  3972                           ;bsp.c: 65:   PORTB = 0;
  3973  0CC7  0186               	clrf	6	;volatile
  3974  0CC8                     l1622:
  3975                           
  3976                           ;bsp.c: 66:   PORTC = 0;
  3977  0CC8  0187               	clrf	7	;volatile
  3978  0CC9                     l334:
  3979  0CC9  0008               	return
  3980  0CCA                     __end_of_gpio_init:
  3981                           
  3982                           	psect	text11
  3983  079E                     __ptext11:	
  3984 ;; *************** function _get_time_data_seconds *****************
  3985 ;; Defined at:
  3986 ;;		line 209 in file "segment_display.c"
  3987 ;; Parameters:    Size  Location     Type
  3988 ;;  seconds         1    wreg     unsigned char 
  3989 ;;  time_segment    1   12[BANK0 ] unsigned char 
  3990 ;; Auto vars:     Size  Location     Type
  3991 ;;  seconds         1   17[BANK0 ] unsigned char 
  3992 ;;  data            1   16[BANK0 ] unsigned char 
  3993 ;; Return value:  Size  Location     Type
  3994 ;;                  1    wreg      unsigned char 
  3995 ;; Registers used:
  3996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  3997 ;; Tracked objects:
  3998 ;;		On entry : 0/0
  3999 ;;		On exit  : 0/0
  4000 ;;		Unchanged: 0/0
  4001 ;; Data sizes:     COMMON   BANK0   BANK1
  4002 ;;      Params:         0       1       0
  4003 ;;      Locals:         0       2       0
  4004 ;;      Temps:          0       3       0
  4005 ;;      Totals:         0       6       0
  4006 ;;Total ram usage:        6 bytes
  4007 ;; Hardware stack levels used: 1
  4008 ;; Hardware stack levels required when called: 2
  4009 ;; This function calls:
  4010 ;;		___lwdiv
  4011 ;;		___lwmod
  4012 ;; This function is called by:
  4013 ;;		_main
  4014 ;; This function uses a non-reentrant model
  4015 ;;
  4016                           
  4017                           
  4018                           ;psect for function _get_time_data_seconds
  4019  079E                     _get_time_data_seconds:
  4020                           
  4021                           ;incstack = 0
  4022                           ; Regs used in _get_time_data_seconds: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4023                           ;get_time_data_seconds@seconds stored from wreg
  4024  079E  1283               	bcf	3,5	;RP0=0, select bank0
  4025  079F  1303               	bcf	3,6	;RP1=0, select bank0
  4026  07A0  00D5               	movwf	get_time_data_seconds@seconds
  4027  07A1                     l2044:
  4028                           
  4029                           ;segment_display.c: 209: uint8_t get_time_data_seconds(uint8_t seconds, uint8_t time_seg
      +                          ment);segment_display.c: 210: {;segment_display.c: 211:   uint8_t data = 0u;
  4030  07A1  01D4               	clrf	get_time_data_seconds@data
  4031  07A2                     l2046:
  4032                           
  4033                           ;segment_display.c: 212:   if(seconds < 60u)
  4034  07A2  303C               	movlw	60
  4035  07A3  0255               	subwf	get_time_data_seconds@seconds,w
  4036  07A4  1803               	skipnc
  4037  07A5  2FA7               	goto	u1511
  4038  07A6  2FA8               	goto	u1510
  4039  07A7                     u1511:
  4040  07A7  2FE8               	goto	l2056
  4041  07A8                     u1510:
  4042  07A8                     l2048:
  4043                           
  4044                           ;segment_display.c: 213:   {;segment_display.c: 214:     if(time_segment == 4u)
  4045  07A8  3004               	movlw	4
  4046  07A9  0650               	xorwf	get_time_data_seconds@time_segment,w
  4047  07AA  1D03               	btfss	3,2
  4048  07AB  2FAD               	goto	u1521
  4049  07AC  2FAE               	goto	u1520
  4050  07AD                     u1521:
  4051  07AD  2FC8               	goto	l2052
  4052  07AE                     u1520:
  4053  07AE                     l2050:
  4054                           
  4055                           ;segment_display.c: 215:     {;segment_display.c: 216:       data = time_segment_coding[
      +                          seconds / 10u];
  4056  07AE  300A               	movlw	10
  4057  07AF  00C8               	movwf	___lwdiv@divisor
  4058  07B0  3000               	movlw	0
  4059  07B1  00C9               	movwf	___lwdiv@divisor+1
  4060  07B2  0855               	movf	get_time_data_seconds@seconds,w
  4061  07B3  00D1               	movwf	??_get_time_data_seconds
  4062  07B4  01D2               	clrf	??_get_time_data_seconds+1
  4063  07B5  0851               	movf	??_get_time_data_seconds,w
  4064  07B6  00CA               	movwf	___lwdiv@dividend
  4065  07B7  0852               	movf	??_get_time_data_seconds+1,w
  4066  07B8  00CB               	movwf	___lwdiv@dividend+1
  4067  07B9  158A  2597  118A   	fcall	___lwdiv
  4068  07BC  1283               	bcf	3,5	;RP0=0, select bank0
  4069  07BD  1303               	bcf	3,6	;RP1=0, select bank0
  4070  07BE  0848               	movf	?___lwdiv,w
  4071  07BF  3E4C               	addlw	low ((_time_segment_coding-__stringbase)| (0+32768))
  4072  07C0  0084               	movwf	4
  4073  07C1  158A  2000  118A   	fcall	stringdir
  4074  07C4  00D3               	movwf	??_get_time_data_seconds+2
  4075  07C5  0853               	movf	??_get_time_data_seconds+2,w
  4076  07C6  00D4               	movwf	get_time_data_seconds@data
  4077                           
  4078                           ;segment_display.c: 217:     }
  4079  07C7  2FE8               	goto	l2056
  4080  07C8                     l2052:
  4081  07C8  3005               	movlw	5
  4082  07C9  0650               	xorwf	get_time_data_seconds@time_segment,w
  4083  07CA  1D03               	btfss	3,2
  4084  07CB  2FCD               	goto	u1531
  4085  07CC  2FCE               	goto	u1530
  4086  07CD                     u1531:
  4087  07CD  2FE8               	goto	l178
  4088  07CE                     u1530:
  4089  07CE                     l2054:
  4090                           
  4091                           ;segment_display.c: 219:     {;segment_display.c: 220:       data = time_segment_coding[
      +                          seconds % 10u];
  4092  07CE  300A               	movlw	10
  4093  07CF  00C8               	movwf	___lwmod@divisor
  4094  07D0  3000               	movlw	0
  4095  07D1  00C9               	movwf	___lwmod@divisor+1
  4096  07D2  0855               	movf	get_time_data_seconds@seconds,w
  4097  07D3  00D1               	movwf	??_get_time_data_seconds
  4098  07D4  01D2               	clrf	??_get_time_data_seconds+1
  4099  07D5  0851               	movf	??_get_time_data_seconds,w
  4100  07D6  00CA               	movwf	___lwmod@dividend
  4101  07D7  0852               	movf	??_get_time_data_seconds+1,w
  4102  07D8  00CB               	movwf	___lwmod@dividend+1
  4103  07D9  158A  255B  118A   	fcall	___lwmod
  4104  07DC  1283               	bcf	3,5	;RP0=0, select bank0
  4105  07DD  1303               	bcf	3,6	;RP1=0, select bank0
  4106  07DE  0848               	movf	?___lwmod,w
  4107  07DF  3E4C               	addlw	low ((_time_segment_coding-__stringbase)| (0+32768))
  4108  07E0  0084               	movwf	4
  4109  07E1  158A  2000  118A   	fcall	stringdir
  4110  07E4  00D3               	movwf	??_get_time_data_seconds+2
  4111  07E5  0853               	movf	??_get_time_data_seconds+2,w
  4112  07E6  00D4               	movwf	get_time_data_seconds@data
  4113                           
  4114                           ;segment_display.c: 221:     }
  4115  07E7  2FE8               	goto	l2056
  4116  07E8                     l178:
  4117  07E8                     l2056:
  4118                           
  4119                           ;segment_display.c: 227:   return data;
  4120  07E8  0854               	movf	get_time_data_seconds@data,w
  4121  07E9                     l181:
  4122  07E9  0008               	return
  4123  07EA                     __end_of_get_time_data_seconds:
  4124                           
  4125                           	psect	text12
  4126  0F40                     __ptext12:	
  4127 ;; *************** function _get_time_data *****************
  4128 ;; Defined at:
  4129 ;;		line 171 in file "segment_display.c"
  4130 ;; Parameters:    Size  Location     Type
  4131 ;;  p_time          1    wreg     PTR struct .
  4132 ;;		 -> current_time(6), 
  4133 ;;  time_segment    1   12[BANK0 ] unsigned char 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  p_time          1   17[BANK0 ] PTR struct .
  4136 ;;		 -> current_time(6), 
  4137 ;;  data            1   16[BANK0 ] unsigned char 
  4138 ;; Return value:  Size  Location     Type
  4139 ;;                  1    wreg      unsigned char 
  4140 ;; Registers used:
  4141 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4142 ;; Tracked objects:
  4143 ;;		On entry : 0/0
  4144 ;;		On exit  : 0/0
  4145 ;;		Unchanged: 0/0
  4146 ;; Data sizes:     COMMON   BANK0   BANK1
  4147 ;;      Params:         0       1       0
  4148 ;;      Locals:         0       2       0
  4149 ;;      Temps:          0       3       0
  4150 ;;      Totals:         0       6       0
  4151 ;;Total ram usage:        6 bytes
  4152 ;; Hardware stack levels used: 1
  4153 ;; Hardware stack levels required when called: 2
  4154 ;; This function calls:
  4155 ;;		___lwdiv
  4156 ;;		___lwmod
  4157 ;; This function is called by:
  4158 ;;		_main
  4159 ;; This function uses a non-reentrant model
  4160 ;;
  4161                           
  4162                           
  4163                           ;psect for function _get_time_data
  4164  0F40                     _get_time_data:
  4165                           
  4166                           ;incstack = 0
  4167                           ; Regs used in _get_time_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4168                           ;get_time_data@p_time stored from wreg
  4169  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  4170  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  4171  0F42  00D5               	movwf	get_time_data@p_time
  4172  0F43                     l2008:
  4173                           
  4174                           ;segment_display.c: 171: uint8_t get_time_data(time *p_time, uint8_t time_segment);segme
      +                          nt_display.c: 172: {;segment_display.c: 173:   uint8_t data = 0;
  4175  0F43  01D4               	clrf	get_time_data@data
  4176  0F44                     l2010:
  4177                           
  4178                           ;segment_display.c: 174:   if(p_time != (0))
  4179  0F44  0855               	movf	get_time_data@p_time,w
  4180  0F45  1903               	btfsc	3,2
  4181  0F46  2F48               	goto	u1451
  4182  0F47  2F49               	goto	u1450
  4183  0F48                     u1451:
  4184  0F48  2FFE               	goto	l2036
  4185  0F49                     u1450:
  4186  0F49  2FE8               	goto	l2034
  4187  0F4A                     l2014:
  4188                           
  4189                           ;segment_display.c: 179:         if((p_time->hours > 10u) && (p_time->hours < 24u))
  4190  0F4A  0A55               	incf	get_time_data@p_time,w
  4191  0F4B  0084               	movwf	4
  4192  0F4C  300B               	movlw	11
  4193  0F4D  1383               	bcf	3,7	;select IRP bank0
  4194  0F4E  0200               	subwf	0,w
  4195  0F4F  1C03               	skipc
  4196  0F50  2F52               	goto	u1461
  4197  0F51  2F53               	goto	u1460
  4198  0F52                     u1461:
  4199  0F52  2FFE               	goto	l2036
  4200  0F53                     u1460:
  4201  0F53                     l2016:
  4202  0F53  0A55               	incf	get_time_data@p_time,w
  4203  0F54  0084               	movwf	4
  4204  0F55  3018               	movlw	24
  4205  0F56  0200               	subwf	0,w
  4206  0F57  1803               	skipnc
  4207  0F58  2F5A               	goto	u1471
  4208  0F59  2F5B               	goto	u1470
  4209  0F5A                     u1471:
  4210  0F5A  2FFE               	goto	l2036
  4211  0F5B                     u1470:
  4212  0F5B                     l2018:
  4213                           
  4214                           ;segment_display.c: 180:         {;segment_display.c: 181:           data = time_segment
      +                          _coding[p_time->hours / 10u];
  4215  0F5B  300A               	movlw	10
  4216  0F5C  00C8               	movwf	___lwdiv@divisor
  4217  0F5D  3000               	movlw	0
  4218  0F5E  00C9               	movwf	___lwdiv@divisor+1
  4219  0F5F  0A55               	incf	get_time_data@p_time,w
  4220  0F60  0084               	movwf	4
  4221  0F61  0800               	movf	0,w
  4222  0F62  00D1               	movwf	??_get_time_data
  4223  0F63  01D2               	clrf	??_get_time_data+1
  4224  0F64  0851               	movf	??_get_time_data,w
  4225  0F65  00CA               	movwf	___lwdiv@dividend
  4226  0F66  0852               	movf	??_get_time_data+1,w
  4227  0F67  00CB               	movwf	___lwdiv@dividend+1
  4228  0F68  158A  2597  158A   	fcall	___lwdiv
  4229  0F6B  1283               	bcf	3,5	;RP0=0, select bank0
  4230  0F6C  1303               	bcf	3,6	;RP1=0, select bank0
  4231  0F6D  0848               	movf	?___lwdiv,w
  4232  0F6E  3E4C               	addlw	low ((_time_segment_coding-__stringbase)| (0+32768))
  4233  0F6F  0084               	movwf	4
  4234  0F70  158A  2000  158A   	fcall	stringdir
  4235  0F73  00D3               	movwf	??_get_time_data+2
  4236  0F74  0853               	movf	??_get_time_data+2,w
  4237  0F75  00D4               	movwf	get_time_data@data
  4238  0F76  2FFE               	goto	l2036
  4239  0F77                     l2020:
  4240                           
  4241                           ;segment_display.c: 185:         if(p_time->hours < 24u)
  4242  0F77  0A55               	incf	get_time_data@p_time,w
  4243  0F78  0084               	movwf	4
  4244  0F79  3018               	movlw	24
  4245  0F7A  1383               	bcf	3,7	;select IRP bank0
  4246  0F7B  0200               	subwf	0,w
  4247  0F7C  1803               	skipnc
  4248  0F7D  2F7F               	goto	u1481
  4249  0F7E  2F80               	goto	u1480
  4250  0F7F                     u1481:
  4251  0F7F  2FFE               	goto	l2036
  4252  0F80                     u1480:
  4253  0F80                     l2022:
  4254                           
  4255                           ;segment_display.c: 186:         {;segment_display.c: 187:           data = time_segment
      +                          _coding[p_time->hours % 10u] + 1u;
  4256  0F80  300A               	movlw	10
  4257  0F81  00C8               	movwf	___lwmod@divisor
  4258  0F82  3000               	movlw	0
  4259  0F83  00C9               	movwf	___lwmod@divisor+1
  4260  0F84  0A55               	incf	get_time_data@p_time,w
  4261  0F85  0084               	movwf	4
  4262  0F86  0800               	movf	0,w
  4263  0F87  00D1               	movwf	??_get_time_data
  4264  0F88  01D2               	clrf	??_get_time_data+1
  4265  0F89  0851               	movf	??_get_time_data,w
  4266  0F8A  00CA               	movwf	___lwmod@dividend
  4267  0F8B  0852               	movf	??_get_time_data+1,w
  4268  0F8C  00CB               	movwf	___lwmod@dividend+1
  4269  0F8D  158A  255B  158A   	fcall	___lwmod
  4270  0F90  1283               	bcf	3,5	;RP0=0, select bank0
  4271  0F91  1303               	bcf	3,6	;RP1=0, select bank0
  4272  0F92  0848               	movf	?___lwmod,w
  4273  0F93  3E4C               	addlw	low ((_time_segment_coding-__stringbase)| (0+32768))
  4274  0F94  0084               	movwf	4
  4275  0F95  158A  2000  158A   	fcall	stringdir
  4276  0F98  3E01               	addlw	1
  4277  0F99  00D3               	movwf	??_get_time_data+2
  4278  0F9A  0853               	movf	??_get_time_data+2,w
  4279  0F9B  00D4               	movwf	get_time_data@data
  4280  0F9C  2FFE               	goto	l2036
  4281  0F9D                     l2024:
  4282                           
  4283                           ;segment_display.c: 191:         if(p_time->minutes < 60u)
  4284  0F9D  0855               	movf	get_time_data@p_time,w
  4285  0F9E  0084               	movwf	4
  4286  0F9F  303C               	movlw	60
  4287  0FA0  1383               	bcf	3,7	;select IRP bank0
  4288  0FA1  0200               	subwf	0,w
  4289  0FA2  1803               	skipnc
  4290  0FA3  2FA5               	goto	u1491
  4291  0FA4  2FA6               	goto	u1490
  4292  0FA5                     u1491:
  4293  0FA5  2FFE               	goto	l2036
  4294  0FA6                     u1490:
  4295  0FA6                     l2026:
  4296                           
  4297                           ;segment_display.c: 192:         {;segment_display.c: 193:           data = time_segment
      +                          _coding[p_time->minutes / 10u];
  4298  0FA6  300A               	movlw	10
  4299  0FA7  00C8               	movwf	___lwdiv@divisor
  4300  0FA8  3000               	movlw	0
  4301  0FA9  00C9               	movwf	___lwdiv@divisor+1
  4302  0FAA  0855               	movf	get_time_data@p_time,w
  4303  0FAB  0084               	movwf	4
  4304  0FAC  0800               	movf	0,w
  4305  0FAD  00D1               	movwf	??_get_time_data
  4306  0FAE  01D2               	clrf	??_get_time_data+1
  4307  0FAF  0851               	movf	??_get_time_data,w
  4308  0FB0  00CA               	movwf	___lwdiv@dividend
  4309  0FB1  0852               	movf	??_get_time_data+1,w
  4310  0FB2  00CB               	movwf	___lwdiv@dividend+1
  4311  0FB3  158A  2597  158A   	fcall	___lwdiv
  4312  0FB6  1283               	bcf	3,5	;RP0=0, select bank0
  4313  0FB7  1303               	bcf	3,6	;RP1=0, select bank0
  4314  0FB8  0848               	movf	?___lwdiv,w
  4315  0FB9  3E4C               	addlw	low ((_time_segment_coding-__stringbase)| (0+32768))
  4316  0FBA  0084               	movwf	4
  4317  0FBB  158A  2000  158A   	fcall	stringdir
  4318  0FBE  00D3               	movwf	??_get_time_data+2
  4319  0FBF  0853               	movf	??_get_time_data+2,w
  4320  0FC0  00D4               	movwf	get_time_data@data
  4321  0FC1  2FFE               	goto	l2036
  4322  0FC2                     l2028:
  4323                           
  4324                           ;segment_display.c: 197:         if(p_time->minutes < 60u)
  4325  0FC2  0855               	movf	get_time_data@p_time,w
  4326  0FC3  0084               	movwf	4
  4327  0FC4  303C               	movlw	60
  4328  0FC5  1383               	bcf	3,7	;select IRP bank0
  4329  0FC6  0200               	subwf	0,w
  4330  0FC7  1803               	skipnc
  4331  0FC8  2FCA               	goto	u1501
  4332  0FC9  2FCB               	goto	u1500
  4333  0FCA                     u1501:
  4334  0FCA  2FFE               	goto	l2036
  4335  0FCB                     u1500:
  4336  0FCB                     l2030:
  4337                           
  4338                           ;segment_display.c: 198:         {;segment_display.c: 199:           data = time_segment
      +                          _coding[p_time->minutes % 10u] + 1u;
  4339  0FCB  300A               	movlw	10
  4340  0FCC  00C8               	movwf	___lwmod@divisor
  4341  0FCD  3000               	movlw	0
  4342  0FCE  00C9               	movwf	___lwmod@divisor+1
  4343  0FCF  0855               	movf	get_time_data@p_time,w
  4344  0FD0  0084               	movwf	4
  4345  0FD1  0800               	movf	0,w
  4346  0FD2  00D1               	movwf	??_get_time_data
  4347  0FD3  01D2               	clrf	??_get_time_data+1
  4348  0FD4  0851               	movf	??_get_time_data,w
  4349  0FD5  00CA               	movwf	___lwmod@dividend
  4350  0FD6  0852               	movf	??_get_time_data+1,w
  4351  0FD7  00CB               	movwf	___lwmod@dividend+1
  4352  0FD8  158A  255B  158A   	fcall	___lwmod
  4353  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4354  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4355  0FDD  0848               	movf	?___lwmod,w
  4356  0FDE  3E4C               	addlw	low ((_time_segment_coding-__stringbase)| (0+32768))
  4357  0FDF  0084               	movwf	4
  4358  0FE0  158A  2000  158A   	fcall	stringdir
  4359  0FE3  3E01               	addlw	1
  4360  0FE4  00D3               	movwf	??_get_time_data+2
  4361  0FE5  0853               	movf	??_get_time_data+2,w
  4362  0FE6  00D4               	movwf	get_time_data@data
  4363  0FE7  2FFE               	goto	l2036
  4364  0FE8                     l2034:
  4365  0FE8  0850               	movf	get_time_data@time_segment,w
  4366  0FE9  00D1               	movwf	??_get_time_data
  4367  0FEA  01D2               	clrf	??_get_time_data+1
  4368                           
  4369                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4370                           ; Switch size 1, requested type "simple"
  4371                           ; Number of cases is 1, Range of values is 0 to 0
  4372                           ; switch strategies available:
  4373                           ; Name         Instructions Cycles
  4374                           ; simple_byte            4     3 (average)
  4375                           ; direct_byte            9     7 (fixed)
  4376                           ; jumptable            260     6 (fixed)
  4377                           ;	Chosen strategy is simple_byte
  4378  0FEB  0852               	movf	??_get_time_data+1,w
  4379  0FEC  3A00               	xorlw	0	; case 0
  4380  0FED  1903               	skipnz
  4381  0FEE  2FF0               	goto	l2348
  4382  0FEF  2FFE               	goto	l2036
  4383  0FF0                     l2348:
  4384                           
  4385                           ; Switch size 1, requested type "simple"
  4386                           ; Number of cases is 4, Range of values is 0 to 3
  4387                           ; switch strategies available:
  4388                           ; Name         Instructions Cycles
  4389                           ; simple_byte           13     7 (average)
  4390                           ; direct_byte           15     7 (fixed)
  4391                           ; jumptable            260     6 (fixed)
  4392                           ;	Chosen strategy is simple_byte
  4393  0FF0  0851               	movf	??_get_time_data,w
  4394  0FF1  3A00               	xorlw	0	; case 0
  4395  0FF2  1903               	skipnz
  4396  0FF3  2F4A               	goto	l2014
  4397  0FF4  3A01               	xorlw	1	; case 1
  4398  0FF5  1903               	skipnz
  4399  0FF6  2F77               	goto	l2020
  4400  0FF7  3A03               	xorlw	3	; case 2
  4401  0FF8  1903               	skipnz
  4402  0FF9  2F9D               	goto	l2024
  4403  0FFA  3A01               	xorlw	1	; case 3
  4404  0FFB  1903               	skipnz
  4405  0FFC  2FC2               	goto	l2028
  4406  0FFD  2FFE               	goto	l2036
  4407  0FFE                     l2036:
  4408                           
  4409                           ;segment_display.c: 206:   return data;
  4410  0FFE  0854               	movf	get_time_data@data,w
  4411  0FFF                     l173:
  4412  0FFF  0008               	return
  4413  1000                     __end_of_get_time_data:
  4414                           
  4415                           	psect	text13
  4416  0D2E                     __ptext13:	
  4417 ;; *************** function _get_time *****************
  4418 ;; Defined at:
  4419 ;;		line 276 in file "dcf77_decoder.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  p_time          1    wreg     PTR struct .
  4422 ;;		 -> current_time(6), 
  4423 ;; Auto vars:     Size  Location     Type
  4424 ;;  p_time          1    5[BANK0 ] PTR struct .
  4425 ;;		 -> current_time(6), 
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4430 ;; Tracked objects:
  4431 ;;		On entry : 0/0
  4432 ;;		On exit  : 0/0
  4433 ;;		Unchanged: 0/0
  4434 ;; Data sizes:     COMMON   BANK0   BANK1
  4435 ;;      Params:         0       0       0
  4436 ;;      Locals:         0       1       0
  4437 ;;      Temps:          0       1       0
  4438 ;;      Totals:         0       2       0
  4439 ;;Total ram usage:        2 bytes
  4440 ;; Hardware stack levels used: 1
  4441 ;; Hardware stack levels required when called: 1
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_main
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           
  4450                           ;psect for function _get_time
  4451  0D2E                     _get_time:
  4452                           
  4453                           ;incstack = 0
  4454                           ; Regs used in _get_time: [wreg-fsr0h+status,2+status,0]
  4455                           ;get_time@p_time stored from wreg
  4456  0D2E  1283               	bcf	3,5	;RP0=0, select bank0
  4457  0D2F  1303               	bcf	3,6	;RP1=0, select bank0
  4458  0D30  00C9               	movwf	get_time@p_time
  4459  0D31                     l1788:
  4460                           
  4461                           ;dcf77_decoder.c: 276: void get_time(time *p_time);dcf77_decoder.c: 277: {;dcf77_decoder
      +                          .c: 278:   p_time->day = last_one.day;
  4462  0D31  085D               	movf	_last_one+3,w
  4463  0D32  00C8               	movwf	??_get_time
  4464  0D33  0849               	movf	get_time@p_time,w
  4465  0D34  3E03               	addlw	3
  4466  0D35  0084               	movwf	4
  4467  0D36  0848               	movf	??_get_time,w
  4468  0D37  1383               	bcf	3,7	;select IRP bank0
  4469  0D38  0080               	movwf	0
  4470                           
  4471                           ;dcf77_decoder.c: 279:   p_time->day_of_week = last_one.day_of_week;
  4472  0D39  085C               	movf	_last_one+2,w
  4473  0D3A  00C8               	movwf	??_get_time
  4474  0D3B  0849               	movf	get_time@p_time,w
  4475  0D3C  3E02               	addlw	2
  4476  0D3D  0084               	movwf	4
  4477  0D3E  0848               	movf	??_get_time,w
  4478  0D3F  0080               	movwf	0
  4479  0D40                     l1790:
  4480                           
  4481                           ;dcf77_decoder.c: 280:   p_time->hours = last_one.hours;
  4482  0D40  085B               	movf	_last_one+1,w
  4483  0D41  00C8               	movwf	??_get_time
  4484  0D42  0A49               	incf	get_time@p_time,w
  4485  0D43  0084               	movwf	4
  4486  0D44  0848               	movf	??_get_time,w
  4487  0D45  0080               	movwf	0
  4488  0D46                     l1792:
  4489                           
  4490                           ;dcf77_decoder.c: 281:   p_time->minutes = last_one.minutes;
  4491  0D46  085A               	movf	_last_one,w
  4492  0D47  00C8               	movwf	??_get_time
  4493  0D48  0849               	movf	get_time@p_time,w
  4494  0D49  0084               	movwf	4
  4495  0D4A  0848               	movf	??_get_time,w
  4496  0D4B  0080               	movwf	0
  4497                           
  4498                           ;dcf77_decoder.c: 282:   p_time->month = last_one.month;
  4499  0D4C  085E               	movf	_last_one+4,w
  4500  0D4D  00C8               	movwf	??_get_time
  4501  0D4E  0849               	movf	get_time@p_time,w
  4502  0D4F  3E04               	addlw	4
  4503  0D50  0084               	movwf	4
  4504  0D51  0848               	movf	??_get_time,w
  4505  0D52  0080               	movwf	0
  4506                           
  4507                           ;dcf77_decoder.c: 283:   p_time->year = last_one.year;
  4508  0D53  085F               	movf	_last_one+5,w
  4509  0D54  00C8               	movwf	??_get_time
  4510  0D55  0849               	movf	get_time@p_time,w
  4511  0D56  3E05               	addlw	5
  4512  0D57  0084               	movwf	4
  4513  0D58  0848               	movf	??_get_time,w
  4514  0D59  0080               	movwf	0
  4515  0D5A                     l250:
  4516  0D5A  0008               	return
  4517  0D5B                     __end_of_get_time:
  4518                           
  4519                           	psect	text14
  4520  0DDD                     __ptext14:	
  4521 ;; *************** function _get_day_data *****************
  4522 ;; Defined at:
  4523 ;;		line 155 in file "segment_display.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  p_time          1    wreg     PTR struct .
  4526 ;;		 -> current_time(6), 
  4527 ;;  day_segment     1    8[BANK0 ] unsigned char 
  4528 ;;  byte            1    9[BANK0 ] unsigned char 
  4529 ;; Auto vars:     Size  Location     Type
  4530 ;;  p_time          1   16[BANK0 ] PTR struct .
  4531 ;;		 -> current_time(6), 
  4532 ;;  data            1   15[BANK0 ] unsigned char 
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      unsigned char 
  4535 ;; Registers used:
  4536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMMON   BANK0   BANK1
  4542 ;;      Params:         0       2       0
  4543 ;;      Locals:         0       2       0
  4544 ;;      Temps:          0       5       0
  4545 ;;      Totals:         0       9       0
  4546 ;;Total ram usage:        9 bytes
  4547 ;; Hardware stack levels used: 1
  4548 ;; Hardware stack levels required when called: 2
  4549 ;; This function calls:
  4550 ;;		___bmul
  4551 ;; This function is called by:
  4552 ;;		_main
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           
  4557                           ;psect for function _get_day_data
  4558  0DDD                     _get_day_data:
  4559                           
  4560                           ;incstack = 0
  4561                           ; Regs used in _get_day_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4562                           ;get_day_data@p_time stored from wreg
  4563  0DDD  1283               	bcf	3,5	;RP0=0, select bank0
  4564  0DDE  1303               	bcf	3,6	;RP1=0, select bank0
  4565  0DDF  00D4               	movwf	get_day_data@p_time
  4566  0DE0                     l2096:
  4567                           
  4568                           ;segment_display.c: 155: uint8_t get_day_data(time *p_time, uint8_t day_segment, uint8_t
      +                           byte);segment_display.c: 156: {;segment_display.c: 157:   uint8_t data = 0u;
  4569  0DE0  01D3               	clrf	get_day_data@data
  4570  0DE1                     l2098:
  4571                           
  4572                           ;segment_display.c: 158:   if(p_time != (0))
  4573  0DE1  0854               	movf	get_day_data@p_time,w
  4574  0DE2  1903               	btfsc	3,2
  4575  0DE3  2DE5               	goto	u1551
  4576  0DE4  2DE6               	goto	u1550
  4577  0DE5                     u1551:
  4578  0DE5  2E27               	goto	l2110
  4579  0DE6                     u1550:
  4580  0DE6                     l2100:
  4581                           
  4582                           ;segment_display.c: 159:   {;segment_display.c: 160:     if((p_time->day_of_week > 0u) &
      +                          & (p_time->day_of_week < 8u))
  4583  0DE6  0854               	movf	get_day_data@p_time,w
  4584  0DE7  3E02               	addlw	2
  4585  0DE8  0084               	movwf	4
  4586  0DE9  1383               	bcf	3,7	;select IRP bank0
  4587  0DEA  0800               	movf	0,w
  4588  0DEB  1903               	btfsc	3,2
  4589  0DEC  2DEE               	goto	u1561
  4590  0DED  2DEF               	goto	u1560
  4591  0DEE                     u1561:
  4592  0DEE  2E27               	goto	l2110
  4593  0DEF                     u1560:
  4594  0DEF                     l2102:
  4595  0DEF  0854               	movf	get_day_data@p_time,w
  4596  0DF0  3E02               	addlw	2
  4597  0DF1  0084               	movwf	4
  4598  0DF2  3008               	movlw	8
  4599  0DF3  0200               	subwf	0,w
  4600  0DF4  1803               	skipnc
  4601  0DF5  2DF7               	goto	u1571
  4602  0DF6  2DF8               	goto	u1570
  4603  0DF7                     u1571:
  4604  0DF7  2E27               	goto	l2110
  4605  0DF8                     u1570:
  4606  0DF8                     l2104:
  4607                           
  4608                           ;segment_display.c: 161:     {;segment_display.c: 162:       if((day_segment < 3u) && (b
      +                          yte < 2u))
  4609  0DF8  3003               	movlw	3
  4610  0DF9  024C               	subwf	get_day_data@day_segment,w
  4611  0DFA  1803               	skipnc
  4612  0DFB  2DFD               	goto	u1581
  4613  0DFC  2DFE               	goto	u1580
  4614  0DFD                     u1581:
  4615  0DFD  2E27               	goto	l2110
  4616  0DFE                     u1580:
  4617  0DFE                     l2106:
  4618  0DFE  3002               	movlw	2
  4619  0DFF  024D               	subwf	get_day_data@byte,w
  4620  0E00  1803               	skipnc
  4621  0E01  2E03               	goto	u1591
  4622  0E02  2E04               	goto	u1590
  4623  0E03                     u1591:
  4624  0E03  2E27               	goto	l2110
  4625  0E04                     u1590:
  4626  0E04                     l2108:
  4627                           
  4628                           ;segment_display.c: 163:       {;segment_display.c: 164:         data = day_segment_codi
      +                          ng[p_time->day_of_week - 1u][day_segment][byte];
  4629  0E04  084C               	movf	get_day_data@day_segment,w
  4630  0E05  00CE               	movwf	??_get_day_data
  4631  0E06  3001               	movlw	1
  4632  0E07                     u1605:
  4633  0E07  1003               	clrc
  4634  0E08  0DCE               	rlf	??_get_day_data,f
  4635  0E09  3EFF               	addlw	-1
  4636  0E0A  1D03               	skipz
  4637  0E0B  2E07               	goto	u1605
  4638  0E0C  30FB               	movlw	(low (((_day_segment_coding-__stringbase)| (0+32768)+250)))& (0+255)
  4639  0E0D  074E               	addwf	??_get_day_data,w
  4640  0E0E  00CF               	movwf	??_get_day_data+1
  4641  0E0F  3006               	movlw	6
  4642  0E10  00D0               	movwf	??_get_day_data+2
  4643  0E11  0850               	movf	??_get_day_data+2,w
  4644  0E12  00C8               	movwf	___bmul@multiplicand
  4645  0E13  0854               	movf	get_day_data@p_time,w
  4646  0E14  3E02               	addlw	2
  4647  0E15  0084               	movwf	4
  4648  0E16  0800               	movf	0,w
  4649  0E17  158A  24DB  158A   	fcall	___bmul
  4650  0E1A  1283               	bcf	3,5	;RP0=0, select bank0
  4651  0E1B  1303               	bcf	3,6	;RP1=0, select bank0
  4652  0E1C  074F               	addwf	??_get_day_data+1,w
  4653  0E1D  00D1               	movwf	??_get_day_data+3
  4654  0E1E  084D               	movf	get_day_data@byte,w
  4655  0E1F  0751               	addwf	??_get_day_data+3,w
  4656  0E20  0084               	movwf	4
  4657  0E21  158A  2000  158A   	fcall	stringdir
  4658  0E24  00D2               	movwf	??_get_day_data+4
  4659  0E25  0852               	movf	??_get_day_data+4,w
  4660  0E26  00D3               	movwf	get_day_data@data
  4661  0E27                     l2110:
  4662                           
  4663                           ;segment_display.c: 168:   return data;
  4664  0E27  0853               	movf	get_day_data@data,w
  4665  0E28                     l158:
  4666  0E28  0008               	return
  4667  0E29                     __end_of_get_day_data:
  4668                           
  4669                           	psect	text15
  4670  0CDB                     __ptext15:	
  4671 ;; *************** function ___bmul *****************
  4672 ;; Defined at:
  4673 ;;		line 4 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  4674 ;; Parameters:    Size  Location     Type
  4675 ;;  multiplier      1    wreg     unsigned char 
  4676 ;;  multiplicand    1    4[BANK0 ] unsigned char 
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;  multiplier      1    7[BANK0 ] unsigned char 
  4679 ;;  product         1    6[BANK0 ] unsigned char 
  4680 ;; Return value:  Size  Location     Type
  4681 ;;                  1    wreg      unsigned char 
  4682 ;; Registers used:
  4683 ;;		wreg, status,2, status,0
  4684 ;; Tracked objects:
  4685 ;;		On entry : 0/0
  4686 ;;		On exit  : 0/0
  4687 ;;		Unchanged: 0/0
  4688 ;; Data sizes:     COMMON   BANK0   BANK1
  4689 ;;      Params:         0       1       0
  4690 ;;      Locals:         0       2       0
  4691 ;;      Temps:          0       1       0
  4692 ;;      Totals:         0       4       0
  4693 ;;Total ram usage:        4 bytes
  4694 ;; Hardware stack levels used: 1
  4695 ;; Hardware stack levels required when called: 1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_get_day_data
  4700 ;;		_make_time
  4701 ;;		_new_bit
  4702 ;; This function uses a non-reentrant model
  4703 ;;
  4704                           
  4705                           
  4706                           ;psect for function ___bmul
  4707  0CDB                     ___bmul:
  4708                           
  4709                           ;incstack = 0
  4710                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  4711                           ;___bmul@multiplier stored from wreg
  4712  0CDB  1283               	bcf	3,5	;RP0=0, select bank0
  4713  0CDC  1303               	bcf	3,6	;RP1=0, select bank0
  4714  0CDD  00CB               	movwf	___bmul@multiplier
  4715  0CDE                     l1636:
  4716  0CDE  01CA               	clrf	___bmul@product
  4717  0CDF                     l1638:
  4718  0CDF  1C4B               	btfss	___bmul@multiplier,0
  4719  0CE0  2CE2               	goto	u961
  4720  0CE1  2CE3               	goto	u960
  4721  0CE2                     u961:
  4722  0CE2  2CE7               	goto	l1642
  4723  0CE3                     u960:
  4724  0CE3                     l1640:
  4725  0CE3  0848               	movf	___bmul@multiplicand,w
  4726  0CE4  00C9               	movwf	??___bmul
  4727  0CE5  0849               	movf	??___bmul,w
  4728  0CE6  07CA               	addwf	___bmul@product,f
  4729  0CE7                     l1642:
  4730  0CE7  1003               	clrc
  4731  0CE8  0DC8               	rlf	___bmul@multiplicand,f
  4732  0CE9                     l1644:
  4733  0CE9  1003               	clrc
  4734  0CEA  0CCB               	rrf	___bmul@multiplier,f
  4735  0CEB  084B               	movf	___bmul@multiplier,w
  4736  0CEC  1D03               	btfss	3,2
  4737  0CED  2CEF               	goto	u971
  4738  0CEE  2CF0               	goto	u970
  4739  0CEF                     u971:
  4740  0CEF  2CDF               	goto	l1638
  4741  0CF0                     u970:
  4742  0CF0                     l1646:
  4743  0CF0  084A               	movf	___bmul@product,w
  4744  0CF1                     l370:
  4745  0CF1  0008               	return
  4746  0CF2                     __end_of___bmul:
  4747                           
  4748                           	psect	text16
  4749  06A6                     __ptext16:	
  4750 ;; *************** function _get_date_data *****************
  4751 ;; Defined at:
  4752 ;;		line 115 in file "segment_display.c"
  4753 ;; Parameters:    Size  Location     Type
  4754 ;;  p_time          1    wreg     PTR struct .
  4755 ;;		 -> current_time(6), 
  4756 ;;  date_segment    1   12[BANK0 ] unsigned char 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;  p_time          1   17[BANK0 ] PTR struct .
  4759 ;;		 -> current_time(6), 
  4760 ;;  value           1   16[BANK0 ] unsigned char 
  4761 ;; Return value:  Size  Location     Type
  4762 ;;                  1    wreg      unsigned char 
  4763 ;; Registers used:
  4764 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4765 ;; Tracked objects:
  4766 ;;		On entry : 0/0
  4767 ;;		On exit  : 0/0
  4768 ;;		Unchanged: 0/0
  4769 ;; Data sizes:     COMMON   BANK0   BANK1
  4770 ;;      Params:         0       1       0
  4771 ;;      Locals:         0       2       0
  4772 ;;      Temps:          0       3       0
  4773 ;;      Totals:         0       6       0
  4774 ;;Total ram usage:        6 bytes
  4775 ;; Hardware stack levels used: 1
  4776 ;; Hardware stack levels required when called: 2
  4777 ;; This function calls:
  4778 ;;		___lwdiv
  4779 ;;		___lwmod
  4780 ;; This function is called by:
  4781 ;;		_main
  4782 ;; This function uses a non-reentrant model
  4783 ;;
  4784                           
  4785                           
  4786                           ;psect for function _get_date_data
  4787  06A6                     _get_date_data:
  4788                           
  4789                           ;incstack = 0
  4790                           ; Regs used in _get_date_data: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4791                           ;get_date_data@p_time stored from wreg
  4792  06A6  1283               	bcf	3,5	;RP0=0, select bank0
  4793  06A7  1303               	bcf	3,6	;RP1=0, select bank0
  4794  06A8  00D5               	movwf	get_date_data@p_time
  4795  06A9                     l2060:
  4796                           
  4797                           ;segment_display.c: 115: uint8_t get_date_data(time *p_time, uint8_t date_segment);segme
      +                          nt_display.c: 116: {;segment_display.c: 117:   uint8_t value = 0u;
  4798  06A9  01D4               	clrf	get_date_data@value
  4799  06AA                     l2062:
  4800                           
  4801                           ;segment_display.c: 118:   if(p_time != (0))
  4802  06AA  0855               	movf	get_date_data@p_time,w
  4803  06AB  1903               	btfsc	3,2
  4804  06AC  2EAE               	goto	u1541
  4805  06AD  2EAF               	goto	u1540
  4806  06AE                     u1541:
  4807  06AE  2F9C               	goto	l2088
  4808  06AF                     u1540:
  4809  06AF  2F7A               	goto	l2086
  4810  06B0                     l2066:
  4811                           
  4812                           ;segment_display.c: 123:         value = date_segment_coding[p_time->year % 10u];
  4813  06B0  300A               	movlw	10
  4814  06B1  00C8               	movwf	___lwmod@divisor
  4815  06B2  3000               	movlw	0
  4816  06B3  00C9               	movwf	___lwmod@divisor+1
  4817  06B4  0855               	movf	get_date_data@p_time,w
  4818  06B5  3E05               	addlw	5
  4819  06B6  0084               	movwf	4
  4820  06B7  1383               	bcf	3,7	;select IRP bank0
  4821  06B8  0800               	movf	0,w
  4822  06B9  00D1               	movwf	??_get_date_data
  4823  06BA  01D2               	clrf	??_get_date_data+1
  4824  06BB  0851               	movf	??_get_date_data,w
  4825  06BC  00CA               	movwf	___lwmod@dividend
  4826  06BD  0852               	movf	??_get_date_data+1,w
  4827  06BE  00CB               	movwf	___lwmod@dividend+1
  4828  06BF  158A  255B  118A   	fcall	___lwmod
  4829  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  4830  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  4831  06C4  0848               	movf	?___lwmod,w
  4832  06C5  3E56               	addlw	low ((_date_segment_coding-__stringbase)| (0+32768))
  4833  06C6  0084               	movwf	4
  4834  06C7  158A  2000  118A   	fcall	stringdir
  4835  06CA  00D3               	movwf	??_get_date_data+2
  4836  06CB  0853               	movf	??_get_date_data+2,w
  4837  06CC  00D4               	movwf	get_date_data@value
  4838                           
  4839                           ;segment_display.c: 124:         break;
  4840  06CD  2F9C               	goto	l2088
  4841  06CE                     l2068:
  4842                           
  4843                           ;segment_display.c: 126:         value = date_segment_coding[p_time->year / 10u];
  4844  06CE  300A               	movlw	10
  4845  06CF  00C8               	movwf	___lwdiv@divisor
  4846  06D0  3000               	movlw	0
  4847  06D1  00C9               	movwf	___lwdiv@divisor+1
  4848  06D2  0855               	movf	get_date_data@p_time,w
  4849  06D3  3E05               	addlw	5
  4850  06D4  0084               	movwf	4
  4851  06D5  1383               	bcf	3,7	;select IRP bank0
  4852  06D6  0800               	movf	0,w
  4853  06D7  00D1               	movwf	??_get_date_data
  4854  06D8  01D2               	clrf	??_get_date_data+1
  4855  06D9  0851               	movf	??_get_date_data,w
  4856  06DA  00CA               	movwf	___lwdiv@dividend
  4857  06DB  0852               	movf	??_get_date_data+1,w
  4858  06DC  00CB               	movwf	___lwdiv@dividend+1
  4859  06DD  158A  2597  118A   	fcall	___lwdiv
  4860  06E0  1283               	bcf	3,5	;RP0=0, select bank0
  4861  06E1  1303               	bcf	3,6	;RP1=0, select bank0
  4862  06E2  0848               	movf	?___lwdiv,w
  4863  06E3  3E56               	addlw	low ((_date_segment_coding-__stringbase)| (0+32768))
  4864  06E4  0084               	movwf	4
  4865  06E5  158A  2000  118A   	fcall	stringdir
  4866  06E8  00D3               	movwf	??_get_date_data+2
  4867  06E9  0853               	movf	??_get_date_data+2,w
  4868  06EA  00D4               	movwf	get_date_data@value
  4869                           
  4870                           ;segment_display.c: 127:         break;
  4871  06EB  2F9C               	goto	l2088
  4872  06EC                     l2070:
  4873                           
  4874                           ;segment_display.c: 130:         value = date_segment_coding[0u];
  4875  06EC  3056               	movlw	low (_date_segment_coding-__stringbase)
  4876  06ED  0084               	movwf	4
  4877  06EE  158A  2000  118A   	fcall	stringdir
  4878  06F1  00D1               	movwf	??_get_date_data
  4879  06F2  0851               	movf	??_get_date_data,w
  4880  06F3  00D4               	movwf	get_date_data@value
  4881                           
  4882                           ;segment_display.c: 131:         break;
  4883  06F4  2F9C               	goto	l2088
  4884  06F5                     l2072:
  4885                           
  4886                           ;segment_display.c: 133:         value = date_segment_coding[2u];
  4887  06F5  3058               	movlw	low (((_date_segment_coding+2)-__stringbase)| (0+32768))
  4888  06F6  0084               	movwf	4
  4889  06F7  158A  2000  118A   	fcall	stringdir
  4890  06FA  00D1               	movwf	??_get_date_data
  4891  06FB  0851               	movf	??_get_date_data,w
  4892  06FC  00D4               	movwf	get_date_data@value
  4893                           
  4894                           ;segment_display.c: 134:         break;
  4895  06FD  2F9C               	goto	l2088
  4896  06FE                     l2074:
  4897                           
  4898                           ;segment_display.c: 136:         value = date_segment_coding[p_time->month % 10u] + 128u
      +                          ;
  4899  06FE  300A               	movlw	10
  4900  06FF  00C8               	movwf	___lwmod@divisor
  4901  0700  3000               	movlw	0
  4902  0701  00C9               	movwf	___lwmod@divisor+1
  4903  0702  0855               	movf	get_date_data@p_time,w
  4904  0703  3E04               	addlw	4
  4905  0704  0084               	movwf	4
  4906  0705  1383               	bcf	3,7	;select IRP bank0
  4907  0706  0800               	movf	0,w
  4908  0707  00D1               	movwf	??_get_date_data
  4909  0708  01D2               	clrf	??_get_date_data+1
  4910  0709  0851               	movf	??_get_date_data,w
  4911  070A  00CA               	movwf	___lwmod@dividend
  4912  070B  0852               	movf	??_get_date_data+1,w
  4913  070C  00CB               	movwf	___lwmod@dividend+1
  4914  070D  158A  255B  118A   	fcall	___lwmod
  4915  0710  1283               	bcf	3,5	;RP0=0, select bank0
  4916  0711  1303               	bcf	3,6	;RP1=0, select bank0
  4917  0712  0848               	movf	?___lwmod,w
  4918  0713  3E56               	addlw	low ((_date_segment_coding-__stringbase)| (0+32768))
  4919  0714  0084               	movwf	4
  4920  0715  158A  2000  118A   	fcall	stringdir
  4921  0718  3E80               	addlw	128
  4922  0719  00D3               	movwf	??_get_date_data+2
  4923  071A  0853               	movf	??_get_date_data+2,w
  4924  071B  00D4               	movwf	get_date_data@value
  4925                           
  4926                           ;segment_display.c: 137:         break;
  4927  071C  2F9C               	goto	l2088
  4928  071D                     l2076:
  4929                           
  4930                           ;segment_display.c: 139:         value = date_segment_coding[p_time->month / 10u];
  4931  071D  300A               	movlw	10
  4932  071E  00C8               	movwf	___lwdiv@divisor
  4933  071F  3000               	movlw	0
  4934  0720  00C9               	movwf	___lwdiv@divisor+1
  4935  0721  0855               	movf	get_date_data@p_time,w
  4936  0722  3E04               	addlw	4
  4937  0723  0084               	movwf	4
  4938  0724  1383               	bcf	3,7	;select IRP bank0
  4939  0725  0800               	movf	0,w
  4940  0726  00D1               	movwf	??_get_date_data
  4941  0727  01D2               	clrf	??_get_date_data+1
  4942  0728  0851               	movf	??_get_date_data,w
  4943  0729  00CA               	movwf	___lwdiv@dividend
  4944  072A  0852               	movf	??_get_date_data+1,w
  4945  072B  00CB               	movwf	___lwdiv@dividend+1
  4946  072C  158A  2597  118A   	fcall	___lwdiv
  4947  072F  1283               	bcf	3,5	;RP0=0, select bank0
  4948  0730  1303               	bcf	3,6	;RP1=0, select bank0
  4949  0731  0848               	movf	?___lwdiv,w
  4950  0732  3E56               	addlw	low ((_date_segment_coding-__stringbase)| (0+32768))
  4951  0733  0084               	movwf	4
  4952  0734  158A  2000  118A   	fcall	stringdir
  4953  0737  00D3               	movwf	??_get_date_data+2
  4954  0738  0853               	movf	??_get_date_data+2,w
  4955  0739  00D4               	movwf	get_date_data@value
  4956                           
  4957                           ;segment_display.c: 140:         break;
  4958  073A  2F9C               	goto	l2088
  4959  073B                     l2078:
  4960                           
  4961                           ;segment_display.c: 142:         value = date_segment_coding[p_time->day % 10u] + 128u;
  4962  073B  300A               	movlw	10
  4963  073C  00C8               	movwf	___lwmod@divisor
  4964  073D  3000               	movlw	0
  4965  073E  00C9               	movwf	___lwmod@divisor+1
  4966  073F  0855               	movf	get_date_data@p_time,w
  4967  0740  3E03               	addlw	3
  4968  0741  0084               	movwf	4
  4969  0742  1383               	bcf	3,7	;select IRP bank0
  4970  0743  0800               	movf	0,w
  4971  0744  00D1               	movwf	??_get_date_data
  4972  0745  01D2               	clrf	??_get_date_data+1
  4973  0746  0851               	movf	??_get_date_data,w
  4974  0747  00CA               	movwf	___lwmod@dividend
  4975  0748  0852               	movf	??_get_date_data+1,w
  4976  0749  00CB               	movwf	___lwmod@dividend+1
  4977  074A  158A  255B  118A   	fcall	___lwmod
  4978  074D  1283               	bcf	3,5	;RP0=0, select bank0
  4979  074E  1303               	bcf	3,6	;RP1=0, select bank0
  4980  074F  0848               	movf	?___lwmod,w
  4981  0750  3E56               	addlw	low ((_date_segment_coding-__stringbase)| (0+32768))
  4982  0751  0084               	movwf	4
  4983  0752  158A  2000  118A   	fcall	stringdir
  4984  0755  3E80               	addlw	128
  4985  0756  00D3               	movwf	??_get_date_data+2
  4986  0757  0853               	movf	??_get_date_data+2,w
  4987  0758  00D4               	movwf	get_date_data@value
  4988                           
  4989                           ;segment_display.c: 143:         break;
  4990  0759  2F9C               	goto	l2088
  4991  075A                     l2080:
  4992                           
  4993                           ;segment_display.c: 145:         value = date_segment_coding[p_time->day / 10u];
  4994  075A  300A               	movlw	10
  4995  075B  00C8               	movwf	___lwdiv@divisor
  4996  075C  3000               	movlw	0
  4997  075D  00C9               	movwf	___lwdiv@divisor+1
  4998  075E  0855               	movf	get_date_data@p_time,w
  4999  075F  3E03               	addlw	3
  5000  0760  0084               	movwf	4
  5001  0761  1383               	bcf	3,7	;select IRP bank0
  5002  0762  0800               	movf	0,w
  5003  0763  00D1               	movwf	??_get_date_data
  5004  0764  01D2               	clrf	??_get_date_data+1
  5005  0765  0851               	movf	??_get_date_data,w
  5006  0766  00CA               	movwf	___lwdiv@dividend
  5007  0767  0852               	movf	??_get_date_data+1,w
  5008  0768  00CB               	movwf	___lwdiv@dividend+1
  5009  0769  158A  2597  118A   	fcall	___lwdiv
  5010  076C  1283               	bcf	3,5	;RP0=0, select bank0
  5011  076D  1303               	bcf	3,6	;RP1=0, select bank0
  5012  076E  0848               	movf	?___lwdiv,w
  5013  076F  3E56               	addlw	low ((_date_segment_coding-__stringbase)| (0+32768))
  5014  0770  0084               	movwf	4
  5015  0771  158A  2000  118A   	fcall	stringdir
  5016  0774  00D3               	movwf	??_get_date_data+2
  5017  0775  0853               	movf	??_get_date_data+2,w
  5018  0776  00D4               	movwf	get_date_data@value
  5019                           
  5020                           ;segment_display.c: 146:         break;
  5021  0777  2F9C               	goto	l2088
  5022  0778                     l2082:
  5023                           
  5024                           ;segment_display.c: 148:         value = 0u;
  5025  0778  01D4               	clrf	get_date_data@value
  5026                           
  5027                           ;segment_display.c: 149:         break;
  5028  0779  2F9C               	goto	l2088
  5029  077A                     l2086:
  5030  077A  0850               	movf	get_date_data@date_segment,w
  5031  077B  00D1               	movwf	??_get_date_data
  5032  077C  01D2               	clrf	??_get_date_data+1
  5033                           
  5034                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5035                           ; Switch size 1, requested type "simple"
  5036                           ; Number of cases is 1, Range of values is 0 to 0
  5037                           ; switch strategies available:
  5038                           ; Name         Instructions Cycles
  5039                           ; simple_byte            4     3 (average)
  5040                           ; direct_byte            9     7 (fixed)
  5041                           ; jumptable            260     6 (fixed)
  5042                           ;	Chosen strategy is simple_byte
  5043  077D  0852               	movf	??_get_date_data+1,w
  5044  077E  3A00               	xorlw	0	; case 0
  5045  077F  1903               	skipnz
  5046  0780  2F82               	goto	l2350
  5047  0781  2F78               	goto	l2082
  5048  0782                     l2350:
  5049                           
  5050                           ; Switch size 1, requested type "simple"
  5051                           ; Number of cases is 8, Range of values is 0 to 7
  5052                           ; switch strategies available:
  5053                           ; Name         Instructions Cycles
  5054                           ; direct_byte           23     7 (fixed)
  5055                           ; simple_byte           25    13 (average)
  5056                           ; jumptable            260     6 (fixed)
  5057                           ;	Chosen strategy is simple_byte
  5058  0782  0851               	movf	??_get_date_data,w
  5059  0783  3A00               	xorlw	0	; case 0
  5060  0784  1903               	skipnz
  5061  0785  2EB0               	goto	l2066
  5062  0786  3A01               	xorlw	1	; case 1
  5063  0787  1903               	skipnz
  5064  0788  2ECE               	goto	l2068
  5065  0789  3A03               	xorlw	3	; case 2
  5066  078A  1903               	skipnz
  5067  078B  2EEC               	goto	l2070
  5068  078C  3A01               	xorlw	1	; case 3
  5069  078D  1903               	skipnz
  5070  078E  2EF5               	goto	l2072
  5071  078F  3A07               	xorlw	7	; case 4
  5072  0790  1903               	skipnz
  5073  0791  2EFE               	goto	l2074
  5074  0792  3A01               	xorlw	1	; case 5
  5075  0793  1903               	skipnz
  5076  0794  2F1D               	goto	l2076
  5077  0795  3A03               	xorlw	3	; case 6
  5078  0796  1903               	skipnz
  5079  0797  2F3B               	goto	l2078
  5080  0798  3A01               	xorlw	1	; case 7
  5081  0799  1903               	skipnz
  5082  079A  2F5A               	goto	l2080
  5083  079B  2F78               	goto	l2082
  5084  079C                     l2088:
  5085                           
  5086                           ;segment_display.c: 152:   return value;
  5087  079C  0854               	movf	get_date_data@value,w
  5088  079D                     l152:
  5089  079D  0008               	return
  5090  079E                     __end_of_get_date_data:
  5091                           
  5092                           	psect	text17
  5093  0D5B                     __ptext17:	
  5094 ;; *************** function ___lwmod *****************
  5095 ;; Defined at:
  5096 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwmod.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;  divisor         2    4[BANK0 ] unsigned int 
  5099 ;;  dividend        2    6[BANK0 ] unsigned int 
  5100 ;; Auto vars:     Size  Location     Type
  5101 ;;  counter         1    9[BANK0 ] unsigned char 
  5102 ;; Return value:  Size  Location     Type
  5103 ;;                  2    4[BANK0 ] unsigned int 
  5104 ;; Registers used:
  5105 ;;		wreg, status,2, status,0
  5106 ;; Tracked objects:
  5107 ;;		On entry : 0/0
  5108 ;;		On exit  : 0/0
  5109 ;;		Unchanged: 0/0
  5110 ;; Data sizes:     COMMON   BANK0   BANK1
  5111 ;;      Params:         0       4       0
  5112 ;;      Locals:         0       1       0
  5113 ;;      Temps:          0       1       0
  5114 ;;      Totals:         0       6       0
  5115 ;;Total ram usage:        6 bytes
  5116 ;; Hardware stack levels used: 1
  5117 ;; Hardware stack levels required when called: 1
  5118 ;; This function calls:
  5119 ;;		Nothing
  5120 ;; This function is called by:
  5121 ;;		_get_date_data
  5122 ;;		_get_time_data
  5123 ;;		_get_time_data_seconds
  5124 ;;		_make_time
  5125 ;; This function uses a non-reentrant model
  5126 ;;
  5127                           
  5128                           
  5129                           ;psect for function ___lwmod
  5130  0D5B                     ___lwmod:
  5131  0D5B                     l1676:	
  5132                           ;incstack = 0
  5133                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5134                           
  5135  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  5136  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  5137  0D5D  0848               	movf	___lwmod@divisor,w
  5138  0D5E  0449               	iorwf	___lwmod@divisor+1,w
  5139  0D5F  1903               	btfsc	3,2
  5140  0D60  2D62               	goto	u1051
  5141  0D61  2D63               	goto	u1050
  5142  0D62                     u1051:
  5143  0D62  2D92               	goto	l1694
  5144  0D63                     u1050:
  5145  0D63                     l1678:
  5146  0D63  01CD               	clrf	___lwmod@counter
  5147  0D64  0ACD               	incf	___lwmod@counter,f
  5148  0D65  2D71               	goto	l1684
  5149  0D66                     l1680:
  5150  0D66  3001               	movlw	1
  5151  0D67                     u1065:
  5152  0D67  1003               	clrc
  5153  0D68  0DC8               	rlf	___lwmod@divisor,f
  5154  0D69  0DC9               	rlf	___lwmod@divisor+1,f
  5155  0D6A  3EFF               	addlw	-1
  5156  0D6B  1D03               	skipz
  5157  0D6C  2D67               	goto	u1065
  5158  0D6D                     l1682:
  5159  0D6D  3001               	movlw	1
  5160  0D6E  00CC               	movwf	??___lwmod
  5161  0D6F  084C               	movf	??___lwmod,w
  5162  0D70  07CD               	addwf	___lwmod@counter,f
  5163  0D71                     l1684:
  5164  0D71  1FC9               	btfss	___lwmod@divisor+1,7
  5165  0D72  2D74               	goto	u1071
  5166  0D73  2D75               	goto	u1070
  5167  0D74                     u1071:
  5168  0D74  2D66               	goto	l1680
  5169  0D75                     u1070:
  5170  0D75                     l1686:
  5171  0D75  0849               	movf	___lwmod@divisor+1,w
  5172  0D76  024B               	subwf	___lwmod@dividend+1,w
  5173  0D77  1D03               	skipz
  5174  0D78  2D7B               	goto	u1085
  5175  0D79  0848               	movf	___lwmod@divisor,w
  5176  0D7A  024A               	subwf	___lwmod@dividend,w
  5177  0D7B                     u1085:
  5178  0D7B  1C03               	skipc
  5179  0D7C  2D7E               	goto	u1081
  5180  0D7D  2D7F               	goto	u1080
  5181  0D7E                     u1081:
  5182  0D7E  2D85               	goto	l1690
  5183  0D7F                     u1080:
  5184  0D7F                     l1688:
  5185  0D7F  0848               	movf	___lwmod@divisor,w
  5186  0D80  02CA               	subwf	___lwmod@dividend,f
  5187  0D81  0849               	movf	___lwmod@divisor+1,w
  5188  0D82  1C03               	skipc
  5189  0D83  03CB               	decf	___lwmod@dividend+1,f
  5190  0D84  02CB               	subwf	___lwmod@dividend+1,f
  5191  0D85                     l1690:
  5192  0D85  3001               	movlw	1
  5193  0D86                     u1095:
  5194  0D86  1003               	clrc
  5195  0D87  0CC9               	rrf	___lwmod@divisor+1,f
  5196  0D88  0CC8               	rrf	___lwmod@divisor,f
  5197  0D89  3EFF               	addlw	-1
  5198  0D8A  1D03               	skipz
  5199  0D8B  2D86               	goto	u1095
  5200  0D8C                     l1692:
  5201  0D8C  3001               	movlw	1
  5202  0D8D  02CD               	subwf	___lwmod@counter,f
  5203  0D8E  1D03               	btfss	3,2
  5204  0D8F  2D91               	goto	u1101
  5205  0D90  2D92               	goto	u1100
  5206  0D91                     u1101:
  5207  0D91  2D75               	goto	l1686
  5208  0D92                     u1100:
  5209  0D92                     l1694:
  5210  0D92  084B               	movf	___lwmod@dividend+1,w
  5211  0D93  00C9               	movwf	?___lwmod+1
  5212  0D94  084A               	movf	___lwmod@dividend,w
  5213  0D95  00C8               	movwf	?___lwmod
  5214  0D96                     l626:
  5215  0D96  0008               	return
  5216  0D97                     __end_of___lwmod:
  5217                           
  5218                           	psect	text18
  5219  0D97                     __ptext18:	
  5220 ;; *************** function ___lwdiv *****************
  5221 ;; Defined at:
  5222 ;;		line 5 in file "D:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\lwdiv.c"
  5223 ;; Parameters:    Size  Location     Type
  5224 ;;  divisor         2    4[BANK0 ] unsigned int 
  5225 ;;  dividend        2    6[BANK0 ] unsigned int 
  5226 ;; Auto vars:     Size  Location     Type
  5227 ;;  quotient        2    9[BANK0 ] unsigned int 
  5228 ;;  counter         1   11[BANK0 ] unsigned char 
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  2    4[BANK0 ] unsigned int 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1
  5238 ;;      Params:         0       4       0
  5239 ;;      Locals:         0       3       0
  5240 ;;      Temps:          0       1       0
  5241 ;;      Totals:         0       8       0
  5242 ;;Total ram usage:        8 bytes
  5243 ;; Hardware stack levels used: 1
  5244 ;; Hardware stack levels required when called: 1
  5245 ;; This function calls:
  5246 ;;		Nothing
  5247 ;; This function is called by:
  5248 ;;		_get_date_data
  5249 ;;		_get_time_data
  5250 ;;		_get_time_data_seconds
  5251 ;;		_make_time
  5252 ;; This function uses a non-reentrant model
  5253 ;;
  5254                           
  5255                           
  5256                           ;psect for function ___lwdiv
  5257  0D97                     ___lwdiv:
  5258  0D97                     l1650:	
  5259                           ;incstack = 0
  5260                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5261                           
  5262  0D97  1283               	bcf	3,5	;RP0=0, select bank0
  5263  0D98  1303               	bcf	3,6	;RP1=0, select bank0
  5264  0D99  01CD               	clrf	___lwdiv@quotient
  5265  0D9A  01CE               	clrf	___lwdiv@quotient+1
  5266  0D9B                     l1652:
  5267  0D9B  0848               	movf	___lwdiv@divisor,w
  5268  0D9C  0449               	iorwf	___lwdiv@divisor+1,w
  5269  0D9D  1903               	btfsc	3,2
  5270  0D9E  2DA0               	goto	u981
  5271  0D9F  2DA1               	goto	u980
  5272  0DA0                     u981:
  5273  0DA0  2DD8               	goto	l1672
  5274  0DA1                     u980:
  5275  0DA1                     l1654:
  5276  0DA1  01CF               	clrf	___lwdiv@counter
  5277  0DA2  0ACF               	incf	___lwdiv@counter,f
  5278  0DA3  2DAF               	goto	l1660
  5279  0DA4                     l1656:
  5280  0DA4  3001               	movlw	1
  5281  0DA5                     u995:
  5282  0DA5  1003               	clrc
  5283  0DA6  0DC8               	rlf	___lwdiv@divisor,f
  5284  0DA7  0DC9               	rlf	___lwdiv@divisor+1,f
  5285  0DA8  3EFF               	addlw	-1
  5286  0DA9  1D03               	skipz
  5287  0DAA  2DA5               	goto	u995
  5288  0DAB                     l1658:
  5289  0DAB  3001               	movlw	1
  5290  0DAC  00CC               	movwf	??___lwdiv
  5291  0DAD  084C               	movf	??___lwdiv,w
  5292  0DAE  07CF               	addwf	___lwdiv@counter,f
  5293  0DAF                     l1660:
  5294  0DAF  1FC9               	btfss	___lwdiv@divisor+1,7
  5295  0DB0  2DB2               	goto	u1001
  5296  0DB1  2DB3               	goto	u1000
  5297  0DB2                     u1001:
  5298  0DB2  2DA4               	goto	l1656
  5299  0DB3                     u1000:
  5300  0DB3                     l1662:
  5301  0DB3  3001               	movlw	1
  5302  0DB4                     u1015:
  5303  0DB4  1003               	clrc
  5304  0DB5  0DCD               	rlf	___lwdiv@quotient,f
  5305  0DB6  0DCE               	rlf	___lwdiv@quotient+1,f
  5306  0DB7  3EFF               	addlw	-1
  5307  0DB8  1D03               	skipz
  5308  0DB9  2DB4               	goto	u1015
  5309  0DBA  0849               	movf	___lwdiv@divisor+1,w
  5310  0DBB  024B               	subwf	___lwdiv@dividend+1,w
  5311  0DBC  1D03               	skipz
  5312  0DBD  2DC0               	goto	u1025
  5313  0DBE  0848               	movf	___lwdiv@divisor,w
  5314  0DBF  024A               	subwf	___lwdiv@dividend,w
  5315  0DC0                     u1025:
  5316  0DC0  1C03               	skipc
  5317  0DC1  2DC3               	goto	u1021
  5318  0DC2  2DC4               	goto	u1020
  5319  0DC3                     u1021:
  5320  0DC3  2DCB               	goto	l1668
  5321  0DC4                     u1020:
  5322  0DC4                     l1664:
  5323  0DC4  0848               	movf	___lwdiv@divisor,w
  5324  0DC5  02CA               	subwf	___lwdiv@dividend,f
  5325  0DC6  0849               	movf	___lwdiv@divisor+1,w
  5326  0DC7  1C03               	skipc
  5327  0DC8  03CB               	decf	___lwdiv@dividend+1,f
  5328  0DC9  02CB               	subwf	___lwdiv@dividend+1,f
  5329  0DCA                     l1666:
  5330  0DCA  144D               	bsf	___lwdiv@quotient,0
  5331  0DCB                     l1668:
  5332  0DCB  3001               	movlw	1
  5333  0DCC                     u1035:
  5334  0DCC  1003               	clrc
  5335  0DCD  0CC9               	rrf	___lwdiv@divisor+1,f
  5336  0DCE  0CC8               	rrf	___lwdiv@divisor,f
  5337  0DCF  3EFF               	addlw	-1
  5338  0DD0  1D03               	skipz
  5339  0DD1  2DCC               	goto	u1035
  5340  0DD2                     l1670:
  5341  0DD2  3001               	movlw	1
  5342  0DD3  02CF               	subwf	___lwdiv@counter,f
  5343  0DD4  1D03               	btfss	3,2
  5344  0DD5  2DD7               	goto	u1041
  5345  0DD6  2DD8               	goto	u1040
  5346  0DD7                     u1041:
  5347  0DD7  2DB3               	goto	l1662
  5348  0DD8                     u1040:
  5349  0DD8                     l1672:
  5350  0DD8  084E               	movf	___lwdiv@quotient+1,w
  5351  0DD9  00C9               	movwf	?___lwdiv+1
  5352  0DDA  084D               	movf	___lwdiv@quotient,w
  5353  0DDB  00C8               	movwf	?___lwdiv
  5354  0DDC                     l616:
  5355  0DDC  0008               	return
  5356  0DDD                     __end_of___lwdiv:
  5357                           
  5358                           	psect	text19
  5359  0E29                     __ptext19:	
  5360 ;; *************** function _isr *****************
  5361 ;; Defined at:
  5362 ;;		line 75 in file "main.c"
  5363 ;; Parameters:    Size  Location     Type
  5364 ;;		None
  5365 ;; Auto vars:     Size  Location     Type
  5366 ;;		None
  5367 ;; Return value:  Size  Location     Type
  5368 ;;                  1    wreg      void 
  5369 ;; Registers used:
  5370 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5371 ;; Tracked objects:
  5372 ;;		On entry : 0/0
  5373 ;;		On exit  : 0/0
  5374 ;;		Unchanged: 0/0
  5375 ;; Data sizes:     COMMON   BANK0   BANK1
  5376 ;;      Params:         0       0       0
  5377 ;;      Locals:         0       0       0
  5378 ;;      Temps:          0       4       0
  5379 ;;      Totals:         0       4       0
  5380 ;;Total ram usage:        4 bytes
  5381 ;; Hardware stack levels used: 1
  5382 ;; This function calls:
  5383 ;;		Nothing
  5384 ;; This function is called by:
  5385 ;;		Interrupt level 1
  5386 ;; This function uses a non-reentrant model
  5387 ;;
  5388                           
  5389                           
  5390                           ;psect for function _isr
  5391  0E29                     _isr:
  5392  0E29                     i1l2114:
  5393                           
  5394                           ;main.c: 77:   if (TMR1IF)
  5395  0E29  1C0C               	btfss	12,0	;volatile
  5396  0E2A  2E2C               	goto	u161_21
  5397  0E2B  2E2D               	goto	u161_20
  5398  0E2C                     u161_21:
  5399  0E2C  2E3E               	goto	i1l2120
  5400  0E2D                     u161_20:
  5401  0E2D                     i1l2116:
  5402                           
  5403                           ;main.c: 78:   {;main.c: 79:     TMR1IF = 0;
  5404  0E2D  100C               	bcf	12,0	;volatile
  5405  0E2E                     i1l2118:
  5406                           
  5407                           ;main.c: 80:     TMR1H = 0xF6;
  5408  0E2E  30F6               	movlw	246
  5409  0E2F  008F               	movwf	15	;volatile
  5410                           
  5411                           ;main.c: 81:     TMR1L = 0x3C;
  5412  0E30  303C               	movlw	60
  5413  0E31  008E               	movwf	14	;volatile
  5414                           
  5415                           ;main.c: 82:     ms_counter++;
  5416  0E32  3001               	movlw	1
  5417  0E33  07B8               	addwf	_ms_counter,f	;volatile
  5418  0E34  1803               	skipnc
  5419  0E35  0AB9               	incf	_ms_counter+1,f	;volatile
  5420  0E36  3000               	movlw	0
  5421  0E37  07B9               	addwf	_ms_counter+1,f	;volatile
  5422                           
  5423                           ;main.c: 83:     milli_seconds++;
  5424  0E38  3001               	movlw	1
  5425  0E39  07B2               	addwf	_milli_seconds,f	;volatile
  5426  0E3A  1803               	skipnc
  5427  0E3B  0AB3               	incf	_milli_seconds+1,f	;volatile
  5428  0E3C  3000               	movlw	0
  5429  0E3D  07B3               	addwf	_milli_seconds+1,f	;volatile
  5430  0E3E                     i1l2120:
  5431                           
  5432                           ;main.c: 85:   if(RCIF && RCIE)
  5433  0E3E  1E8C               	btfss	12,5	;volatile
  5434  0E3F  2E41               	goto	u162_21
  5435  0E40  2E42               	goto	u162_20
  5436  0E41                     u162_21:
  5437  0E41  2E42               	goto	i1l92
  5438  0E42                     u162_20:
  5439  0E42                     i1l2122:
  5440  0E42                     i1l92:	
  5441                           ;main.c: 86:   {;main.c: 88:   }
  5442                           
  5443                           
  5444                           ;main.c: 90:   if(TXIF && TXIE)
  5445  0E42  1E0C               	btfss	12,4	;volatile
  5446  0E43  2E45               	goto	u163_21
  5447  0E44  2E46               	goto	u163_20
  5448  0E45                     u163_21:
  5449  0E45  2E68               	goto	i1l93
  5450  0E46                     u163_20:
  5451  0E46                     i1l2124:
  5452  0E46  1683               	bsf	3,5	;RP0=1, select bank1
  5453  0E47  1303               	bcf	3,6	;RP1=0, select bank1
  5454  0E48  1E0C               	btfss	12,4	;volatile
  5455  0E49  2E4B               	goto	u164_21
  5456  0E4A  2E4C               	goto	u164_20
  5457  0E4B                     u164_21:
  5458  0E4B  2E68               	goto	i1l93
  5459  0E4C                     u164_20:
  5460  0E4C                     i1l2126:
  5461                           
  5462                           ;main.c: 91:   {;main.c: 92:     TXREG = buffer[out++];
  5463  0E4C  1283               	bcf	3,5	;RP0=0, select bank0
  5464  0E4D  1303               	bcf	3,6	;RP1=0, select bank0
  5465  0E4E  0840               	movf	_out,w
  5466  0E4F  3EA0               	addlw	(low (_buffer| 0))& (0+255)
  5467  0E50  0084               	movwf	4
  5468  0E51  1383               	bcf	3,7	;select IRP bank1
  5469  0E52  0800               	movf	0,w
  5470  0E53  0099               	movwf	25	;volatile
  5471  0E54                     i1l2128:
  5472  0E54  3001               	movlw	1
  5473  0E55  00C4               	movwf	??_isr
  5474  0E56  0844               	movf	??_isr,w
  5475  0E57  07C0               	addwf	_out,f	;volatile
  5476  0E58                     i1l2130:
  5477                           
  5478                           ;main.c: 93:     if(out == sizeof(buffer))
  5479  0E58  3028               	movlw	40
  5480  0E59  0640               	xorwf	_out,w	;volatile
  5481  0E5A  1D03               	btfss	3,2
  5482  0E5B  2E5D               	goto	u165_21
  5483  0E5C  2E5E               	goto	u165_20
  5484  0E5D                     u165_21:
  5485  0E5D  2E5F               	goto	i1l2134
  5486  0E5E                     u165_20:
  5487  0E5E                     i1l2132:
  5488                           
  5489                           ;main.c: 94:     {;main.c: 95:       out = 0;
  5490  0E5E  01C0               	clrf	_out	;volatile
  5491  0E5F                     i1l2134:
  5492                           
  5493                           ;main.c: 97:     if(out == in)
  5494  0E5F  0840               	movf	_out,w	;volatile
  5495  0E60  0641               	xorwf	_in,w	;volatile
  5496  0E61  1D03               	skipz
  5497  0E62  2E64               	goto	u166_21
  5498  0E63  2E65               	goto	u166_20
  5499  0E64                     u166_21:
  5500  0E64  2E68               	goto	i1l93
  5501  0E65                     u166_20:
  5502  0E65                     i1l2136:
  5503                           
  5504                           ;main.c: 98:     {;main.c: 99:       TXIE = 0;
  5505  0E65  1683               	bsf	3,5	;RP0=1, select bank1
  5506  0E66  1303               	bcf	3,6	;RP1=0, select bank1
  5507  0E67  120C               	bcf	12,4	;volatile
  5508  0E68                     i1l93:	
  5509                           ;main.c: 101:   }
  5510                           
  5511                           
  5512                           ;main.c: 103:   if(INTF)
  5513  0E68  1C8B               	btfss	11,1	;volatile
  5514  0E69  2E6B               	goto	u167_21
  5515  0E6A  2E6C               	goto	u167_20
  5516  0E6B                     u167_21:
  5517  0E6B  2E84               	goto	i1l99
  5518  0E6C                     u167_20:
  5519  0E6C                     i1l2138:
  5520                           
  5521                           ;main.c: 104:   {;main.c: 105:     INTF = 0;
  5522  0E6C  108B               	bcf	11,1	;volatile
  5523                           
  5524                           ;main.c: 106:     if(INTEDG)
  5525  0E6D  1683               	bsf	3,5	;RP0=1, select bank1
  5526  0E6E  1303               	bcf	3,6	;RP1=0, select bank1
  5527  0E6F  1F01               	btfss	1,6	;volatile
  5528  0E70  2E72               	goto	u168_21
  5529  0E71  2E73               	goto	u168_20
  5530  0E72                     u168_21:
  5531  0E72  2E7B               	goto	i1l97
  5532  0E73                     u168_20:
  5533  0E73                     i1l2140:
  5534                           
  5535                           ;main.c: 107:     {;main.c: 108:       INTEDG = 0;
  5536  0E73  1301               	bcf	1,6	;volatile
  5537  0E74                     i1l2142:
  5538                           
  5539                           ;main.c: 109:       pause = ms_counter;
  5540  0E74  1283               	bcf	3,5	;RP0=0, select bank0
  5541  0E75  1303               	bcf	3,6	;RP1=0, select bank0
  5542  0E76  0839               	movf	_ms_counter+1,w	;volatile
  5543  0E77  00B5               	movwf	_pause+1	;volatile
  5544  0E78  0838               	movf	_ms_counter,w	;volatile
  5545  0E79  00B4               	movwf	_pause	;volatile
  5546                           
  5547                           ;main.c: 110:     }
  5548  0E7A  2E82               	goto	i1l2146
  5549  0E7B                     i1l97:	
  5550                           ;main.c: 111:     else
  5551                           
  5552                           
  5553                           ;main.c: 112:     {;main.c: 113:       INTEDG = 1;
  5554  0E7B  1701               	bsf	1,6	;volatile
  5555  0E7C                     i1l2144:
  5556                           
  5557                           ;main.c: 114:       new_value = ms_counter;
  5558  0E7C  1283               	bcf	3,5	;RP0=0, select bank0
  5559  0E7D  1303               	bcf	3,6	;RP1=0, select bank0
  5560  0E7E  0839               	movf	_ms_counter+1,w	;volatile
  5561  0E7F  00B7               	movwf	_new_value+1	;volatile
  5562  0E80  0838               	movf	_ms_counter,w	;volatile
  5563  0E81  00B6               	movwf	_new_value	;volatile
  5564  0E82                     i1l2146:
  5565                           
  5566                           ;main.c: 116:     ms_counter = 0;
  5567  0E82  01B8               	clrf	_ms_counter	;volatile
  5568  0E83  01B9               	clrf	_ms_counter+1	;volatile
  5569  0E84                     i1l99:
  5570  0E84  1283               	bcf	3,5	;RP0=0, select bank0
  5571  0E85  0847               	movf	??_isr+3,w
  5572  0E86  008A               	movwf	10
  5573  0E87  0846               	movf	??_isr+2,w
  5574  0E88  0084               	movwf	4
  5575  0E89  0E45               	swapf	??_isr+1,w
  5576  0E8A  0083               	movwf	3
  5577  0E8B  0EFE               	swapf	btemp,f
  5578  0E8C  0E7E               	swapf	btemp,w
  5579  0E8D  0009               	retfie
  5580  0E8E                     __end_of_isr:
  5581  007E                     btemp	set	126	;btemp
  5582  007E                     wtemp0	set	126
  5583                           
  5584                           	psect	intentry
  5585  0004                     __pintentry:	
  5586                           ;incstack = 0
  5587                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  5588                           
  5589  0004                     interrupt_function:
  5590  007E                     saved_w	set	btemp
  5591  0004  00FE               	movwf	btemp
  5592  0005  0E03               	swapf	3,w
  5593  0006  1283               	bcf	3,5	;RP0=0, select bank0
  5594  0007  1303               	bcf	3,6	;RP1=0, select bank0
  5595  0008  00C5               	movwf	??_isr+1
  5596  0009  0804               	movf	4,w
  5597  000A  00C6               	movwf	??_isr+2
  5598  000B  080A               	movf	10,w
  5599  000C  00C7               	movwf	??_isr+3
  5600  000D  158A  2E29         	ljmp	_isr
  5601                           
  5602                           	psect	config
  5603                           
  5604                           ;Config register CONFIG @ 0x2007
  5605                           ;	Oscillator Selection bits
  5606                           ;	FOSC = HS, HS oscillator
  5607                           ;	Watchdog Timer Enable bit
  5608                           ;	WDTE = OFF, WDT disabled
  5609                           ;	Power-up Timer Enable bit
  5610                           ;	PWRTE = OFF, PWRT disabled
  5611                           ;	FLASH Program Memory Code Protection bit
  5612                           ;	CP = OFF, Code protection off
  5613                           ;	Brown-out Reset Enable bit
  5614                           ;	BOREN = ON, BOR enabled
  5615  2007                     	org	8199
  5616  2007  3FFA               	dw	16378

Data Sizes:
    Strings     41
    Constant    95
    Data        12
    BSS         75
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            93     22      69
    BANK1            94      0      40

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(1) Largest target is 40
		 -> buffer(BANK1[40]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 40
		 -> buffer(BANK1[40]), 

    strcpy@from	PTR const unsigned char  size(1) Largest target is 34
		 -> STR_2(CODE[7]), STR_1(CODE[34]), 

    strcpy@to	PTR unsigned char  size(1) Largest target is 40
		 -> buffer(BANK1[40]), 

    strcpy@cp	PTR unsigned char  size(1) Largest target is 40
		 -> buffer(BANK1[40]), 

    get_time@p_time	PTR struct . size(1) Largest target is 6
		 -> current_time(BANK0[6]), 

    make_time@p_time	PTR struct . size(1) Largest target is 6
		 -> current_time(BANK0[6]), 

    make_time@buffer	PTR unsigned char  size(1) Largest target is 40
		 -> buffer(BANK1[40]), 

    get_time_data@p_time	PTR struct . size(1) Largest target is 6
		 -> current_time(BANK0[6]), 

    get_day_data@p_time	PTR struct . size(1) Largest target is 6
		 -> current_time(BANK0[6]), 

    get_date_data@p_time	PTR struct . size(1) Largest target is 6
		 -> current_time(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(1) Largest target is 40
		 -> buffer(BANK1[40]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_make_time
    _new_bit->___bmul
    _make_time->___lwdiv
    _get_time_data_seconds->___lwdiv
    _get_time_data->___lwdiv
    _get_day_data->___bmul
    _get_date_data->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   23172
                                             19 BANK0      3     3      0
                      _get_date_data
                       _get_day_data
                           _get_time
                      _get_time_data
              _get_time_data_seconds
                               _init
                          _make_time
                        _minute_gone
                            _new_bit
                             _strcpy
                             _strlen
 ---------------------------------------------------------------------------------
 (1) _strlen                                               5     3      2     123
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _new_bit                                              4     3      1    2584
                                              8 BANK0      4     3      1
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) _minute_gone                                          3     3      0     156
                                              4 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _make_time                                            7     6      1    6147
                                             12 BANK0      7     6      1
                             ___bmul
                            ___lwdiv
                            ___lwmod
                             _strcpy
 ---------------------------------------------------------------------------------
 (2) _strcpy                                               4     3      1     293
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
                          _gpio_init
                       _init_timer_1
                           _spi_init
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _spi_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_timer_1                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _gpio_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_time_data_seconds                                6     5      1    3952
                                             12 BANK0      6     5      1
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _get_time_data                                        6     5      1    4370
                                             12 BANK0      6     5      1
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (1) _get_time                                             2     2      0     165
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_day_data                                         9     7      2    1374
                                              8 BANK0      9     7      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     804
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (1) _get_date_data                                        6     5      1    3982
                                             12 BANK0      6     5      1
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4    1831
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4    1834
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _get_date_data
     ___lwdiv
     ___lwmod
   _get_day_data
     ___bmul
   _get_time
   _get_time_data
     ___lwdiv
     ___lwmod
   _get_time_data_seconds
     ___lwdiv
     ___lwmod
   _init
     _gpio_init
     _init_timer_1
     _spi_init
     _uart_init
   _make_time
     ___bmul
     ___lwdiv
     ___lwmod
     _strcpy
   _minute_gone
   _new_bit
     ___bmul
   _strcpy
   _strlen

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               5E      0      28       7       42.6%
BITBANK1            5E      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               5D     16      45       5       74.2%
BITBANK0            5D      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      6D       8        0.0%
ABS                  0      0      6D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Jun 01 20:20:47 2021

      __end_of_time_segment_coding 085B                                  pc 0002  
                   ___bmul@product 004A                                 _in 0041  
        get_time_data_seconds@data 0054                                 fsr 0004  
                              l110 05BB                                l122 06A3  
                              l117 05DB                                l152 079D  
                              l250 0D5A                                l331 0C98  
                              l340 0CA3                                l260 0F05  
                              l173 0FFF                                l181 07E9  
                              l158 0E28                                l334 0CC9  
                              l247 02D0                                l328 07FE  
                              l337 0CAE                                l265 0F21  
                              l370 0CF1                                l178 07E8  
                              l188 04F7                                l269 0F3F  
                              l616 0DDC                                l626 0D96  
                              l804 0D0C                                l798 0D2D  
                              _RB1 0031                                _RB2 0032  
                              _RB3 0033                                _RB4 0034  
                              _RB5 0035                     ?_get_time_data 0050  
                              u950 0D2D                                u951 0D2C  
                              u960 0CE3                                u961 0CE2  
                              u970 0CF0                                u971 0CEF  
                              u980 0DA1                                u981 0DA0  
                              u995 0DA5                  get_time_data@data 0054  
                   _parity_minutes 003C                                _isr 0E29  
                              fsr0 0004                                _out 0040  
                              indf 0000                     ??_get_day_data 004E  
                             l2000 0254                               l2010 0F44  
                             l2100 0DE6                               l2020 0F77  
                             l2102 0DEF                               l2110 0E27  
                             l2030 0FCB                               l2022 0F80  
                             l2014 0F4A                               l2104 0DF8  
                             l2024 0F9D                               l2016 0F53  
                             l2008 0F43                               l2200 0570  
                             l2106 0DFE                               l2026 0FA6  
                             l2018 0F5B                               l2034 0FE8  
                             l2050 07AE                               l2210 0589  
                             l2202 0576                               l2060 06A9  
                             l2108 0E04                               l2028 0FC2  
                             l2036 0FFE                               l2052 07C8  
                             l2044 07A1                               l2220 05A9  
                             l2212 0592                               l2204 057A  
                             l2070 06EC                               l2062 06AA  
                             l2054 07CE                               l2046 07A2  
                             l2230 05C1                               l2222 05B2  
                             l2214 0594                               l2206 057D  
                             l2150 04FB                               l2080 075A  
                             l2072 06F5                               l2048 07A8  
                             l2056 07E8                               l2240 05D8  
                             l2232 05C6                               l2224 05B4  
                             l2216 0599                               l2208 0580  
                             l2160 0514                               l2152 04FE  
                             l2082 0778                               l2074 06FE  
                             l2066 06B0                               l1610 0CBB  
                             l2250 05EC                               l2242 05DB  
                             l2234 05C9                               l2218 05A0  
                             l2170 052D                               l2162 051A  
                             l2154 0501                               l2076 071D  
                             l2068 06CE                               l1620 0CC7  
                             l1612 0CBF                               l1700 07F6  
                             l1604 0D10                               l2260 065C  
                             l2252 05F2                               l2244 05E1  
                             l2236 05CF                               l2228 05BF  
                             l2172 0531                               l2180 0539  
                             l2164 051E                               l2156 0502  
                             l2148 04F8                               l2350 0782  
                             l2078 073B                               l2086 077A  
                             l1622 0CC8                               l1614 0CC0  
                             l1630 0CA2                               l1710 07FD  
                             l1702 07F7                               l1606 0D15  
                             l2270 067A                               l2262 0660  
                             l2254 063C                               l2246 05E5  
                             l2238 05D2                               l2190 054F  
                             l2182 0542                               l2174 0534  
                             l2166 0521                               l2158 050A  
                             l2088 079C                               l1640 0CE3  
                             l2096 0DE0                               l1616 0CC2  
                             l1632 0C8F                               l1624 0CA4  
                             l1704 07FA                               l1608 0D1D  
                             l1800 02FC                               l1712 0CF5  
                             l2272 0688                               l2264 0666  
                             l2256 0642                               l2248 05EB  
                             l2192 0553                               l2184 0544  
                             l2176 0536                               l2168 052B  
                             l1650 0D97                               l1642 0CE7  
                             l2098 0DE1                               l1618 0CC4  
                             l1634 0C93                               l1626 0C99  
                             l1706 07FB                               l1810 033E  
                             l1802 0300                               l1730 0EAB  
                             l1722 0E91                               l2346 025C  
                             l1714 0CFA                               l2274 06A1  
                             l2258 064F                               l2266 0668  
                             l2194 0557                               l2186 0548  
                             l2178 0537                               l1660 0DAF  
                             l1652 0D9B                               l1644 0CE9  
                             l1636 0CDE                               l2348 0FF0  
                             l1628 0CA1                               l1708 07FC  
                             l1820 038B                               l1812 0347  
                             l1804 031B                               l1740 0EC0  
                             l1732 0EAC                               l1724 0E96  
                             l1900 007D                               l1716 0CFE  
                             l2268 066D                               l2196 055C  
                             l2188 054E                               l1670 0DD2  
                             l1662 0DB3                               l1654 0DA1  
                             l1646 0CF0                               l1638 0CDF  
                             l1830 03BE                               l1822 038F  
                             l1814 034B                               l1806 031F  
                             l1750 0ED6                               l1742 0EC6  
                             l1734 0EB0                               l1726 0E9C  
                             l1910 00A3                               l1902 008D  
                             l1718 0D06                               l2198 056F  
                             l1664 0DC4                               l1656 0DA4  
                             l1672 0DD8                               l1680 0D66  
                             l1840 03F6                               l1832 03DC  
                             l1824 0398                               l1816 0369  
                             l1808 033A                               l1760 0EF5  
                             l1752 0EDB                               l1744 0EC7  
                             l1736 0EB5                               l1728 0EA1  
                             l1920 00E0                               l1912 00A8  
                             l1666 0DCA                               l1658 0DAB  
                             l1690 0D85                               l1682 0D6D  
                             l1850 0429                               l1842 03FA  
                             l1834 03E0                               l1826 039C  
                             l1818 036D                               l1770 0F10  
                             l1762 0EF9                               l1754 0EE0  
                             l1746 0ECB                               l1738 0EBB  
                             l1930 010A                               l1922 00ED  
                             l1914 00B1                               l1906 009B  
                             l1668 0DCB                               l1692 0D8C  
                             l1684 0D71                               l1676 0D5B  
                             l1860 0475                               l1852 0447  
                             l1844 0403                               l1836 03E9  
                             l1828 03BA                               l1780 0F2C  
                             l1772 0F15                               l1764 0EFF  
                             l1756 0EE9                               l1748 0ED0  
                             l1940 0147                               l1932 010F  
                             l1924 00F2                               l1916 00BC  
                             l1908 009F                               l1686 0D75  
                             l1678 0D63                               l1694 0D92  
                             l1790 0D40                               l1870 04A7  
                             l1862 0479                               l1854 044B  
                             l1846 0407                               l1838 03ED  
                             l1782 0F30                               l1774 0F1B  
                             l1766 0F01                               l1758 0EEF  
                             l1950 016E                               l1942 0154  
                             l1934 0118                               l1926 0102  
                             l1918 00CE                               l1688 0D7F  
                             l1792 0D46                               l1880 04F2  
                             l1872 04C4                               l1864 0496  
                             l1856 0454                               l1848 0425  
                             l1784 0F35                               l1776 0F1D  
                             l1768 0F0A                               l1960 019B  
                             l1952 0179                               l1944 0159  
                             l1936 0123                               l1928 0106  
                             l1698 07EA                               l1882 04F6  
                             l1874 04C8                               l1866 049A  
                             l1858 0458                               l1794 02D4  
                             l1786 0F3B                               l1778 0F26  
                             l1962 01AD                               l1954 018B  
                             l1946 0169                               l1938 0135  
                             l1890 003C                               l1788 0D31  
                             l1876 04E5                               l1868 04A3  
                             l1796 02D8                               l1972 01D2  
                             l1964 01BF                               l1892 0047  
                             l1878 04E9                               l1798 02E0  
                             l1982 020F                               l1974 01DD  
                             l1958 0190                               l1894 0059  
                             l1886 0032                               l1992 023B  
                             l1984 021F                               l1976 01EF  
                             l1968 01CD                               l1896 006B  
                             l1888 0033                               l1994 023F  
                             l1978 0201                               l1898 0078  
                             l1996 0243                               l1988 022D  
                             ?_isr 0044                               STR_1 0865  
                             STR_2 0887                               u1000 0DB3  
                             u1001 0DB2                               u1020 0DC4  
                             u1100 0D92                               u1021 0DC3  
                             u1101 0D91                               u1110 0D06  
                             u1015 0DB4                               u1111 0D05  
                             u1040 0DD8                               u1200 0EE0  
                             u1120 0E96                               u1041 0DD7  
                             u1025 0DC0                               u1201 0EDF  
                             u1121 0E95                               u1050 0D63  
                             u1210 0EEF                               u1130 0E9C  
                             u1035 0DCC                               u1051 0D62  
                             u1211 0EEE                               u1131 0E9B  
                             u1300 0F3B                               u1220 0EF5  
                             u1140 0EAB                               u1301 0F3A  
                             u1221 0EF4                               u1141 0EAA  
                             u1070 0D75                               u1230 0EFF  
                             u1150 0EB5                               u1071 0D74  
                             u1231 0EFE                               u1151 0EB4  
                             u1080 0D7F                               u1240 0F0A  
                             u1160 0EBB                               u1081 0D7E  
                             u1065 0D67                               u1241 0F09  
                             u1161 0EBA                               u1250 0F10  
                             u1170 0EC6                               u1330 00A3  
                             u1251 0F0F                               u1171 0EC5  
                             u1331 00A2                               u1315 004A  
                             u1500 0FCB                               u1260 0F1B  
                             u1180 0ED0                               u1085 0D7B  
                             u1501 0FCA                               u1261 0F1A  
                             u1181 0ECF                               u1405 019E  
                             u1325 005C                               u1510 07A8  
                             u1270 0F26                               u1190 0ED6  
                             u1095 0D86                               u1511 07A7  
                             u1271 0F25                               u1191 0ED5  
                             u1415 01B0                               u1520 07AE  
                             u1280 0F2C                               u1440 0243  
                             u1360 010A                               u1521 07AD  
                             u1281 0F2B                               u1441 0242  
                             u1425 01E0                               u1361 0109  
                             u1345 00BF                               u1450 0F49  
                             u1530 07CE                               u1290 0F35  
                             u1451 0F48                               u1531 07CD  
                             u1291 0F34                               u1435 01F2  
                             u1355 00D1                               u1540 06AF  
                             u1460 0F53                               u1700 0542  
                             u1541 06AE                               u1605 0E07  
                             u1461 0F52                               u1701 0541  
                             u1550 0DE6                               u1470 0F5B  
                             u1710 054E                               u1551 0DE5  
                             u1471 0F5A                               u1375 0126  
                             u1711 054D                               u1560 0DEF  
                             u1480 0F80                               u1800 05D8  
                             u1720 055C                               u1561 0DEE  
                             u1481 0F7F                               u1385 0138  
                             u1801 05D7                               u1721 055B  
                             u1570 0DF8                               u1490 0FA6  
                             u1810 05EB                               u1730 0589  
                             u1571 0DF7                               u1491 0FA5  
                             u1395 017C                               u1811 05EA  
                             u1731 0588                               u1580 0DFE  
                             u1820 05F2                               u1740 0592  
                             u1581 0DFD                               u1821 05F1  
                             u1741 0591                               u1590 0E04  
                             u1830 0642                               u1750 05A9  
                             u1591 0E03                               u1831 0641  
                             u1751 05A8                               u1760 05B2  
                             u1761 05B1                               u1850 0666  
                             u1770 05BF                               u1690 052B  
                             u1851 0665                               u1771 05BE  
                             u1691 052A                               u1860 066D  
                             u1844 0648                               u1780 05C6  
                             u1861 066C                               u1845 0646  
                             u1781 05C5                               u1790 05CF  
                             u1791 05CE                               u1880 06A1  
                             u1881 06A0                               u1874 0673  
                             u1875 0671                               _PEIE 005E  
                             _INTE 005C                               _INTF 0059  
                             _RCIE 0465                               _RCIF 0065  
                             i1l92 0E42                               i1l93 0E68  
                             i1l97 0E7B                               i1l99 0E84  
                             _WCOL 00A7          get_time_data@time_segment 0050  
                             _TXIE 0464                               _TXIF 0064  
                             _main 04F8                               _init 07EA  
                             btemp 007E                               start 000F  
                ___bmul@multiplier 004B                    ??_get_date_data 0051  
     get_time_data_seconds@seconds 0055             minute_gone@bit_counter 004A  
                            ??_isr 0044                  new_bit@bit_number 004F  
                            ?_main 0044                              ?_init 0044  
                            _T1CON 0010                    __end_of___lwdiv 0DDD  
                  __end_of___lwmod 0D97                              _RCSTA 0018  
                            _TMR1H 000F                              _TMR1L 000E  
                            _SPBRG 0099                              _PORTA 0005  
                            _PORTB 0006                              _PORTC 0007  
                            _TRISA 0085                              _TRISB 0086  
                            _TRISC 0087                              _SSPIF 0063  
                            _TXREG 0019                              _TXSTA 0098  
             minute_gone@threshold 0049                       main@new_time 0059  
                            _pause 0034            ??_get_time_data_seconds 0051  
                  __end_of_new_bit 02D1                get_time_data@p_time 0055  
                            pclath 000A                 get_date_data@value 0054  
                            status 0003                              wtemp0 007E  
                  __initialization 0014                       __end_of_main 06A6  
                     __end_of_init 07FF                    ??_get_time_data 0051  
                           ??_main 0057                             ??_init 0000  
                     ?_minute_gone 0044                             _ADCON1 009F  
                           i1l2120 0E3E                             i1l2130 0E58  
                           i1l2122 0E42                             i1l2114 0E29  
                           i1l2140 0E73                             i1l2132 0E5E  
                           i1l2124 0E46                             i1l2116 0E2D  
                           i1l2142 0E74                             i1l2134 0E5F  
                           i1l2126 0E4C                             i1l2118 0E2E  
                           i1l2144 0E7C                             i1l2136 0E65  
                           i1l2128 0E54                             i1l2146 0E82  
                           i1l2138 0E6C                             _INTEDG 040E  
                           u161_20 0E2D                             u161_21 0E2C  
                           u162_20 0E42                             u162_21 0E41  
                           u163_20 0E46                             u163_21 0E45  
                           u164_20 0E4C                             u164_21 0E4B  
                           u165_20 0E5E                             u165_21 0E5D  
                           u166_20 0E65                             u166_21 0E64  
                           u167_20 0E6C                             u167_21 0E6B  
                           u168_20 0E73                             u168_21 0E72  
                           _TMR1IE 0460                             _TMR1IF 0060  
                           _SSPBUF 0013                             _SSPCON 0014  
                    ?_init_timer_1 0044                   __end_of_get_time 0D5B  
                           ___bmul 0CDB               __end_of_get_day_data 0E29  
                        ??___lwdiv 004C                          ??___lwmod 004C  
                           _buffer 00A0                   __end_of_max_days 0851  
                           _strcpy 0D0D                             _strlen 0CF2  
              get_date_data@p_time 0055                          ??_new_bit 004D  
                 __end_of_week_day 0845                             saved_w 007E  
               _day_segment_coding 0806                   __end_of_spi_init 0CA4  
          __end_of__initialization 002C                     ??_init_timer_1 0000  
              ___bmul@multiplicand 0048                     __pcstackCOMMON 0000  
                     __pidataBANK0 0CAF                       _date_segment 0043  
               __size_of_make_time 0227                         __pbssBANK0 0021  
                       __pbssBANK1 00A0                 __size_of_gpio_init 000F  
                 get_day_data@data 0053                         __pmaintext 04F8  
                 get_day_data@byte 004D                 get_day_data@p_time 0054  
                          ?___bmul 0048                         __pintentry 0004  
                   get_time@p_time 0049                            ?_strcpy 0048  
                          ?_strlen 0048                 __size_of_uart_init 000B  
             __size_of_minute_gone 00B2                            _SSPSTAT 0094  
                        ?_get_time 0044                         __stringtab 0800  
   __size_of_get_time_data_seconds 004C      __end_of_get_time_data_seconds 07EA  
            __size_of_get_day_data 004C                    __size_of___bmul 0017  
                        ?_spi_init 0044                            ___lwdiv 0D97  
                          ___lwmod 0D5B              __end_of_get_date_data 079E  
                __end_of_make_time 04F8                      _milli_seconds 0032  
                          __ptext1 0CF2                            __ptext2 002F  
                          __ptext3 0E8E                            __ptext4 02D1  
                          __ptext5 0D0D                            __ptext6 07EA  
                          __ptext7 0CA4                            __ptext8 0C99  
                          __ptext9 0C8F                  __end_of_gpio_init 0CCA  
                  __size_of_strcpy 0021                    __size_of_strlen 001B  
                     __size_of_isr 0065               __end_of_init_timer_1 0C99  
                          _new_bit 002F                            _seconds 003E  
                          _out_pos 003D                            clrloop0 0C88  
                       _ms_counter 0038                         ??_get_time 0048  
                     _get_day_data 0DDD               end_of_initialization 002C  
                __end_of_uart_init 0CAF                         ??_spi_init 0000  
                          strlen@s 004B                         _spi_buffer 0021  
            __end_of_get_time_data 1000  get_time_data_seconds@time_segment 0050  
              _date_segment_coding 085B                       new_bit@value 004C  
                   __end_of___bmul 0CF2                     __end_of_strcpy 0D2E  
                   __end_of_strlen 0D0D                start_initialization 0014  
                  make_time@buffer 0055                    make_time@p_time 0050  
                      __end_of_isr 0E8E                _time_segment_coding 0851  
          get_day_data@day_segment 004C                           ??___bmul 0049  
                       init_fetch0 0CCA                        __pdataBANK0 005A  
            __size_of_init_timer_1 000A                           ??_strcpy 0049  
                         ??_strlen 004A                          ___latbits 0001  
                    __pcstackBANK0 0044                  __size_of_get_time 002D  
                     _current_time 0060                       _init_timer_1 0C8F  
                 ___lwdiv@dividend 004A                        _day_segment 0042  
                         ?___lwdiv 0048                           ?___lwmod 0048  
                      _bit_counter 003F                  __size_of_spi_init 000B  
                        __pstrings 0800                      ??_minute_gone 0048  
                        _make_time 02D1                           ?_new_bit 004C  
                        _gpio_init 0CBB                   ___lwdiv@quotient 004D  
                        _new_value 0036                  interrupt_function 0004  
                        clear_ram0 0C87              _get_time_data_seconds 079E  
                        _uart_init 0CA4          get_date_data@date_segment 0050  
                      __stringbase 0805                       _parity_hours 003B  
                       ?_make_time 0050                         ?_gpio_init 0044  
              __end_of_minute_gone 0F40             __size_of_get_date_data 00F8  
                       ?_uart_init 0044                   __size_of___lwdiv 0046  
                 __size_of___lwmod 003C                 __end_of__stringtab 0806  
                 __size_of_new_bit 02A2                    ___lwdiv@divisor 0048  
                  ___lwdiv@counter 004F                           __ptext10 0CBB  
                         __ptext11 079E                           __ptext12 0F40  
                         __ptext13 0D2E                           __ptext14 0DDD  
                         __ptext15 0CDB                           __ptext16 06A6  
                         __ptext17 0D5B                           __ptext18 0D97  
                         __ptext19 0E29             make_time@written_bytes 0056  
                         _get_time 0D2E                         strcpy@from 0048  
                         _max_days 0845                           _last_one 005A  
           ?_get_time_data_seconds 0050                      __size_of_main 01AE  
                    __size_of_init 0015             __size_of_get_time_data 00C0  
                         _week_day 0830                           _spi_init 0C99  
                      _parity_date 003A                           _tmp_time 002C  
                    _get_date_data 06A6                        ??_make_time 0051  
                      _minute_gone 0E8E                         _INTCONbits 000B  
                      ??_gpio_init 0000                           init_ram0 0CCE  
                         intlevel1 0000                   ___lwmod@dividend 004A  
      __end_of_date_segment_coding 0865                          stringcode 0800  
       __end_of_day_segment_coding 0830                        ??_uart_init 0000  
                   ?_get_date_data 0050                      _get_time_data 0F40  
                  ___lwmod@divisor 0048                           strcpy@cp 004A  
                         strlen@cp 004C                           strcpy@to 004B  
                  ___lwmod@counter 004D                           stringdir 0800  
                         stringtab 0800                      ?_get_day_data 004C  
